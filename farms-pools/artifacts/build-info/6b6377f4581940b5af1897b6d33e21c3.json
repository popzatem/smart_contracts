{
	"id": "6b6377f4581940b5af1897b6d33e21c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"farms-pools/LandbaseLockPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n\r\nimport \"./access/Ownable.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\nimport \"./SafeERC20.sol\";\r\nimport \"./utils/Pausable.sol\";\r\nimport \"./interfaces/IMasterChef.sol\";\r\n\r\ncontract LandbaseLockPool is Ownable, Pausable {\r\n    using SafeERC20 for IERC20;\r\n    using SafeMath for uint256;\r\n\r\n    struct UserInfo {\r\n        uint256 shares; // number of shares for a user\r\n        uint256 lastDepositedTime; // keeps track of deposited time for potential penalty\r\n        uint256 cakeAtLastUserAction; // keeps track of cake deposited at the last user action\r\n        uint256 lastUserActionTime; // keeps track of the last user action time\r\n    }\r\n    //IFO\r\n    struct UserIFOInfo {\r\n        // ifo valid period is current block between startblock and endblock\r\n        uint256 lastActionBalance; // staked cake numbers (not include compoud cake) at last action\r\n        uint256 lastValidActionBalance; // staked cake numbers in ifo valid period\r\n        uint256 lastActionBlock; //  last action block number \r\n        uint256 lastValidActionBlock; // last action block number in ifo valid period\r\n        uint256 lastAvgBalance; // average balance in ifo valid period\r\n    }\r\n\r\n    enum IFOActions {Deposit, Withdraw}\r\n\r\n    IERC20 public immutable token; // Cake token\r\n    IERC20 public immutable receiptToken; // Syrup token\r\n\r\n    IMasterChef public immutable masterchef;\r\n\r\n    mapping(address => UserInfo) public userInfo;\r\n    //IFO\r\n    mapping(address =>  UserIFOInfo) public userIFOInfo;\r\n\r\n    uint256 public startBlock;\r\n    uint256 public endBlock;\r\n\r\n    uint256 public totalShares;\r\n    uint256 public lastHarvestedTime;\r\n    address public admin;\r\n    address public treasury;\r\n\r\n    uint256 public constant MAX_PERFORMANCE_FEE = 600; // 6%\r\n    uint256 public constant MAX_CALL_FEE = 100; // 1%\r\n    uint256 public constant MAX_WITHDRAW_FEE = 400; // 4%\r\n    uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 168 hours; // 7 days\r\n\r\n    uint256 public performanceFee = 200; // 2%\r\n    uint256 public callFee = 25; // 0.25%\r\n    uint256 public withdrawFee = 10; // 0.1%\r\n    uint256 public withdrawFeePeriod = 72 hours; // 3 days\r\n\r\n    event Pause();\r\n    event Unpause();\r\n    event Deposit(address indexed sender, uint256 amount, uint256 shares, uint256 lastDepositedTime);\r\n    event Withdraw(address indexed sender, uint256 amount, uint256 shares);\r\n    event Harvest(address indexed sender, uint256 performanceFee, uint256 callFee);\r\n    event UpdateEndBlock(uint256 endBlock);\r\n    event ZeroFreeIFO(address indexed sender, uint256 currentBlock);\r\n    event UpdateStartAndEndBlocks(uint256 startBlock, uint256 endBlock);\r\n    event UpdateUserIFO(address indexed sender, uint256 lastAvgBalance, uint256 lastActionBalance, uint256 lastValidActionBalance, uint256 lastActionBlock, uint256 lastValidActionBlock);\r\n\r\n    /**\r\n     * @notice Constructor\r\n     * @param _token: Cake token contract\r\n     * @param _receiptToken: Syrup token contract\r\n     * @param _masterchef: MasterChef contract\r\n     * @param _admin: address of the admin\r\n     * @param _treasury: address of the treasury (collects fees)\r\n     * @param _startBlock: IFO start block height\r\n     * @param _endBlock: IFO end block height\r\n     */\r\n    constructor(\r\n        IERC20 _token,\r\n        IERC20 _receiptToken,\r\n        IMasterChef _masterchef,\r\n        address _admin,\r\n        address _treasury,\r\n        uint256 _startBlock,\r\n        uint256 _endBlock\r\n    ) public {\r\n        require(block.number < _startBlock, \"start block can't behind current block\");\r\n        require(_startBlock < _endBlock, \"end block can't behind start block\");\r\n\r\n        token = _token;\r\n        receiptToken = _receiptToken;\r\n        masterchef = _masterchef;\r\n        admin = _admin;\r\n        treasury = _treasury;\r\n        startBlock = _startBlock;\r\n        endBlock = _endBlock;\r\n\r\n        // Infinite approve\r\n        IERC20(_token).safeApprove(address(_masterchef), uint256(-1));\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if the msg.sender is the admin address\r\n     */\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"admin: wut?\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if the msg.sender is a contract or a proxy\r\n     */\r\n    modifier notContract() {\r\n        require(!_isContract(msg.sender), \"contract not allowed\");\r\n        require(msg.sender == tx.origin, \"proxy contract not allowed\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Deposits funds into the Cake Vault\r\n     * @dev Only possible when contract not paused.\r\n     * @param _amount: number of tokens to deposit (in CAKE)\r\n     */\r\n    function deposit(uint256 _amount) external whenNotPaused notContract {\r\n        require(_amount > 0, \"Nothing to deposit\");\r\n\r\n        uint256 pool = balanceOf();\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        uint256 currentShares = 0;\r\n        if (totalShares != 0) {\r\n            currentShares = (_amount.mul(totalShares)).div(pool);\r\n        } else {\r\n            currentShares = _amount;\r\n        }\r\n        require(currentShares > 0, \"deposit amount is too small to allocate shares\");\r\n\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        \r\n        user.shares = user.shares.add(currentShares);\r\n        user.lastDepositedTime = block.timestamp;\r\n\r\n        totalShares = totalShares.add(currentShares);\r\n\r\n        user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares);\r\n        user.lastUserActionTime = block.timestamp;\r\n        //IFO\r\n        _updateUserIFO(_amount, IFOActions.Deposit);\r\n\r\n        _earn();\r\n\r\n        emit Deposit(msg.sender, _amount, currentShares, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice check IFO is avaliable\r\n     * @dev This function will be called that need to calculate average balance\r\n     */\r\n    function _isIFOAvailable() internal view returns(bool) {\r\n        // actually block.number = startBlock is ifo available status\r\n        // but the avgbalance must be zero, so we don't add this boundary\r\n        return block.number > startBlock;\r\n    }\r\n\r\n    /**\r\n     * @notice This function only be called to judge whether to update last action block.\r\n     * @dev only block number between start block and end block to update last action block.\r\n     */\r\n    function _isValidActionBlock() internal view returns(bool) {\r\n        return block.number >= startBlock && block.number <= endBlock;\r\n    }\r\n\r\n     /**\r\n     * @notice calculate user IFO latest avgBalance.\r\n     * @dev only calculate average balance when IFO is available, other return 0.\r\n     * @param _lastActionBlock: last action(deposit/withdraw) block number.\r\n     * @param _lastValidActionBlock: last valid action(deposit/withdraw) block number.\r\n     * @param _lastActionBalance: last valid action(deposit/withdraw) block number.\r\n     * @param _lastValidActionBalance: staked cake number at last action.\r\n     * @param _lastAvgBalance: last average balance.\r\n     */\r\n    function _calculateAvgBalance(uint256  _lastActionBlock, uint256  _lastValidActionBlock, uint256 _lastActionBalance, uint256  _lastValidActionBalance, uint256 _lastAvgBalance) internal view returns(uint256 avgBalance) {\r\n        uint256 currentBlock = block.number; //reused\r\n\r\n        // (_lastActionBlock > endBlock) means lastavgbalance have updated after endblock,\r\n        // subsequent action should not update lastavgbalance again\r\n        if (_lastActionBlock >= endBlock){\r\n            return _lastAvgBalance;\r\n        }\r\n        \r\n        // first time participate current ifo\r\n        if (_lastValidActionBlock < startBlock){\r\n            _lastValidActionBlock = startBlock;\r\n            _lastAvgBalance = 0;\r\n            _lastValidActionBalance = _lastActionBalance;\r\n        }\r\n\r\n        currentBlock = currentBlock < endBlock ?  currentBlock : endBlock;\r\n\r\n        uint256 lastContribute  = _lastAvgBalance.mul(_lastValidActionBlock.sub(startBlock));\r\n        uint256 currentContribute  = _lastValidActionBalance.mul(currentBlock.sub(_lastValidActionBlock));\r\n        avgBalance = (lastContribute.add(currentContribute)).div(currentBlock.sub(startBlock));\r\n    }\r\n\r\n    /**\r\n     * @notice update userIFOInfo\r\n     * @param _amount:the cake amount that need be add or sub\r\n     * @param _action:IFOActions enum element\r\n     */\r\n    function _updateUserIFO(uint256 _amount, IFOActions _action) internal {\r\n        UserIFOInfo storage IFOInfo = userIFOInfo[msg.sender];\r\n        \r\n        uint256 avgBalance = !_isIFOAvailable() ? 0 : _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance);\r\n        \r\n        if (_action == IFOActions.Withdraw){\r\n            IFOInfo.lastActionBalance = _amount > IFOInfo.lastActionBalance ? 0 : IFOInfo.lastActionBalance.sub(_amount);\r\n        }else{\r\n            IFOInfo.lastActionBalance = IFOInfo.lastActionBalance.add(_amount);\r\n        }\r\n\r\n        if (_isValidActionBlock()) {\r\n             IFOInfo.lastValidActionBalance = IFOInfo.lastActionBalance;\r\n             IFOInfo.lastValidActionBlock =  block.number;\r\n        }\r\n        \r\n        IFOInfo.lastAvgBalance = avgBalance;\r\n        IFOInfo.lastActionBlock = block.number;\r\n        emit UpdateUserIFO(msg.sender, IFOInfo.lastAvgBalance, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock);\r\n    }\r\n\r\n    /**\r\n     * @notice calculate IFO latest average balance for specific user\r\n     * @param _user: user address\r\n     */\r\n    function getUserCredit(address _user) external view returns(uint256 avgBalance) {\r\n        UserIFOInfo storage IFOInfo = userIFOInfo[_user];\r\n        \r\n        if (_isIFOAvailable()){\r\n            avgBalance = _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance);\r\n        }else{\r\n             avgBalance = 0;   \r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws all funds for a user\r\n     */\r\n    function withdrawAll() external notContract {\r\n        withdraw(userInfo[msg.sender].shares);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws user all funds in emergency,it's called by user not admin,the userifo status will be clear\r\n     */\r\n    function emergencyWithdrawAll() external notContract {\r\n        _zeroFreeIFO();\r\n        withdrawV1(userInfo[msg.sender].shares);\r\n    }\r\n\r\n    /**\r\n     * @notice set userIFOInfo to initial state\r\n     */\r\n    function _zeroFreeIFO() internal {\r\n        UserIFOInfo storage IFOInfo = userIFOInfo[msg.sender];\r\n\r\n        IFOInfo.lastActionBalance = 0;\r\n        IFOInfo.lastValidActionBalance = 0;\r\n        IFOInfo.lastActionBlock = 0;\r\n        IFOInfo.lastValidActionBlock = 0;\r\n        IFOInfo.lastAvgBalance = 0;\r\n        \r\n        emit ZeroFreeIFO(msg.sender, block.number);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws from funds from the IFOPool\r\n     * @param _shares: Number of shares to withdraw\r\n     */\r\n    function withdraw(uint256 _shares) public notContract {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(_shares > 0, \"Nothing to withdraw\");\r\n        require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n\r\n        uint256 currentAmount = (balanceOf().mul(_shares)).div(totalShares);\r\n        uint256 ifoDeductAmount = currentAmount;\r\n        user.shares = user.shares.sub(_shares);\r\n        totalShares = totalShares.sub(_shares);\r\n\r\n        uint256 bal = available();\r\n        if (bal < currentAmount) {\r\n            uint256 balWithdraw = currentAmount.sub(bal);\r\n            IMasterChef(masterchef).leaveStaking(balWithdraw);\r\n            uint256 balAfter = available();\r\n            uint256 diff = balAfter.sub(bal);\r\n            if (diff < balWithdraw) {\r\n                currentAmount = bal.add(diff);\r\n            }\r\n        }\r\n\r\n        if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r\n            uint256 currentWithdrawFee = currentAmount.mul(withdrawFee).div(10000);\r\n            token.safeTransfer(treasury, currentWithdrawFee);\r\n            currentAmount = currentAmount.sub(currentWithdrawFee);\r\n        }\r\n\r\n        if (user.shares > 0) {\r\n            user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares);\r\n        } else {\r\n            user.cakeAtLastUserAction = 0;\r\n        }\r\n\r\n        user.lastUserActionTime = block.timestamp;\r\n        \r\n        //IFO\r\n        _updateUserIFO(ifoDeductAmount, IFOActions.Withdraw);\r\n\r\n        token.safeTransfer(msg.sender, currentAmount);\r\n\r\n        emit Withdraw(msg.sender, currentAmount, _shares);\r\n    }\r\n\r\n    /**\r\n     * @notice original Withdraws implementation from funds, the logic same as Cake Vault withdraw\r\n     * @notice this function visibility change to internal, call only be called by 'emergencyWithdrawAll' function\r\n     * @param _shares: Number of shares to withdraw\r\n     */\r\n    function withdrawV1(uint256 _shares) internal {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(_shares > 0, \"Nothing to withdraw\");\r\n        require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n\r\n        uint256 currentAmount = (balanceOf().mul(_shares)).div(totalShares);\r\n        user.shares = user.shares.sub(_shares);\r\n        totalShares = totalShares.sub(_shares);\r\n\r\n        uint256 bal = available();\r\n        if (bal < currentAmount) {\r\n            uint256 balWithdraw = currentAmount.sub(bal);\r\n            IMasterChef(masterchef).leaveStaking(balWithdraw);\r\n            uint256 balAfter = available();\r\n            uint256 diff = balAfter.sub(bal);\r\n            if (diff < balWithdraw) {\r\n                currentAmount = bal.add(diff);\r\n            }\r\n        }\r\n\r\n        if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r\n            uint256 currentWithdrawFee = currentAmount.mul(withdrawFee).div(10000);\r\n            token.safeTransfer(treasury, currentWithdrawFee);\r\n            currentAmount = currentAmount.sub(currentWithdrawFee);\r\n        }\r\n\r\n        if (user.shares > 0) {\r\n            user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares);\r\n        } else {\r\n            user.cakeAtLastUserAction = 0;\r\n        }\r\n\r\n        user.lastUserActionTime = block.timestamp;\r\n\r\n        token.safeTransfer(msg.sender, currentAmount);\r\n\r\n        emit Withdraw(msg.sender, currentAmount, _shares);\r\n    }\r\n\r\n    /**\r\n     * @notice Reinvests CAKE tokens into MasterChef\r\n     * @dev Only possible when contract not paused.\r\n     */\r\n    function harvest() external notContract whenNotPaused {\r\n        uint256 beforeBal = available();\r\n        IMasterChef(masterchef).leaveStaking(0);\r\n        uint256 bal = available().sub(beforeBal);\r\n\r\n        uint256 currentPerformanceFee = bal.mul(performanceFee).div(10000);\r\n        token.safeTransfer(treasury, currentPerformanceFee);\r\n\r\n        uint256 currentCallFee = bal.mul(callFee).div(10000);\r\n        token.safeTransfer(msg.sender, currentCallFee);\r\n\r\n        _earn();\r\n\r\n        lastHarvestedTime = block.timestamp;\r\n\r\n        emit Harvest(msg.sender, currentPerformanceFee, currentCallFee);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets admin address\r\n     * @dev Only callable by the contract owner.\r\n     */\r\n    function setAdmin(address _admin) external onlyOwner {\r\n        require(_admin != address(0), \"Cannot be zero address\");\r\n        admin = _admin;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets treasury address\r\n     * @dev Only callable by the contract owner.\r\n     */\r\n    function setTreasury(address _treasury) external onlyOwner {\r\n        require(_treasury != address(0), \"Cannot be zero address\");\r\n        treasury = _treasury;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets performance fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r\n        require(_performanceFee <= MAX_PERFORMANCE_FEE, \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\");\r\n        performanceFee = _performanceFee;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets call fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setCallFee(uint256 _callFee) external onlyAdmin {\r\n        require(_callFee <= MAX_CALL_FEE, \"callFee cannot be more than MAX_CALL_FEE\");\r\n        callFee = _callFee;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets withdraw fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r\n        require(_withdrawFee <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\");\r\n        withdrawFee = _withdrawFee;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets withdraw fee period\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r\n        require(\r\n            _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD,\r\n            \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\"\r\n        );\r\n        withdrawFeePeriod = _withdrawFeePeriod;\r\n    }\r\n\r\n    /**\r\n     * @notice It allows the admin to update start and end blocks\r\n     * @dev This function is only callable by owner.\r\n     * @param _startBlock: the new start block\r\n     * @param _endBlock: the new end block\r\n     */\r\n    function updateStartAndEndBlocks(uint256 _startBlock, uint256 _endBlock) external onlyAdmin {\r\n        require(block.number < _startBlock, \"Pool current block must be lower than new startBlock\");\r\n        require(_startBlock < _endBlock, \"New startBlock must be lower than new endBlock\");\r\n\r\n        startBlock = _startBlock;\r\n        endBlock = _endBlock;\r\n\r\n        emit UpdateStartAndEndBlocks(_startBlock, _endBlock);\r\n    }\r\n\r\n    /**\r\n     * @notice It allows the admin to update end block\r\n     * @dev This function is only callable by owner.\r\n     * @param _endBlock: the new end block\r\n     */\r\n    function updateEndBlock(uint256 _endBlock) external onlyAdmin {\r\n        require(block.number < _endBlock, \"new end block can't behind current block\");\r\n        require(block.number < endBlock,  \"old end block can't behind current block\");\r\n\r\n        endBlock = _endBlock;\r\n\r\n        emit UpdateEndBlock(_endBlock);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws from MasterChef to Vault without caring about rewards.\r\n     * @dev EMERGENCY ONLY. Only callable by the contract admin.\r\n     */\r\n    function emergencyWithdraw() external onlyAdmin {\r\n        IMasterChef(masterchef).emergencyWithdraw(0);\r\n        if(!paused()){\r\n            _pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw unexpected tokens sent to the Cake Vault\r\n     */\r\n    function inCaseTokensGetStuck(address _token) external onlyAdmin {\r\n        require(_token != address(token), \"Token cannot be same as deposit token\");\r\n        require(_token != address(receiptToken), \"Token cannot be same as receipt token\");\r\n\r\n        uint256 amount = IERC20(_token).balanceOf(address(this));\r\n        IERC20(_token).safeTransfer(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Triggers stopped state\r\n     * @dev Only possible when contract not paused.\r\n     */\r\n    function pause() external onlyAdmin whenNotPaused {\r\n        _pause();\r\n        emit Pause();\r\n    }\r\n\r\n    /**\r\n     * @notice Returns to normal state\r\n     * @dev Only possible when contract is paused.\r\n     */\r\n    function unpause() external onlyAdmin whenPaused {\r\n        _unpause();\r\n        emit Unpause();\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the expected harvest reward from third party\r\n     * @return Expected reward to collect in CAKE\r\n     */\r\n    function calculateHarvestCakeRewards() external view returns (uint256) {\r\n        uint256 amount = IMasterChef(masterchef).pendingCake(0, address(this));\r\n        uint256 currentCallFee = amount.mul(callFee).div(10000);\r\n\r\n        return currentCallFee;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the total pending rewards that can be restaked\r\n     * @return Returns total pending cake rewards\r\n     */\r\n    function calculateTotalPendingCakeRewards() external view returns (uint256) {\r\n        uint256 amount = IMasterChef(masterchef).pendingCake(0, address(this));\r\n        amount = amount.add(available());\r\n\r\n        return amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the price per share\r\n     */\r\n    function getPricePerFullShare() external view returns (uint256) {\r\n        return totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares);\r\n    }\r\n\r\n    /**\r\n     * @notice Custom logic for how much the vault allows to be borrowed\r\n     * @dev The contract puts 100% of the tokens to work.\r\n     */\r\n    function available() public view returns (uint256) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the total underlying tokens\r\n     * @dev It includes tokens held by the contract and held in MasterChef\r\n     */\r\n    function balanceOf() public view returns (uint256) {\r\n        (uint256 amount, ) = IMasterChef(masterchef).userInfo(0, address(this));\r\n        return token.balanceOf(address(this)).add(amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Deposits tokens into MasterChef to earn staking rewards\r\n     */\r\n    function _earn() internal {\r\n        uint256 bal = available();\r\n        if (bal > 0) {\r\n            IMasterChef(masterchef).enterStaking(bal);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if address is a contract\r\n     * @dev It prevents contract from being targetted\r\n     */\r\n    function _isContract(address addr) internal view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(addr)\r\n        }\r\n        return size > 0;\r\n    }\r\n}"
			},
			"farms-pools/interfaces/IMasterChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n\r\ninterface IMasterChef {\r\n    function deposit(uint256 _pid, uint256 _amount) external;\r\n\r\n    function withdraw(uint256 _pid, uint256 _amount) external;\r\n\r\n    function enterStaking(uint256 _amount) external;\r\n\r\n    function leaveStaking(uint256 _amount) external;\r\n\r\n    function pendingCake(uint256 _pid, address _user) external view returns (uint256);\r\n\r\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\r\n\r\n    function emergencyWithdraw(uint256 _pid) external;\r\n}"
			},
			"farms-pools/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor () internal {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}"
			},
			"farms-pools/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\nimport \"./utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"farms-pools/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"farms-pools/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}"
			},
			"farms-pools/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"farms-pools/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.2 <0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"farms-pools/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"farms-pools/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/IERC20.sol\":{\"keccak256\":\"0x1cf8c1e1a8a8f60671d426bcedba75f5f0509dc74789e2d2475791c0596c33d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687bcf000696228ec0ab4f0a4a694c5d66386a03e3accb981882e44c267ecc2a\",\"dweb:/ipfs/QmbbfbCnBKTiqC1avw89kfA3wx8nmJWAWL7AAdu2p8DrHp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/LandbaseLockPool.sol": {
				"LandbaseLockPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_receiptToken",
									"type": "address"
								},
								{
									"internalType": "contract IMasterChef",
									"name": "_masterchef",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "performanceFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "callFee",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								}
							],
							"name": "UpdateEndBlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								}
							],
							"name": "UpdateStartAndEndBlocks",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastAvgBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastActionBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastValidActionBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastActionBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastValidActionBlock",
									"type": "uint256"
								}
							],
							"name": "UpdateUserIFO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBlock",
									"type": "uint256"
								}
							],
							"name": "ZeroFreeIFO",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_CALL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_PERFORMANCE_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WITHDRAW_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WITHDRAW_FEE_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateHarvestCakeRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateTotalPendingCakeRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserCredit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "avgBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "inCaseTokensGetStuck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHarvestedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "masterchef",
							"outputs": [
								{
									"internalType": "contract IMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "performanceFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiptToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_callFee",
									"type": "uint256"
								}
							],
							"name": "setCallFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_performanceFee",
									"type": "uint256"
								}
							],
							"name": "setPerformanceFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawFee",
									"type": "uint256"
								}
							],
							"name": "setWithdrawFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawFeePeriod",
									"type": "uint256"
								}
							],
							"name": "setWithdrawFeePeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								}
							],
							"name": "updateEndBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								}
							],
							"name": "updateStartAndEndBlocks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userIFOInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "lastActionBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastValidActionBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastActionBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastValidActionBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastAvgBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cakeAtLastUserAction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUserActionTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFeePeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"available()": {
								"details": "The contract puts 100% of the tokens to work."
							},
							"balanceOf()": {
								"details": "It includes tokens held by the contract and held in MasterChef"
							},
							"calculateHarvestCakeRewards()": {
								"returns": {
									"_0": "Expected reward to collect in CAKE"
								}
							},
							"calculateTotalPendingCakeRewards()": {
								"returns": {
									"_0": "Returns total pending cake rewards"
								}
							},
							"constructor": {
								"params": {
									"_admin": ": address of the admin",
									"_endBlock": ": IFO end block height",
									"_masterchef": ": MasterChef contract",
									"_receiptToken": ": Syrup token contract",
									"_startBlock": ": IFO start block height",
									"_token": ": Cake token contract",
									"_treasury": ": address of the treasury (collects fees)"
								}
							},
							"deposit(uint256)": {
								"details": "Only possible when contract not paused.",
								"params": {
									"_amount": ": number of tokens to deposit (in CAKE)"
								}
							},
							"emergencyWithdraw()": {
								"details": "EMERGENCY ONLY. Only callable by the contract admin."
							},
							"getUserCredit(address)": {
								"params": {
									"_user": ": user address"
								}
							},
							"harvest()": {
								"details": "Only possible when contract not paused."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Only possible when contract not paused."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAdmin(address)": {
								"details": "Only callable by the contract owner."
							},
							"setCallFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setPerformanceFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setTreasury(address)": {
								"details": "Only callable by the contract owner."
							},
							"setWithdrawFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setWithdrawFeePeriod(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Only possible when contract is paused."
							},
							"updateEndBlock(uint256)": {
								"details": "This function is only callable by owner.",
								"params": {
									"_endBlock": ": the new end block"
								}
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"details": "This function is only callable by owner.",
								"params": {
									"_endBlock": ": the new end block",
									"_startBlock": ": the new start block"
								}
							},
							"withdraw(uint256)": {
								"params": {
									"_shares": ": Number of shares to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/LandbaseLockPool.sol\":229:21848  contract LandbaseLockPool is Ownable, Pausable {\r... */\n  mstore(0x40, 0xe0)\n    /* \"farms-pools/LandbaseLockPool.sol\":2041:2044  200 */\n  0xc8\n    /* \"farms-pools/LandbaseLockPool.sol\":2009:2044  uint256 public performanceFee = 200 */\n  0x09\n  sstore\n    /* \"farms-pools/LandbaseLockPool.sol\":2082:2084  25 */\n  0x19\n    /* \"farms-pools/LandbaseLockPool.sol\":2057:2084  uint256 public callFee = 25 */\n  0x0a\n  sstore\n    /* \"farms-pools/LandbaseLockPool.sol\":2129:2131  10 */\n  0x0a\n    /* \"farms-pools/LandbaseLockPool.sol\":2100:2131  uint256 public withdrawFee = 10 */\n  0x0b\n  sstore\n    /* \"farms-pools/LandbaseLockPool.sol\":2181:2189  72 hours */\n  0x03f480\n    /* \"farms-pools/LandbaseLockPool.sol\":2146:2189  uint256 public withdrawFeePeriod = 72 hours */\n  0x0c\n  sstore\n    /* \"farms-pools/LandbaseLockPool.sol\":3290:4019  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0xe0\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"farms-pools/access/Ownable.sol\":910:927  address msgSender */\n  0x00\n    /* \"farms-pools/access/Ownable.sol\":930:942  _msgSender() */\n  tag_7\n    /* \"farms-pools/access/Ownable.sol\":930:940  _msgSender */\n  shl(0x20, tag_8)\n    /* \"farms-pools/access/Ownable.sol\":930:942  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"farms-pools/access/Ownable.sol\":910:942  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"farms-pools/access/Ownable.sol\":962:971  msgSender */\n  dup1\n    /* \"farms-pools/access/Ownable.sol\":953:959  _owner */\n  0x00\n  dup1\n    /* \"farms-pools/access/Ownable.sol\":953:971  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/access/Ownable.sol\":1020:1029  msgSender */\n  dup1\n    /* \"farms-pools/access/Ownable.sol\":987:1030  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"farms-pools/access/Ownable.sol\":1016:1017  0 */\n  0x00\n    /* \"farms-pools/access/Ownable.sol\":987:1030  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"farms-pools/access/Ownable.sol\":875:1038  constructor () internal {\r... */\n  pop\n    /* \"farms-pools/utils/Pausable.sol\":977:982  false */\n  0x00\n    /* \"farms-pools/utils/Pausable.sol\":967:974  _paused */\n  dup1\n  0x14\n    /* \"farms-pools/utils/Pausable.sol\":967:982  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3550:3561  _startBlock */\n  dup2\n    /* \"farms-pools/LandbaseLockPool.sol\":3535:3547  block.number */\n  number\n    /* \"farms-pools/LandbaseLockPool.sol\":3535:3561  block.number < _startBlock */\n  lt\n    /* \"farms-pools/LandbaseLockPool.sol\":3527:3604  require(block.number < _startBlock, \"start block can't behind current block\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_506f1b59863f183c6ac4f29f4cc284383ff9846bdae98e937f71108256fea9ea\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"farms-pools/LandbaseLockPool.sol\":3637:3646  _endBlock */\n  dup1\n    /* \"farms-pools/LandbaseLockPool.sol\":3623:3634  _startBlock */\n  dup3\n    /* \"farms-pools/LandbaseLockPool.sol\":3623:3646  _startBlock < _endBlock */\n  lt\n    /* \"farms-pools/LandbaseLockPool.sol\":3615:3685  require(_startBlock < _endBlock, \"end block can't behind start block\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_e7e60fff60ba5b691ce03013041a838e37a54104910525ca5ef5521e8edc3e12\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"farms-pools/LandbaseLockPool.sol\":3706:3712  _token */\n  dup7\n    /* \"farms-pools/LandbaseLockPool.sol\":3698:3712  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3738:3751  _receiptToken */\n  dup6\n    /* \"farms-pools/LandbaseLockPool.sol\":3723:3751  receiptToken = _receiptToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3775:3786  _masterchef */\n  dup5\n    /* \"farms-pools/LandbaseLockPool.sol\":3762:3786  masterchef = _masterchef */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3805:3811  _admin */\n  dup4\n    /* \"farms-pools/LandbaseLockPool.sol\":3797:3802  admin */\n  0x07\n  0x00\n    /* \"farms-pools/LandbaseLockPool.sol\":3797:3811  admin = _admin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3833:3842  _treasury */\n  dup3\n    /* \"farms-pools/LandbaseLockPool.sol\":3822:3830  treasury */\n  0x08\n  0x00\n    /* \"farms-pools/LandbaseLockPool.sol\":3822:3842  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3866:3877  _startBlock */\n  dup2\n    /* \"farms-pools/LandbaseLockPool.sol\":3853:3863  startBlock */\n  0x03\n    /* \"farms-pools/LandbaseLockPool.sol\":3853:3877  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3899:3908  _endBlock */\n  dup1\n    /* \"farms-pools/LandbaseLockPool.sol\":3888:3896  endBlock */\n  0x04\n    /* \"farms-pools/LandbaseLockPool.sol\":3888:3908  endBlock = _endBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":3950:4011  IERC20(_token).safeApprove(address(_masterchef), uint256(-1)) */\n  tag_13\n    /* \"farms-pools/LandbaseLockPool.sol\":3985:3996  _masterchef */\n  dup6\n    /* \"farms-pools/LandbaseLockPool.sol\":4007:4009  -1 */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"farms-pools/LandbaseLockPool.sol\":3957:3963  _token */\n  dup10\n    /* \"farms-pools/LandbaseLockPool.sol\":3950:3976  IERC20(_token).safeApprove */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_163, shl(0x20, tag_14))\n  swap1\n    /* \"farms-pools/LandbaseLockPool.sol\":3950:4011  IERC20(_token).safeApprove(address(_masterchef), uint256(-1)) */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"farms-pools/LandbaseLockPool.sol\":3290:4019  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"farms-pools/LandbaseLockPool.sol\":229:21848  contract LandbaseLockPool is Ownable, Pausable {\r... */\n  jump(tag_15)\n    /* \"farms-pools/utils/Context.sol\":613:719  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_8:\n    /* \"farms-pools/utils/Context.sol\":666:681  address payable */\n  0x00\n    /* \"farms-pools/utils/Context.sol\":701:711  msg.sender */\n  caller\n    /* \"farms-pools/utils/Context.sol\":694:711  return msg.sender */\n  swap1\n  pop\n    /* \"farms-pools/utils/Context.sol\":613:719  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"farms-pools/SafeERC20.sol\":1381:2003  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\ntag_14:\n    /* \"farms-pools/SafeERC20.sol\":1760:1761  0 */\n  0x00\n    /* \"farms-pools/SafeERC20.sol\":1751:1756  value */\n  dup2\n    /* \"farms-pools/SafeERC20.sol\":1751:1761  value == 0 */\n  eq\n    /* \"farms-pools/SafeERC20.sol\":1750:1812  (value == 0) || (token.allowance(address(this), spender) == 0) */\n  dup1\n  tag_18\n  jumpi\n  pop\n    /* \"farms-pools/SafeERC20.sol\":1810:1811  0 */\n  0x00\n    /* \"farms-pools/SafeERC20.sol\":1767:1772  token */\n  dup4\n    /* \"farms-pools/SafeERC20.sol\":1767:1782  token.allowance */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xdd62ed3e\n    /* \"farms-pools/SafeERC20.sol\":1791:1795  this */\n  address\n    /* \"farms-pools/SafeERC20.sol\":1798:1805  spender */\n  dup6\n    /* \"farms-pools/SafeERC20.sol\":1767:1806  token.allowance(address(this), spender) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup1\n  revert\ntag_19:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_21:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup1\n  revert\ntag_22:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"farms-pools/SafeERC20.sol\":1767:1811  token.allowance(address(this), spender) == 0 */\n  eq\n    /* \"farms-pools/SafeERC20.sol\":1750:1812  (value == 0) || (token.allowance(address(this), spender) == 0) */\ntag_18:\n    /* \"farms-pools/SafeERC20.sol\":1742:1894  require((value == 0) || (token.allowance(address(this), spender) == 0),\r... */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"farms-pools/SafeERC20.sol\":1905:1995  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  tag_24\n    /* \"farms-pools/SafeERC20.sol\":1925:1930  token */\n  dup4\n    /* \"farms-pools/SafeERC20.sol\":1955:1977  token.approve.selector */\n  shl(0xe0, 0x095ea7b3)\n    /* \"farms-pools/SafeERC20.sol\":1979:1986  spender */\n  dup5\n    /* \"farms-pools/SafeERC20.sol\":1988:1993  value */\n  dup5\n    /* \"farms-pools/SafeERC20.sol\":1932:1994  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  add(0x24, mload(0x40))\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"farms-pools/SafeERC20.sol\":1905:1924  _callOptionalReturn */\n  shl(0x20, tag_25)\n    /* \"farms-pools/SafeERC20.sol\":1905:1995  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"farms-pools/SafeERC20.sol\":1381:2003  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"farms-pools/SafeERC20.sol\":3027:3788  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\ntag_25:\n    /* \"farms-pools/SafeERC20.sol\":3451:3474  bytes memory returndata */\n  0x60\n    /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  tag_27\n    /* \"farms-pools/SafeERC20.sol\":3505:3509  data */\n  dup3\n    /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n    /* \"farms-pools/SafeERC20.sol\":3485:3490  token */\n  dup6\n    /* \"farms-pools/SafeERC20.sol\":3477:3504  address(token).functionCall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_164, shl(0x20, tag_28))\n  swap1\n    /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"farms-pools/SafeERC20.sol\":3451:3546  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap1\n  pop\n    /* \"farms-pools/SafeERC20.sol\":3581:3582  0 */\n  0x00\n    /* \"farms-pools/SafeERC20.sol\":3561:3571  returndata */\n  dup2\n    /* \"farms-pools/SafeERC20.sol\":3561:3578  returndata.length */\n  mload\n    /* \"farms-pools/SafeERC20.sol\":3561:3582  returndata.length > 0 */\n  gt\n    /* \"farms-pools/SafeERC20.sol\":3557:3781  if (returndata.length > 0) { // Return data is optional\r... */\n  iszero\n  tag_29\n  jumpi\n    /* \"farms-pools/SafeERC20.sol\":3703:3713  returndata */\n  dup1\n    /* \"farms-pools/SafeERC20.sol\":3692:3722  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  0x20\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup1\n  revert\ntag_30:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"farms-pools/SafeERC20.sol\":3684:3769  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n  0x2a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n    /* \"farms-pools/SafeERC20.sol\":3557:3781  if (returndata.length > 0) { // Return data is optional\r... */\ntag_29:\n    /* \"farms-pools/SafeERC20.sol\":3027:3788  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"farms-pools/utils/Address.sol\":3669:3864  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\ntag_28:\n    /* \"farms-pools/utils/Address.sol\":3772:3784  bytes memory */\n  0x60\n    /* \"farms-pools/utils/Address.sol\":3804:3856  functionCallWithValue(target, data, 0, errorMessage) */\n  tag_33\n    /* \"farms-pools/utils/Address.sol\":3826:3832  target */\n  dup5\n    /* \"farms-pools/utils/Address.sol\":3834:3838  data */\n  dup5\n    /* \"farms-pools/utils/Address.sol\":3840:3841  0 */\n  0x00\n    /* \"farms-pools/utils/Address.sol\":3843:3855  errorMessage */\n  dup6\n    /* \"farms-pools/utils/Address.sol\":3804:3825  functionCallWithValue */\n  shl(0x20, tag_34)\n    /* \"farms-pools/utils/Address.sol\":3804:3856  functionCallWithValue(target, data, 0, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"farms-pools/utils/Address.sol\":3797:3856  return functionCallWithValue(target, data, 0, errorMessage) */\n  swap1\n  pop\n    /* \"farms-pools/utils/Address.sol\":3669:3864  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"farms-pools/utils/Address.sol\":4721:5251  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\ntag_34:\n    /* \"farms-pools/utils/Address.sol\":4848:4860  bytes memory */\n  0x60\n    /* \"farms-pools/utils/Address.sol\":4906:4911  value */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":4881:4902  address(this).balance */\n  selfbalance\n    /* \"farms-pools/utils/Address.sol\":4881:4911  address(this).balance >= value */\n  lt\n  iszero\n    /* \"farms-pools/utils/Address.sol\":4873:4954  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_36:\n    /* \"farms-pools/utils/Address.sol\":4973:4991  isContract(target) */\n  tag_37\n    /* \"farms-pools/utils/Address.sol\":4984:4990  target */\n  dup6\n    /* \"farms-pools/utils/Address.sol\":4973:4983  isContract */\n  shl(0x20, tag_38)\n    /* \"farms-pools/utils/Address.sol\":4973:4991  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"farms-pools/utils/Address.sol\":4965:5025  require(isContract(target), \"Address: call to non-contract\") */\n  tag_39\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1d\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_39:\n    /* \"farms-pools/utils/Address.sol\":5099:5111  bool success */\n  0x00\n    /* \"farms-pools/utils/Address.sol\":5113:5136  bytes memory returndata */\n  0x60\n    /* \"farms-pools/utils/Address.sol\":5140:5146  target */\n  dup7\n    /* \"farms-pools/utils/Address.sol\":5140:5151  target.call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"farms-pools/utils/Address.sol\":5160:5165  value */\n  dup6\n    /* \"farms-pools/utils/Address.sol\":5168:5172  data */\n  dup8\n    /* \"farms-pools/utils/Address.sol\":5140:5173  target.call{ value: value }(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_40:\n  0x20\n  dup4\n  lt\n  tag_42\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  0x20\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  0x20\n  dup4\n  sub\n  swap3\n  pop\n  jump(tag_40)\ntag_42:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_45\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_44)\ntag_45:\n  0x60\n  swap2\n  pop\ntag_44:\n  pop\n    /* \"farms-pools/utils/Address.sol\":5098:5173  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"farms-pools/utils/Address.sol\":5191:5243  _verifyCallResult(success, returndata, errorMessage) */\n  tag_46\n    /* \"farms-pools/utils/Address.sol\":5209:5216  success */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":5218:5228  returndata */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":5230:5242  errorMessage */\n  dup7\n    /* \"farms-pools/utils/Address.sol\":5191:5208  _verifyCallResult */\n  shl(0x20, tag_47)\n    /* \"farms-pools/utils/Address.sol\":5191:5243  _verifyCallResult(success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"farms-pools/utils/Address.sol\":5184:5243  return _verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"farms-pools/utils/Address.sol\":4721:5251  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"farms-pools/utils/Address.sol\":751:1173  function isContract(address account) internal view returns (bool) {\r... */\ntag_38:\n    /* \"farms-pools/utils/Address.sol\":811:815  bool */\n  0x00\n    /* \"farms-pools/utils/Address.sol\":1019:1031  uint256 size */\n  dup1\n    /* \"farms-pools/utils/Address.sol\":1130:1137  account */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":1118:1138  extcodesize(account) */\n  extcodesize\n    /* \"farms-pools/utils/Address.sol\":1110:1138  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"farms-pools/utils/Address.sol\":1164:1165  0 */\n  0x00\n    /* \"farms-pools/utils/Address.sol\":1157:1161  size */\n  dup2\n    /* \"farms-pools/utils/Address.sol\":1157:1165  size > 0 */\n  gt\n    /* \"farms-pools/utils/Address.sol\":1150:1165  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"farms-pools/utils/Address.sol\":751:1173  function isContract(address account) internal view returns (bool) {\r... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"farms-pools/utils/Address.sol\":7261:8003  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\ntag_47:\n    /* \"farms-pools/utils/Address.sol\":7376:7388  bytes memory */\n  0x60\n    /* \"farms-pools/utils/Address.sol\":7405:7412  success */\n  dup4\n    /* \"farms-pools/utils/Address.sol\":7401:7996  if (success) {\r... */\n  iszero\n  tag_50\n  jumpi\n    /* \"farms-pools/utils/Address.sol\":7436:7446  returndata */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":7429:7446  return returndata */\n  swap1\n  pop\n  jump(tag_49)\n    /* \"farms-pools/utils/Address.sol\":7401:7996  if (success) {\r... */\ntag_50:\n    /* \"farms-pools/utils/Address.sol\":7570:7571  0 */\n  0x00\n    /* \"farms-pools/utils/Address.sol\":7550:7560  returndata */\n  dup4\n    /* \"farms-pools/utils/Address.sol\":7550:7567  returndata.length */\n  mload\n    /* \"farms-pools/utils/Address.sol\":7550:7571  returndata.length > 0 */\n  gt\n    /* \"farms-pools/utils/Address.sol\":7546:7985  if (returndata.length > 0) {\r... */\n  iszero\n  tag_52\n  jumpi\n    /* \"farms-pools/utils/Address.sol\":7813:7823  returndata */\n  dup3\n    /* \"farms-pools/utils/Address.sol\":7807:7824  mload(returndata) */\n  mload\n    /* \"farms-pools/utils/Address.sol\":7874:7889  returndata_size */\n  dup1\n    /* \"farms-pools/utils/Address.sol\":7861:7871  returndata */\n  dup5\n    /* \"farms-pools/utils/Address.sol\":7857:7859  32 */\n  0x20\n    /* \"farms-pools/utils/Address.sol\":7853:7872  add(32, returndata) */\n  add\n    /* \"farms-pools/utils/Address.sol\":7846:7890  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"farms-pools/utils/Address.sol\":7761:7909  {\r... */\ntag_52:\n    /* \"farms-pools/utils/Address.sol\":7956:7968  errorMessage */\n  dup2\n    /* \"farms-pools/utils/Address.sol\":7949:7969  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_54:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_56\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_54)\ntag_56:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_57\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_57:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"farms-pools/utils/Address.sol\":7261:8003  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\ntag_49:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"farms-pools/LandbaseLockPool.sol\":229:21848  contract LandbaseLockPool is Ownable, Pausable {\r... */\ntag_15:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n  assignImmutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n  assignImmutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_506f1b59863f183c6ac4f29f4cc284383ff9846bdae98e937f71108256fea9ea 737461727420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b\ndata_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\ndata_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\ndata_e7e60fff60ba5b691ce03013041a838e37a54104910525ca5ef5521e8edc3e12 656e6420626c6f636b2063616e277420626568696e6420737461727420626c6f636b\ndata_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\nsub_0: assembly {\n        /* \"farms-pools/LandbaseLockPool.sol\":229:21848  contract LandbaseLockPool is Ownable, Pausable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x853828b6\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xdad6f0dc\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xec78e832\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xec78e832\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xfb1db278\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_48\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0xdad6f0dc\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdd191719\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdef68a9c\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xdf10b4e6\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xe941fa78\n      eq\n      tag_42\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x9d72596b\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x9d72596b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb60f0531\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb6ac642a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xbdca9165\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd4b0de2f\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x853828b6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x87788782\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x90321e1a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x9513997f\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x4641257d\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x704b6c02\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70897b23\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x77c7b8fc\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_54:\n      dup1\n      0x4641257d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x48a0d754\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x58ebceb6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x26465826\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x26465826\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2ad5a53f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2cfc5f01\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3a98ef39\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_55:\n      dup1\n      0x6f0231\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06f5a745\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x083c6323\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1efac1b8\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"farms-pools/LandbaseLockPool.sol\":18049:18371  function updateEndBlock(uint256 _endBlock) external onlyAdmin {\r... */\n    tag_3:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":1500:1551  mapping(address =>  UserIFOInfo) public userIFOInfo */\n    tag_4:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1592:1615  uint256 public endBlock */\n    tag_5:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1438:1482  mapping(address => UserInfo) public userInfo */\n    tag_6:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":16901:17202  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r... */\n    tag_7:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":16278:16460  function setCallFee(uint256 _callFee) external onlyAdmin {\r... */\n    tag_8:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":1817:1859  uint256 public constant MAX_CALL_FEE = 100 */\n    tag_9:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1931:1990  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 168 hours */\n    tag_10:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":11095:12739  function withdraw(uint256 _shares) public notContract {\r... */\n    tag_11:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":1624:1650  uint256 public totalShares */\n    tag_12:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":19518:19621  function unpause() external onlyAdmin whenPaused {\r... */\n    tag_13:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":14665:15277  function harvest() external notContract whenNotPaused {\r... */\n    tag_14:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":20801:20908  function available() public view returns (uint256) {\r... */\n    tag_15:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1560:1585  uint256 public startBlock */\n    tag_16:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":20181:20415  function calculateTotalPendingCakeRewards() external view returns (uint256) {\r... */\n    tag_17:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/utils/Pausable.sol\":1090:1176  function paused() public view virtual returns (bool) {\r... */\n    tag_18:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1723:1746  address public treasury */\n    tag_19:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":15388:15540  function setAdmin(address _admin) external onlyOwner {\r... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":15934:16172  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"farms-pools/access/Ownable.sol\":1770:1918  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_22:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":21065:21266  function balanceOf() public view returns (uint256) {\r... */\n    tag_23:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":20488:20642  function getPricePerFullShare() external view returns (uint256) {\r... */\n    tag_24:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":19300:19400  function pause() external onlyAdmin whenNotPaused {\r... */\n    tag_25:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":10135:10235  function withdrawAll() external notContract {\r... */\n    tag_26:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":2009:2044  uint256 public performanceFee = 200 */\n    tag_27:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/access/Ownable.sol\":1119:1206  function owner() public view virtual returns (address) {\r... */\n    tag_28:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":2057:2084  uint256 public callFee = 25 */\n    tag_29:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":17441:17869  function updateStartAndEndBlocks(uint256 _startBlock, uint256 _endBlock) external onlyAdmin {\r... */\n    tag_30:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":19770:20030  function calculateHarvestCakeRewards() external view returns (uint256) {\r... */\n    tag_31:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1657:1689  uint256 public lastHarvestedTime */\n    tag_32:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":16570:16784  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r... */\n    tag_33:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":4670:5733  function deposit(uint256 _amount) external whenNotPaused notContract {\r... */\n    tag_34:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":1755:1804  uint256 public constant MAX_PERFORMANCE_FEE = 600 */\n    tag_35:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1872:1918  uint256 public constant MAX_WITHDRAW_FEE = 400 */\n    tag_36:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":9626:10062  function getUserCredit(address _user) external view returns(uint256 avgBalance) {\r... */\n    tag_37:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_137\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":18544:18713  function emergencyWithdraw() external onlyAdmin {\r... */\n    tag_38:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":10378:10514  function emergencyWithdrawAll() external notContract {\r... */\n    tag_39:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":18805:19182  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n    tag_40:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":2146:2189  uint256 public withdrawFeePeriod = 72 hours */\n    tag_41:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":2100:2131  uint256 public withdrawFee = 10 */\n    tag_42:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1330:1366  IERC20 public immutable receiptToken */\n    tag_43:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":15654:15821  function setTreasury(address _treasury) external onlyOwner {\r... */\n    tag_44:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"farms-pools/access/Ownable.sol\":2073:2317  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_45:\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"farms-pools/LandbaseLockPool.sol\":1696:1716  address public admin */\n    tag_46:\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1390:1429  IMasterChef public immutable masterchef */\n    tag_47:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":1280:1309  IERC20 public immutable token */\n    tag_48:\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farms-pools/LandbaseLockPool.sol\":18049:18371  function updateEndBlock(uint256 _endBlock) external onlyAdmin {\r... */\n    tag_58:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"farms-pools/LandbaseLockPool.sol\":18145:18154  _endBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":18130:18142  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":18130:18154  block.number < _endBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":18122:18199  require(block.number < _endBlock, \"new end block can't behind current block\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6d2e0ee418a4fa9636bc860d0410414c2f3bb829ed67581046f589a0e038df7e\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"farms-pools/LandbaseLockPool.sol\":18233:18241  endBlock */\n      sload(0x04)\n        /* \"farms-pools/LandbaseLockPool.sol\":18218:18230  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":18218:18241  block.number < endBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":18210:18287  require(block.number < endBlock,  \"old end block can't behind current block\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e10f87a14096ac956401d5f800040ab40e68d1d271dcb4693c1df00be0147b71\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"farms-pools/LandbaseLockPool.sol\":18311:18320  _endBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":18300:18308  endBlock */\n      0x04\n        /* \"farms-pools/LandbaseLockPool.sol\":18300:18320  endBlock = _endBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":18338:18363  UpdateEndBlock(_endBlock) */\n      0x72a01621587849e39c667eb81696643997f818c6c286614cd1497e5ef2e9ecd6\n        /* \"farms-pools/LandbaseLockPool.sol\":18353:18362  _endBlock */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":18338:18363  UpdateEndBlock(_endBlock) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/LandbaseLockPool.sol\":18049:18371  function updateEndBlock(uint256 _endBlock) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1500:1551  mapping(address =>  UserIFOInfo) public userIFOInfo */\n    tag_61:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1592:1615  uint256 public endBlock */\n    tag_63:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1438:1482  mapping(address => UserInfo) public userInfo */\n    tag_66:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":16901:17202  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r... */\n    tag_69:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"farms-pools/LandbaseLockPool.sol\":1981:1990  168 hours */\n      0x093a80\n        /* \"farms-pools/LandbaseLockPool.sol\":17011:17029  _withdrawFeePeriod */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":17011:17056  _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":16989:17145  require(\r... */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850\n      0x3d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"farms-pools/LandbaseLockPool.sol\":17176:17194  _withdrawFeePeriod */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":17156:17173  withdrawFeePeriod */\n      0x0c\n        /* \"farms-pools/LandbaseLockPool.sol\":17156:17194  withdrawFeePeriod = _withdrawFeePeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":16901:17202  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":16278:16460  function setCallFee(uint256 _callFee) external onlyAdmin {\r... */\n    tag_72:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"farms-pools/LandbaseLockPool.sol\":1856:1859  100 */\n      0x64\n        /* \"farms-pools/LandbaseLockPool.sol\":16354:16362  _callFee */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":16354:16378  _callFee <= MAX_CALL_FEE */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":16346:16423  require(_callFee <= MAX_CALL_FEE, \"callFee cannot be more than MAX_CALL_FEE\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5f4afedb5cb4c613eb925791e30905bbaa67a23ed369aa450ccf1eb0e08c07ff\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"farms-pools/LandbaseLockPool.sol\":16444:16452  _callFee */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":16434:16441  callFee */\n      0x0a\n        /* \"farms-pools/LandbaseLockPool.sol\":16434:16452  callFee = _callFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":16278:16460  function setCallFee(uint256 _callFee) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1817:1859  uint256 public constant MAX_CALL_FEE = 100 */\n    tag_74:\n        /* \"farms-pools/LandbaseLockPool.sol\":1856:1859  100 */\n      0x64\n        /* \"farms-pools/LandbaseLockPool.sol\":1817:1859  uint256 public constant MAX_CALL_FEE = 100 */\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1931:1990  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 168 hours */\n    tag_76:\n        /* \"farms-pools/LandbaseLockPool.sol\":1981:1990  168 hours */\n      0x093a80\n        /* \"farms-pools/LandbaseLockPool.sol\":1931:1990  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 168 hours */\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":11095:12739  function withdraw(uint256 _shares) public notContract {\r... */\n    tag_79:\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      tag_179\n        /* \"farms-pools/LandbaseLockPool.sol\":4349:4359  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4348  _isContract */\n      tag_180\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      jump\t// in\n    tag_179:\n        /* \"farms-pools/LandbaseLockPool.sol\":4336:4360  !_isContract(msg.sender) */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":4328:4385  require(!_isContract(msg.sender), \"contract not allowed\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e7472616374206e6f7420616c6c6f776564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"farms-pools/LandbaseLockPool.sol\":4418:4427  tx.origin */\n      origin\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4414  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4396:4458  require(msg.sender == tx.origin, \"proxy contract not allowed\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"farms-pools/LandbaseLockPool.sol\":11160:11181  UserInfo storage user */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11184:11192  userInfo */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":11184:11204  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11193:11203  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":11184:11204  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":11160:11204  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11233:11234  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11223:11230  _shares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11223:11234  _shares > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":11215:11258  require(_shares > 0, \"Nothing to withdraw\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"farms-pools/LandbaseLockPool.sol\":11288:11292  user */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":11288:11299  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":11277:11284  _shares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11277:11299  _shares <= user.shares */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":11269:11335  require(_shares <= user.shares, \"Withdraw amount exceeds balance\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"farms-pools/LandbaseLockPool.sol\":11348:11369  uint256 currentAmount */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11372:11415  (balanceOf().mul(_shares)).div(totalShares) */\n      tag_186\n        /* \"farms-pools/LandbaseLockPool.sol\":11403:11414  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11397  balanceOf().mul(_shares) */\n      tag_187\n        /* \"farms-pools/LandbaseLockPool.sol\":11389:11396  _shares */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11384  balanceOf() */\n      tag_188\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11382  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11384  balanceOf() */\n      jump\t// in\n    tag_188:\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11388  balanceOf().mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11373:11397  balanceOf().mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"farms-pools/LandbaseLockPool.sol\":11372:11402  (balanceOf().mul(_shares)).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11372:11415  (balanceOf().mul(_shares)).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"farms-pools/LandbaseLockPool.sol\":11348:11415  uint256 currentAmount = (balanceOf().mul(_shares)).div(totalShares) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11426:11449  uint256 ifoDeductAmount */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11452:11465  currentAmount */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":11426:11465  uint256 ifoDeductAmount = currentAmount */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11490:11514  user.shares.sub(_shares) */\n      tag_191\n        /* \"farms-pools/LandbaseLockPool.sol\":11506:11513  _shares */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":11490:11494  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":11490:11501  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":11490:11505  user.shares.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11490:11514  user.shares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"farms-pools/LandbaseLockPool.sol\":11476:11480  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":11476:11487  user.shares */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":11476:11514  user.shares = user.shares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11539:11563  totalShares.sub(_shares) */\n      tag_193\n        /* \"farms-pools/LandbaseLockPool.sol\":11555:11562  _shares */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":11539:11550  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":11539:11554  totalShares.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11539:11563  totalShares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"farms-pools/LandbaseLockPool.sol\":11525:11536  totalShares */\n      0x05\n        /* \"farms-pools/LandbaseLockPool.sol\":11525:11563  totalShares = totalShares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11576:11587  uint256 bal */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11590:11601  available() */\n      tag_194\n        /* \"farms-pools/LandbaseLockPool.sol\":11590:11599  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":11590:11601  available() */\n      jump\t// in\n    tag_194:\n        /* \"farms-pools/LandbaseLockPool.sol\":11576:11601  uint256 bal = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11622:11635  currentAmount */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11616:11619  bal */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":11616:11635  bal < currentAmount */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":11612:11966  if (bal < currentAmount) {\r... */\n      iszero\n      tag_195\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":11652:11671  uint256 balWithdraw */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11674:11696  currentAmount.sub(bal) */\n      tag_196\n        /* \"farms-pools/LandbaseLockPool.sol\":11692:11695  bal */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11674:11687  currentAmount */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":11674:11691  currentAmount.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11674:11696  currentAmount.sub(bal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"farms-pools/LandbaseLockPool.sol\":11652:11696  uint256 balWithdraw = currentAmount.sub(bal) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11723:11733  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":11711:11747  IMasterChef(masterchef).leaveStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1058d281\n        /* \"farms-pools/LandbaseLockPool.sol\":11748:11759  balWithdraw */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11711:11760  IMasterChef(masterchef).leaveStaking(balWithdraw) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11775:11791  uint256 balAfter */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11794:11805  available() */\n      tag_200\n        /* \"farms-pools/LandbaseLockPool.sol\":11794:11803  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":11794:11805  available() */\n      jump\t// in\n    tag_200:\n        /* \"farms-pools/LandbaseLockPool.sol\":11775:11805  uint256 balAfter = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11820:11832  uint256 diff */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":11835:11852  balAfter.sub(bal) */\n      tag_201\n        /* \"farms-pools/LandbaseLockPool.sol\":11848:11851  bal */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":11835:11843  balAfter */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":11835:11847  balAfter.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11835:11852  balAfter.sub(bal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"farms-pools/LandbaseLockPool.sol\":11820:11852  uint256 diff = balAfter.sub(bal) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11878:11889  balWithdraw */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":11871:11875  diff */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":11871:11889  diff < balWithdraw */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":11867:11955  if (diff < balWithdraw) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":11926:11939  bal.add(diff) */\n      tag_203\n        /* \"farms-pools/LandbaseLockPool.sol\":11934:11938  diff */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":11926:11929  bal */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":11926:11933  bal.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":11926:11939  bal.add(diff) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"farms-pools/LandbaseLockPool.sol\":11910:11939  currentAmount = bal.add(diff) */\n      swap6\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11867:11955  if (diff < balWithdraw) {\r... */\n    tag_202:\n        /* \"farms-pools/LandbaseLockPool.sol\":11612:11966  if (bal < currentAmount) {\r... */\n      pop\n      pop\n      pop\n    tag_195:\n        /* \"farms-pools/LandbaseLockPool.sol\":12000:12045  user.lastDepositedTime.add(withdrawFeePeriod) */\n      tag_205\n        /* \"farms-pools/LandbaseLockPool.sol\":12027:12044  withdrawFeePeriod */\n      sload(0x0c)\n        /* \"farms-pools/LandbaseLockPool.sol\":12000:12004  user */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":12000:12022  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":12000:12026  user.lastDepositedTime.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12000:12045  user.lastDepositedTime.add(withdrawFeePeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"farms-pools/LandbaseLockPool.sol\":11982:11997  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":11982:12045  block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod) */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":11978:12275  if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      iszero\n      tag_206\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":12062:12088  uint256 currentWithdrawFee */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12132  currentAmount.mul(withdrawFee).div(10000) */\n      tag_207\n        /* \"farms-pools/LandbaseLockPool.sol\":12126:12131  10000 */\n      0x2710\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12121  currentAmount.mul(withdrawFee) */\n      tag_208\n        /* \"farms-pools/LandbaseLockPool.sol\":12109:12120  withdrawFee */\n      sload(0x0b)\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12104  currentAmount */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12108  currentAmount.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12121  currentAmount.mul(withdrawFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12125  currentAmount.mul(withdrawFee).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12091:12132  currentAmount.mul(withdrawFee).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"farms-pools/LandbaseLockPool.sol\":12062:12132  uint256 currentWithdrawFee = currentAmount.mul(withdrawFee).div(10000) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":12147:12195  token.safeTransfer(treasury, currentWithdrawFee) */\n      tag_209\n        /* \"farms-pools/LandbaseLockPool.sol\":12166:12174  treasury */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":12176:12194  currentWithdrawFee */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":12147:12152  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":12147:12165  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12147:12195  token.safeTransfer(treasury, currentWithdrawFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"farms-pools/LandbaseLockPool.sol\":12226:12263  currentAmount.sub(currentWithdrawFee) */\n      tag_211\n        /* \"farms-pools/LandbaseLockPool.sol\":12244:12262  currentWithdrawFee */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":12226:12239  currentAmount */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":12226:12243  currentAmount.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12226:12263  currentAmount.sub(currentWithdrawFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"farms-pools/LandbaseLockPool.sol\":12210:12263  currentAmount = currentAmount.sub(currentWithdrawFee) */\n      swap4\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11978:12275  if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      pop\n    tag_206:\n        /* \"farms-pools/LandbaseLockPool.sol\":12305:12306  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":12291:12295  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12291:12302  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":12291:12306  user.shares > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":12287:12470  if (user.shares > 0) {\r... */\n      iszero\n      tag_212\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12396  user.shares.mul(balanceOf()).div(totalShares) */\n      tag_213\n        /* \"farms-pools/LandbaseLockPool.sol\":12384:12395  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12379  user.shares.mul(balanceOf()) */\n      tag_214\n        /* \"farms-pools/LandbaseLockPool.sol\":12367:12378  balanceOf() */\n      tag_215\n        /* \"farms-pools/LandbaseLockPool.sol\":12367:12376  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":12367:12378  balanceOf() */\n      jump\t// in\n    tag_215:\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12355  user */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12362  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12366  user.shares.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12379  user.shares.mul(balanceOf()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12383  user.shares.mul(balanceOf()).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12351:12396  user.shares.mul(balanceOf()).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"farms-pools/LandbaseLockPool.sol\":12323:12327  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12323:12348  user.cakeAtLastUserAction */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":12323:12396  user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":12287:12470  if (user.shares > 0) {\r... */\n      jump(tag_216)\n    tag_212:\n        /* \"farms-pools/LandbaseLockPool.sol\":12457:12458  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":12429:12433  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12429:12454  user.cakeAtLastUserAction */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":12429:12458  user.cakeAtLastUserAction = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":12287:12470  if (user.shares > 0) {\r... */\n    tag_216:\n        /* \"farms-pools/LandbaseLockPool.sol\":12508:12523  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":12482:12486  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12482:12505  user.lastUserActionTime */\n      0x03\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":12482:12523  user.lastUserActionTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":12559:12611  _updateUserIFO(ifoDeductAmount, IFOActions.Withdraw) */\n      tag_217\n        /* \"farms-pools/LandbaseLockPool.sol\":12574:12589  ifoDeductAmount */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":12591:12610  IFOActions.Withdraw */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":12559:12573  _updateUserIFO */\n      tag_218\n        /* \"farms-pools/LandbaseLockPool.sol\":12559:12611  _updateUserIFO(ifoDeductAmount, IFOActions.Withdraw) */\n      jump\t// in\n    tag_217:\n        /* \"farms-pools/LandbaseLockPool.sol\":12624:12669  token.safeTransfer(msg.sender, currentAmount) */\n      tag_219\n        /* \"farms-pools/LandbaseLockPool.sol\":12643:12653  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":12655:12668  currentAmount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12624:12629  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":12624:12642  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":12624:12669  token.safeTransfer(msg.sender, currentAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"farms-pools/LandbaseLockPool.sol\":12696:12706  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":12687:12731  Withdraw(msg.sender, currentAmount, _shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"farms-pools/LandbaseLockPool.sol\":12708:12721  currentAmount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":12723:12730  _shares */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":12687:12731  Withdraw(msg.sender, currentAmount, _shares) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/LandbaseLockPool.sol\":4469:4470  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":11095:12739  function withdraw(uint256 _shares) public notContract {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1624:1650  uint256 public totalShares */\n    tag_81:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":19518:19621  function unpause() external onlyAdmin whenPaused {\r... */\n    tag_83:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"farms-pools/utils/Pausable.sol\":1693:1701  paused() */\n      tag_223\n        /* \"farms-pools/utils/Pausable.sol\":1693:1699  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1693:1701  paused() */\n      jump\t// in\n    tag_223:\n        /* \"farms-pools/utils/Pausable.sol\":1685:1726  require(paused(), \"Pausable: not paused\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"farms-pools/LandbaseLockPool.sol\":19578:19588  _unpause() */\n      tag_226\n        /* \"farms-pools/LandbaseLockPool.sol\":19578:19586  _unpause */\n      tag_227\n        /* \"farms-pools/LandbaseLockPool.sol\":19578:19588  _unpause() */\n      jump\t// in\n    tag_226:\n        /* \"farms-pools/LandbaseLockPool.sol\":19604:19613  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/LandbaseLockPool.sol\":19518:19621  function unpause() external onlyAdmin whenPaused {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":14665:15277  function harvest() external notContract whenNotPaused {\r... */\n    tag_85:\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      tag_229\n        /* \"farms-pools/LandbaseLockPool.sol\":4349:4359  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4348  _isContract */\n      tag_180\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      jump\t// in\n    tag_229:\n        /* \"farms-pools/LandbaseLockPool.sol\":4336:4360  !_isContract(msg.sender) */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":4328:4385  require(!_isContract(msg.sender), \"contract not allowed\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e7472616374206e6f7420616c6c6f776564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"farms-pools/LandbaseLockPool.sol\":4418:4427  tx.origin */\n      origin\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4414  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4396:4458  require(msg.sender == tx.origin, \"proxy contract not allowed\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      tag_233\n        /* \"farms-pools/utils/Pausable.sol\":1416:1422  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      jump\t// in\n    tag_233:\n        /* \"farms-pools/utils/Pausable.sol\":1415:1424  !paused() */\n      iszero\n        /* \"farms-pools/utils/Pausable.sol\":1407:1445  require(!paused(), \"Pausable: paused\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"farms-pools/LandbaseLockPool.sol\":14730:14747  uint256 beforeBal */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14750:14761  available() */\n      tag_236\n        /* \"farms-pools/LandbaseLockPool.sol\":14750:14759  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":14750:14761  available() */\n      jump\t// in\n    tag_236:\n        /* \"farms-pools/LandbaseLockPool.sol\":14730:14761  uint256 beforeBal = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14784:14794  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":14772:14808  IMasterChef(masterchef).leaveStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1058d281\n        /* \"farms-pools/LandbaseLockPool.sol\":14809:14810  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14772:14811  IMasterChef(masterchef).leaveStaking(0) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14822:14833  uint256 bal */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14862  available().sub(beforeBal) */\n      tag_240\n        /* \"farms-pools/LandbaseLockPool.sol\":14852:14861  beforeBal */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14847  available() */\n      tag_241\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14845  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14847  available() */\n      jump\t// in\n    tag_241:\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14851  available().sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14836:14862  available().sub(beforeBal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"farms-pools/LandbaseLockPool.sol\":14822:14862  uint256 bal = available().sub(beforeBal) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14875:14904  uint256 currentPerformanceFee */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14941  bal.mul(performanceFee).div(10000) */\n      tag_242\n        /* \"farms-pools/LandbaseLockPool.sol\":14935:14940  10000 */\n      0x2710\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14930  bal.mul(performanceFee) */\n      tag_243\n        /* \"farms-pools/LandbaseLockPool.sol\":14915:14929  performanceFee */\n      sload(0x09)\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14910  bal */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14914  bal.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14930  bal.mul(performanceFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14934  bal.mul(performanceFee).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14907:14941  bal.mul(performanceFee).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"farms-pools/LandbaseLockPool.sol\":14875:14941  uint256 currentPerformanceFee = bal.mul(performanceFee).div(10000) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14952:15003  token.safeTransfer(treasury, currentPerformanceFee) */\n      tag_244\n        /* \"farms-pools/LandbaseLockPool.sol\":14971:14979  treasury */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":14981:15002  currentPerformanceFee */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":14952:14957  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":14952:14970  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14952:15003  token.safeTransfer(treasury, currentPerformanceFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"farms-pools/LandbaseLockPool.sol\":15016:15038  uint256 currentCallFee */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15068  bal.mul(callFee).div(10000) */\n      tag_245\n        /* \"farms-pools/LandbaseLockPool.sol\":15062:15067  10000 */\n      0x2710\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15057  bal.mul(callFee) */\n      tag_246\n        /* \"farms-pools/LandbaseLockPool.sol\":15049:15056  callFee */\n      sload(0x0a)\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15044  bal */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15048  bal.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15057  bal.mul(callFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15061  bal.mul(callFee).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":15041:15068  bal.mul(callFee).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"farms-pools/LandbaseLockPool.sol\":15016:15068  uint256 currentCallFee = bal.mul(callFee).div(10000) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":15079:15125  token.safeTransfer(msg.sender, currentCallFee) */\n      tag_247\n        /* \"farms-pools/LandbaseLockPool.sol\":15098:15108  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":15110:15124  currentCallFee */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":15079:15084  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":15079:15097  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":15079:15125  token.safeTransfer(msg.sender, currentCallFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"farms-pools/LandbaseLockPool.sol\":15138:15145  _earn() */\n      tag_248\n        /* \"farms-pools/LandbaseLockPool.sol\":15138:15143  _earn */\n      tag_249\n        /* \"farms-pools/LandbaseLockPool.sol\":15138:15145  _earn() */\n      jump\t// in\n    tag_248:\n        /* \"farms-pools/LandbaseLockPool.sol\":15178:15193  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":15158:15175  lastHarvestedTime */\n      0x06\n        /* \"farms-pools/LandbaseLockPool.sol\":15158:15193  lastHarvestedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":15219:15229  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":15211:15269  Harvest(msg.sender, currentPerformanceFee, currentCallFee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954\n        /* \"farms-pools/LandbaseLockPool.sol\":15231:15252  currentPerformanceFee */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":15254:15268  currentCallFee */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":15211:15269  Harvest(msg.sender, currentPerformanceFee, currentCallFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/utils/Pausable.sol\":1456:1457  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14665:15277  function harvest() external notContract whenNotPaused {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":20801:20908  function available() public view returns (uint256) {\r... */\n    tag_87:\n        /* \"farms-pools/LandbaseLockPool.sol\":20843:20850  uint256 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":20870:20875  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":20870:20885  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"farms-pools/LandbaseLockPool.sol\":20894:20898  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":20870:20900  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20863:20900  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20801:20908  function available() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1560:1585  uint256 public startBlock */\n    tag_89:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":20181:20415  function calculateTotalPendingCakeRewards() external view returns (uint256) {\r... */\n    tag_91:\n        /* \"farms-pools/LandbaseLockPool.sol\":20248:20255  uint256 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":20268:20282  uint256 amount */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":20297:20307  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":20285:20320  IMasterChef(masterchef).pendingCake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1175a1dd\n        /* \"farms-pools/LandbaseLockPool.sol\":20321:20322  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":20332:20336  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":20285:20338  IMasterChef(masterchef).pendingCake(0, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20268:20338  uint256 amount = IMasterChef(masterchef).pendingCake(0, address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20358:20381  amount.add(available()) */\n      tag_260\n        /* \"farms-pools/LandbaseLockPool.sol\":20369:20380  available() */\n      tag_261\n        /* \"farms-pools/LandbaseLockPool.sol\":20369:20378  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":20369:20380  available() */\n      jump\t// in\n    tag_261:\n        /* \"farms-pools/LandbaseLockPool.sol\":20358:20364  amount */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":20358:20368  amount.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":20358:20381  amount.add(available()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"farms-pools/LandbaseLockPool.sol\":20349:20381  amount = amount.add(available()) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20401:20407  amount */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":20394:20407  return amount */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20181:20415  function calculateTotalPendingCakeRewards() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/utils/Pausable.sol\":1090:1176  function paused() public view virtual returns (bool) {\r... */\n    tag_93:\n        /* \"farms-pools/utils/Pausable.sol\":1137:1141  bool */\n      0x00\n        /* \"farms-pools/utils/Pausable.sol\":1161:1168  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"farms-pools/utils/Pausable.sol\":1154:1168  return _paused */\n      swap1\n      pop\n        /* \"farms-pools/utils/Pausable.sol\":1090:1176  function paused() public view virtual returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1723:1746  address public treasury */\n    tag_95:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":15388:15540  function setAdmin(address _admin) external onlyOwner {\r... */\n    tag_98:\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      tag_264\n        /* \"farms-pools/access/Ownable.sol\":1350:1360  _msgSender */\n      tag_265\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      tag_266\n        /* \"farms-pools/access/Ownable.sol\":1339:1344  owner */\n      tag_115\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      jump\t// in\n    tag_266:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/access/Ownable.sol\":1331:1399  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"farms-pools/LandbaseLockPool.sol\":15478:15479  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":15460:15480  _admin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":15460:15466  _admin */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":15460:15480  _admin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":15452:15507  require(_admin != address(0), \"Cannot be zero address\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74206265207a65726f206164647265737300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"farms-pools/LandbaseLockPool.sol\":15526:15532  _admin */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":15518:15523  admin */\n      0x07\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":15518:15532  admin = _admin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":15388:15540  function setAdmin(address _admin) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":15934:16172  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r... */\n    tag_101:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"farms-pools/LandbaseLockPool.sol\":1801:1804  600 */\n      0x0258\n        /* \"farms-pools/LandbaseLockPool.sol\":16024:16039  _performanceFee */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":16024:16062  _performanceFee <= MAX_PERFORMANCE_FEE */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":16016:16121  require(_performanceFee <= MAX_PERFORMANCE_FEE, \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"farms-pools/LandbaseLockPool.sol\":16149:16164  _performanceFee */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":16132:16146  performanceFee */\n      0x09\n        /* \"farms-pools/LandbaseLockPool.sol\":16132:16164  performanceFee = _performanceFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":15934:16172  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/access/Ownable.sol\":1770:1918  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_103:\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      tag_275\n        /* \"farms-pools/access/Ownable.sol\":1350:1360  _msgSender */\n      tag_265\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      tag_276\n        /* \"farms-pools/access/Ownable.sol\":1339:1344  owner */\n      tag_115\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      jump\t// in\n    tag_276:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/access/Ownable.sol\":1331:1399  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"farms-pools/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"farms-pools/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"farms-pools/access/Ownable.sol\":1908:1909  0 */\n      0x00\n        /* \"farms-pools/access/Ownable.sol\":1891:1897  _owner */\n      dup1\n      0x00\n        /* \"farms-pools/access/Ownable.sol\":1891:1910  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/access/Ownable.sol\":1770:1918  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":21065:21266  function balanceOf() public view returns (uint256) {\r... */\n    tag_105:\n        /* \"farms-pools/LandbaseLockPool.sol\":21107:21114  uint256 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21128:21142  uint256 amount */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":21160:21170  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":21148:21180  IMasterChef(masterchef).userInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x93f1a40b\n        /* \"farms-pools/LandbaseLockPool.sol\":21181:21182  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21192:21196  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":21148:21198  IMasterChef(masterchef).userInfo(0, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21127:21198  (uint256 amount, ) = IMasterChef(masterchef).userInfo(0, address(this)) */\n      pop\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21258  token.balanceOf(address(this)).add(amount) */\n      tag_284\n        /* \"farms-pools/LandbaseLockPool.sol\":21251:21257  amount */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21221  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21231  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"farms-pools/LandbaseLockPool.sol\":21240:21244  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21246  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_285:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21250  token.balanceOf(address(this)).add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":21216:21258  token.balanceOf(address(this)).add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"farms-pools/LandbaseLockPool.sol\":21209:21258  return token.balanceOf(address(this)).add(amount) */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21065:21266  function balanceOf() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":20488:20642  function getPricePerFullShare() external view returns (uint256) {\r... */\n    tag_107:\n        /* \"farms-pools/LandbaseLockPool.sol\":20543:20550  uint256 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":20585:20586  0 */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":20570:20581  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":20570:20586  totalShares == 0 */\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":20570:20634  totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares) */\n      tag_290\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20634  balanceOf().mul(1e18).div(totalShares) */\n      tag_291\n        /* \"farms-pools/LandbaseLockPool.sol\":20622:20633  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20617  balanceOf().mul(1e18) */\n      tag_292\n        /* \"farms-pools/LandbaseLockPool.sol\":20612:20616  1e18 */\n      0x0de0b6b3a7640000\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20607  balanceOf() */\n      tag_293\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20605  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20607  balanceOf() */\n      jump\t// in\n    tag_293:\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20611  balanceOf().mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20617  balanceOf().mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20621  balanceOf().mul(1e18).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":20596:20634  balanceOf().mul(1e18).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"farms-pools/LandbaseLockPool.sol\":20570:20634  totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares) */\n      jump(tag_294)\n    tag_290:\n        /* \"farms-pools/LandbaseLockPool.sol\":20589:20593  1e18 */\n      0x0de0b6b3a7640000\n        /* \"farms-pools/LandbaseLockPool.sol\":20570:20634  totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares) */\n    tag_294:\n        /* \"farms-pools/LandbaseLockPool.sol\":20563:20634  return totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20488:20642  function getPricePerFullShare() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":19300:19400  function pause() external onlyAdmin whenNotPaused {\r... */\n    tag_109:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      tag_298\n        /* \"farms-pools/utils/Pausable.sol\":1416:1422  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      jump\t// in\n    tag_298:\n        /* \"farms-pools/utils/Pausable.sol\":1415:1424  !paused() */\n      iszero\n        /* \"farms-pools/utils/Pausable.sol\":1407:1445  require(!paused(), \"Pausable: paused\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"farms-pools/LandbaseLockPool.sol\":19361:19369  _pause() */\n      tag_301\n        /* \"farms-pools/LandbaseLockPool.sol\":19361:19367  _pause */\n      tag_302\n        /* \"farms-pools/LandbaseLockPool.sol\":19361:19369  _pause() */\n      jump\t// in\n    tag_301:\n        /* \"farms-pools/LandbaseLockPool.sol\":19385:19392  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/LandbaseLockPool.sol\":19300:19400  function pause() external onlyAdmin whenNotPaused {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":10135:10235  function withdrawAll() external notContract {\r... */\n    tag_111:\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      tag_304\n        /* \"farms-pools/LandbaseLockPool.sol\":4349:4359  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4348  _isContract */\n      tag_180\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      jump\t// in\n    tag_304:\n        /* \"farms-pools/LandbaseLockPool.sol\":4336:4360  !_isContract(msg.sender) */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":4328:4385  require(!_isContract(msg.sender), \"contract not allowed\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e7472616374206e6f7420616c6c6f776564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"farms-pools/LandbaseLockPool.sol\":4418:4427  tx.origin */\n      origin\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4414  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4396:4458  require(msg.sender == tx.origin, \"proxy contract not allowed\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"farms-pools/LandbaseLockPool.sol\":10190:10227  withdraw(userInfo[msg.sender].shares) */\n      tag_308\n        /* \"farms-pools/LandbaseLockPool.sol\":10199:10207  userInfo */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":10199:10219  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10208:10218  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":10199:10219  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":10199:10226  userInfo[msg.sender].shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":10190:10198  withdraw */\n      tag_79\n        /* \"farms-pools/LandbaseLockPool.sol\":10190:10227  withdraw(userInfo[msg.sender].shares) */\n      jump\t// in\n    tag_308:\n        /* \"farms-pools/LandbaseLockPool.sol\":10135:10235  function withdrawAll() external notContract {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":2009:2044  uint256 public performanceFee = 200 */\n    tag_113:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"farms-pools/access/Ownable.sol\":1119:1206  function owner() public view virtual returns (address) {\r... */\n    tag_115:\n        /* \"farms-pools/access/Ownable.sol\":1165:1172  address */\n      0x00\n        /* \"farms-pools/access/Ownable.sol\":1192:1198  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1185:1198  return _owner */\n      swap1\n      pop\n        /* \"farms-pools/access/Ownable.sol\":1119:1206  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":2057:2084  uint256 public callFee = 25 */\n    tag_117:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":17441:17869  function updateStartAndEndBlocks(uint256 _startBlock, uint256 _endBlock) external onlyAdmin {\r... */\n    tag_120:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"farms-pools/LandbaseLockPool.sol\":17567:17578  _startBlock */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":17552:17564  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":17552:17578  block.number < _startBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":17544:17635  require(block.number < _startBlock, \"Pool current block must be lower than new startBlock\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c9c3e461d0a427a4e9ec61c7672ef5d0872b7afe41af330c564d77d66b5b728b\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"farms-pools/LandbaseLockPool.sol\":17668:17677  _endBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":17654:17665  _startBlock */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":17654:17677  _startBlock < _endBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":17646:17728  require(_startBlock < _endBlock, \"New startBlock must be lower than new endBlock\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"farms-pools/LandbaseLockPool.sol\":17754:17765  _startBlock */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":17741:17751  startBlock */\n      0x03\n        /* \"farms-pools/LandbaseLockPool.sol\":17741:17765  startBlock = _startBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":17787:17796  _endBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":17776:17784  endBlock */\n      0x04\n        /* \"farms-pools/LandbaseLockPool.sol\":17776:17796  endBlock = _endBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":17814:17861  UpdateStartAndEndBlocks(_startBlock, _endBlock) */\n      0x053462fec8f17a9d662e3778a6027b6c0c1ac0da2390a991aa33cb3aa60cae4e\n        /* \"farms-pools/LandbaseLockPool.sol\":17838:17849  _startBlock */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":17851:17860  _endBlock */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":17814:17861  UpdateStartAndEndBlocks(_startBlock, _endBlock) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/LandbaseLockPool.sol\":17441:17869  function updateStartAndEndBlocks(uint256 _startBlock, uint256 _endBlock) external onlyAdmin {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":19770:20030  function calculateHarvestCakeRewards() external view returns (uint256) {\r... */\n    tag_122:\n        /* \"farms-pools/LandbaseLockPool.sol\":19832:19839  uint256 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":19852:19866  uint256 amount */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":19881:19891  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":19869:19904  IMasterChef(masterchef).pendingCake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1175a1dd\n        /* \"farms-pools/LandbaseLockPool.sol\":19905:19906  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":19916:19920  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":19869:19922  IMasterChef(masterchef).pendingCake(0, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_316:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_319\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_319:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":19852:19922  uint256 amount = IMasterChef(masterchef).pendingCake(0, address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":19933:19955  uint256 currentCallFee */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19988  amount.mul(callFee).div(10000) */\n      tag_320\n        /* \"farms-pools/LandbaseLockPool.sol\":19982:19987  10000 */\n      0x2710\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19977  amount.mul(callFee) */\n      tag_321\n        /* \"farms-pools/LandbaseLockPool.sol\":19969:19976  callFee */\n      sload(0x0a)\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19964  amount */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19968  amount.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19977  amount.mul(callFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19981  amount.mul(callFee).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":19958:19988  amount.mul(callFee).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"farms-pools/LandbaseLockPool.sol\":19933:19988  uint256 currentCallFee = amount.mul(callFee).div(10000) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":20008:20022  currentCallFee */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":20001:20022  return currentCallFee */\n      swap3\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":19770:20030  function calculateHarvestCakeRewards() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1657:1689  uint256 public lastHarvestedTime */\n    tag_124:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":16570:16784  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r... */\n    tag_127:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"farms-pools/LandbaseLockPool.sol\":1915:1918  400 */\n      0x0190\n        /* \"farms-pools/LandbaseLockPool.sol\":16654:16666  _withdrawFee */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":16654:16686  _withdrawFee <= MAX_WITHDRAW_FEE */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":16646:16739  require(_withdrawFee <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"farms-pools/LandbaseLockPool.sol\":16764:16776  _withdrawFee */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":16750:16761  withdrawFee */\n      0x0b\n        /* \"farms-pools/LandbaseLockPool.sol\":16750:16776  withdrawFee = _withdrawFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":16570:16784  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":4670:5733  function deposit(uint256 _amount) external whenNotPaused notContract {\r... */\n    tag_130:\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      tag_327\n        /* \"farms-pools/utils/Pausable.sol\":1416:1422  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      jump\t// in\n    tag_327:\n        /* \"farms-pools/utils/Pausable.sol\":1415:1424  !paused() */\n      iszero\n        /* \"farms-pools/utils/Pausable.sol\":1407:1445  require(!paused(), \"Pausable: paused\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      tag_330\n        /* \"farms-pools/LandbaseLockPool.sol\":4349:4359  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4348  _isContract */\n      tag_180\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      jump\t// in\n    tag_330:\n        /* \"farms-pools/LandbaseLockPool.sol\":4336:4360  !_isContract(msg.sender) */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":4328:4385  require(!_isContract(msg.sender), \"contract not allowed\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e7472616374206e6f7420616c6c6f776564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"farms-pools/LandbaseLockPool.sol\":4418:4427  tx.origin */\n      origin\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4414  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4396:4458  require(msg.sender == tx.origin, \"proxy contract not allowed\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"farms-pools/LandbaseLockPool.sol\":4768:4769  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":4758:4765  _amount */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":4758:4769  _amount > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":4750:4792  require(_amount > 0, \"Nothing to deposit\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f206465706f7369740000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"farms-pools/LandbaseLockPool.sol\":4805:4817  uint256 pool */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":4820:4831  balanceOf() */\n      tag_335\n        /* \"farms-pools/LandbaseLockPool.sol\":4820:4829  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":4820:4831  balanceOf() */\n      jump\t// in\n    tag_335:\n        /* \"farms-pools/LandbaseLockPool.sol\":4805:4831  uint256 pool = balanceOf() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":4842:4900  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_336\n        /* \"farms-pools/LandbaseLockPool.sol\":4865:4875  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4885:4889  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":4892:4899  _amount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":4842:4847  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":4842:4864  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_337\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":4842:4900  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"farms-pools/LandbaseLockPool.sol\":4911:4932  uint256 currentShares */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":4966:4967  0 */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":4951:4962  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":4951:4967  totalShares != 0 */\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4947:5104  if (totalShares != 0) {\r... */\n      tag_338\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":5000:5036  (_amount.mul(totalShares)).div(pool) */\n      tag_339\n        /* \"farms-pools/LandbaseLockPool.sol\":5031:5035  pool */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":5001:5025  _amount.mul(totalShares) */\n      tag_340\n        /* \"farms-pools/LandbaseLockPool.sol\":5013:5024  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":5001:5008  _amount */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":5001:5012  _amount.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5001:5025  _amount.mul(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"farms-pools/LandbaseLockPool.sol\":5000:5030  (_amount.mul(totalShares)).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5000:5036  (_amount.mul(totalShares)).div(pool) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"farms-pools/LandbaseLockPool.sol\":4984:5036  currentShares = (_amount.mul(totalShares)).div(pool) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":4947:5104  if (totalShares != 0) {\r... */\n      jump(tag_341)\n    tag_338:\n        /* \"farms-pools/LandbaseLockPool.sol\":5085:5092  _amount */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":5069:5092  currentShares = _amount */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":4947:5104  if (totalShares != 0) {\r... */\n    tag_341:\n        /* \"farms-pools/LandbaseLockPool.sol\":5138:5139  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":5122:5135  currentShares */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":5122:5139  currentShares > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":5114:5190  require(currentShares > 0, \"deposit amount is too small to allocate shares\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a6806e6705a9ee3b0e0c4b8d8e7cb4e2da5d59db3275bba90220e3e7d15d16f8\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_342:\n        /* \"farms-pools/LandbaseLockPool.sol\":5203:5224  UserInfo storage user */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":5227:5235  userInfo */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":5227:5247  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":5236:5246  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":5227:5247  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":5203:5247  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5282:5312  user.shares.add(currentShares) */\n      tag_343\n        /* \"farms-pools/LandbaseLockPool.sol\":5298:5311  currentShares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":5282:5286  user */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":5282:5293  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":5282:5297  user.shares.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5282:5312  user.shares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_343:\n        /* \"farms-pools/LandbaseLockPool.sol\":5268:5272  user */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":5268:5279  user.shares */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":5268:5312  user.shares = user.shares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5348:5363  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":5323:5327  user */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":5323:5345  user.lastDepositedTime */\n      0x01\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":5323:5363  user.lastDepositedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5390:5420  totalShares.add(currentShares) */\n      tag_344\n        /* \"farms-pools/LandbaseLockPool.sol\":5406:5419  currentShares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":5390:5401  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":5390:5405  totalShares.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5390:5420  totalShares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_344:\n        /* \"farms-pools/LandbaseLockPool.sol\":5376:5387  totalShares */\n      0x05\n        /* \"farms-pools/LandbaseLockPool.sol\":5376:5420  totalShares = totalShares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5506  user.shares.mul(balanceOf()).div(totalShares) */\n      tag_345\n        /* \"farms-pools/LandbaseLockPool.sol\":5494:5505  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5489  user.shares.mul(balanceOf()) */\n      tag_346\n        /* \"farms-pools/LandbaseLockPool.sol\":5477:5488  balanceOf() */\n      tag_347\n        /* \"farms-pools/LandbaseLockPool.sol\":5477:5486  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":5477:5488  balanceOf() */\n      jump\t// in\n    tag_347:\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5465  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5472  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5476  user.shares.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5489  user.shares.mul(balanceOf()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_346:\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5493  user.shares.mul(balanceOf()).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":5461:5506  user.shares.mul(balanceOf()).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_345:\n        /* \"farms-pools/LandbaseLockPool.sol\":5433:5437  user */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":5433:5458  user.cakeAtLastUserAction */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":5433:5506  user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5543:5558  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":5517:5521  user */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":5517:5540  user.lastUserActionTime */\n      0x03\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":5517:5558  user.lastUserActionTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5584:5627  _updateUserIFO(_amount, IFOActions.Deposit) */\n      tag_348\n        /* \"farms-pools/LandbaseLockPool.sol\":5599:5606  _amount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":5608:5626  IFOActions.Deposit */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":5584:5598  _updateUserIFO */\n      tag_218\n        /* \"farms-pools/LandbaseLockPool.sol\":5584:5627  _updateUserIFO(_amount, IFOActions.Deposit) */\n      jump\t// in\n    tag_348:\n        /* \"farms-pools/LandbaseLockPool.sol\":5640:5647  _earn() */\n      tag_349\n        /* \"farms-pools/LandbaseLockPool.sol\":5640:5645  _earn */\n      tag_249\n        /* \"farms-pools/LandbaseLockPool.sol\":5640:5647  _earn() */\n      jump\t// in\n    tag_349:\n        /* \"farms-pools/LandbaseLockPool.sol\":5673:5683  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":5665:5725  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n        /* \"farms-pools/LandbaseLockPool.sol\":5685:5692  _amount */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":5694:5707  currentShares */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":5709:5724  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":5665:5725  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/LandbaseLockPool.sol\":4469:4470  _ */\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":4670:5733  function deposit(uint256 _amount) external whenNotPaused notContract {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1755:1804  uint256 public constant MAX_PERFORMANCE_FEE = 600 */\n    tag_132:\n        /* \"farms-pools/LandbaseLockPool.sol\":1801:1804  600 */\n      0x0258\n        /* \"farms-pools/LandbaseLockPool.sol\":1755:1804  uint256 public constant MAX_PERFORMANCE_FEE = 600 */\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1872:1918  uint256 public constant MAX_WITHDRAW_FEE = 400 */\n    tag_134:\n        /* \"farms-pools/LandbaseLockPool.sol\":1915:1918  400 */\n      0x0190\n        /* \"farms-pools/LandbaseLockPool.sol\":1872:1918  uint256 public constant MAX_WITHDRAW_FEE = 400 */\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":9626:10062  function getUserCredit(address _user) external view returns(uint256 avgBalance) {\r... */\n    tag_137:\n        /* \"farms-pools/LandbaseLockPool.sol\":9686:9704  uint256 avgBalance */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":9717:9744  UserIFOInfo storage IFOInfo */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":9747:9758  userIFOInfo */\n      0x02\n        /* \"farms-pools/LandbaseLockPool.sol\":9747:9765  userIFOInfo[_user] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":9759:9764  _user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":9747:9765  userIFOInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":9717:9765  UserIFOInfo storage IFOInfo = userIFOInfo[_user] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9790:9807  _isIFOAvailable() */\n      tag_351\n        /* \"farms-pools/LandbaseLockPool.sol\":9790:9805  _isIFOAvailable */\n      tag_352\n        /* \"farms-pools/LandbaseLockPool.sol\":9790:9807  _isIFOAvailable() */\n      jump\t// in\n    tag_351:\n        /* \"farms-pools/LandbaseLockPool.sol\":9786:10055  if (_isIFOAvailable()){\r... */\n      iszero\n      tag_353\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":9836:9994  _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      tag_354\n        /* \"farms-pools/LandbaseLockPool.sol\":9857:9864  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":9857:9880  IFOInfo.lastActionBlock */\n      0x02\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9882:9889  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":9882:9910  IFOInfo.lastValidActionBlock */\n      0x03\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9912:9919  IFOInfo */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":9912:9937  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9939:9946  IFOInfo */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":9939:9969  IFOInfo.lastValidActionBalance */\n      0x01\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9971:9978  IFOInfo */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":9971:9993  IFOInfo.lastAvgBalance */\n      0x04\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9836:9856  _calculateAvgBalance */\n      tag_355\n        /* \"farms-pools/LandbaseLockPool.sol\":9836:9994  _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      jump\t// in\n    tag_354:\n        /* \"farms-pools/LandbaseLockPool.sol\":9823:9994  avgBalance = _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      swap2\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9786:10055  if (_isIFOAvailable()){\r... */\n      jump(tag_356)\n    tag_353:\n        /* \"farms-pools/LandbaseLockPool.sol\":10039:10040  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10026:10040  avgBalance = 0 */\n      swap2\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9786:10055  if (_isIFOAvailable()){\r... */\n    tag_356:\n        /* \"farms-pools/LandbaseLockPool.sol\":9626:10062  function getUserCredit(address _user) external view returns(uint256 avgBalance) {\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":18544:18713  function emergencyWithdraw() external onlyAdmin {\r... */\n    tag_139:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_358:\n        /* \"farms-pools/LandbaseLockPool.sol\":18615:18625  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":18603:18644  IMasterChef(masterchef).emergencyWithdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5312ea8e\n        /* \"farms-pools/LandbaseLockPool.sol\":18645:18646  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":18603:18647  IMasterChef(masterchef).emergencyWithdraw(0) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_360:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_362:\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":18662:18670  paused() */\n      tag_363\n        /* \"farms-pools/LandbaseLockPool.sol\":18662:18668  paused */\n      tag_93\n        /* \"farms-pools/LandbaseLockPool.sol\":18662:18670  paused() */\n      jump\t// in\n    tag_363:\n        /* \"farms-pools/LandbaseLockPool.sol\":18658:18706  if(!paused()){\r... */\n      tag_364\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":18686:18694  _pause() */\n      tag_365\n        /* \"farms-pools/LandbaseLockPool.sol\":18686:18692  _pause */\n      tag_302\n        /* \"farms-pools/LandbaseLockPool.sol\":18686:18694  _pause() */\n      jump\t// in\n    tag_365:\n        /* \"farms-pools/LandbaseLockPool.sol\":18658:18706  if(!paused()){\r... */\n    tag_364:\n        /* \"farms-pools/LandbaseLockPool.sol\":18544:18713  function emergencyWithdraw() external onlyAdmin {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":10378:10514  function emergencyWithdrawAll() external notContract {\r... */\n    tag_141:\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      tag_367\n        /* \"farms-pools/LandbaseLockPool.sol\":4349:4359  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4348  _isContract */\n      tag_180\n        /* \"farms-pools/LandbaseLockPool.sol\":4337:4360  _isContract(msg.sender) */\n      jump\t// in\n    tag_367:\n        /* \"farms-pools/LandbaseLockPool.sol\":4336:4360  !_isContract(msg.sender) */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":4328:4385  require(!_isContract(msg.sender), \"contract not allowed\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e7472616374206e6f7420616c6c6f776564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"farms-pools/LandbaseLockPool.sol\":4418:4427  tx.origin */\n      origin\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4414  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4404:4427  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4396:4458  require(msg.sender == tx.origin, \"proxy contract not allowed\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"farms-pools/LandbaseLockPool.sol\":10442:10456  _zeroFreeIFO() */\n      tag_371\n        /* \"farms-pools/LandbaseLockPool.sol\":10442:10454  _zeroFreeIFO */\n      tag_372\n        /* \"farms-pools/LandbaseLockPool.sol\":10442:10456  _zeroFreeIFO() */\n      jump\t// in\n    tag_371:\n        /* \"farms-pools/LandbaseLockPool.sol\":10467:10506  withdrawV1(userInfo[msg.sender].shares) */\n      tag_373\n        /* \"farms-pools/LandbaseLockPool.sol\":10478:10486  userInfo */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":10478:10498  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10487:10497  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":10478:10498  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":10478:10505  userInfo[msg.sender].shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":10467:10477  withdrawV1 */\n      tag_374\n        /* \"farms-pools/LandbaseLockPool.sol\":10467:10506  withdrawV1(userInfo[msg.sender].shares) */\n      jump\t// in\n    tag_373:\n        /* \"farms-pools/LandbaseLockPool.sol\":10378:10514  function emergencyWithdrawAll() external notContract {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":18805:19182  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n    tag_144:\n        /* \"farms-pools/LandbaseLockPool.sol\":4161:4166  admin */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4157  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":4147:4166  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":4139:4182  require(msg.sender == admin, \"admin: wut?\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_376:\n        /* \"farms-pools/LandbaseLockPool.sol\":18907:18912  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":18889:18913  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":18889:18895  _token */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":18889:18913  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":18881:18955  require(_token != address(token), \"Token cannot be same as deposit token\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_378:\n        /* \"farms-pools/LandbaseLockPool.sol\":18992:19004  receiptToken */\n      immutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n        /* \"farms-pools/LandbaseLockPool.sol\":18974:19005  _token != address(receiptToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":18974:18980  _token */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":18974:19005  _token != address(receiptToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":18966:19047  require(_token != address(receiptToken), \"Token cannot be same as receipt token\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_56f1cb28260a5fe006a543516f28c8e9fca2a3d42753a5ece1397133ea778f1c\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"farms-pools/LandbaseLockPool.sol\":19060:19074  uint256 amount */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":19084:19090  _token */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":19077:19101  IERC20(_token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"farms-pools/LandbaseLockPool.sol\":19110:19114  this */\n      address\n        /* \"farms-pools/LandbaseLockPool.sol\":19077:19116  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_380:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_383\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_383:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":19060:19116  uint256 amount = IERC20(_token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":19127:19174  IERC20(_token).safeTransfer(msg.sender, amount) */\n      tag_384\n        /* \"farms-pools/LandbaseLockPool.sol\":19155:19165  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":19167:19173  amount */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":19134:19140  _token */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":19127:19154  IERC20(_token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":19127:19174  IERC20(_token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_384:\n        /* \"farms-pools/LandbaseLockPool.sol\":4193:4194  _ */\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":18805:19182  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":2146:2189  uint256 public withdrawFeePeriod = 72 hours */\n    tag_146:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":2100:2131  uint256 public withdrawFee = 10 */\n    tag_148:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1330:1366  IERC20 public immutable receiptToken */\n    tag_150:\n      immutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":15654:15821  function setTreasury(address _treasury) external onlyOwner {\r... */\n    tag_153:\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      tag_386\n        /* \"farms-pools/access/Ownable.sol\":1350:1360  _msgSender */\n      tag_265\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      jump\t// in\n    tag_386:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      tag_387\n        /* \"farms-pools/access/Ownable.sol\":1339:1344  owner */\n      tag_115\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      jump\t// in\n    tag_387:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/access/Ownable.sol\":1331:1399  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_388:\n        /* \"farms-pools/LandbaseLockPool.sol\":15753:15754  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":15732:15755  _treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":15732:15741  _treasury */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":15732:15755  _treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":15724:15782  require(_treasury != address(0), \"Cannot be zero address\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74206265207a65726f206164647265737300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_390:\n        /* \"farms-pools/LandbaseLockPool.sol\":15804:15813  _treasury */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":15793:15801  treasury */\n      0x08\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":15793:15813  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":15654:15821  function setTreasury(address _treasury) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/access/Ownable.sol\":2073:2317  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_156:\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      tag_392\n        /* \"farms-pools/access/Ownable.sol\":1350:1360  _msgSender */\n      tag_265\n        /* \"farms-pools/access/Ownable.sol\":1350:1362  _msgSender() */\n      jump\t// in\n    tag_392:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      tag_393\n        /* \"farms-pools/access/Ownable.sol\":1339:1344  owner */\n      tag_115\n        /* \"farms-pools/access/Ownable.sol\":1339:1346  owner() */\n      jump\t// in\n    tag_393:\n        /* \"farms-pools/access/Ownable.sol\":1339:1362  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"farms-pools/access/Ownable.sol\":1331:1399  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"farms-pools/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"farms-pools/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"farms-pools/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"farms-pools/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_396:\n        /* \"farms-pools/access/Ownable.sol\":2272:2280  newOwner */\n      dup1\n        /* \"farms-pools/access/Ownable.sol\":2243:2281  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":2264:2270  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/access/Ownable.sol\":2243:2281  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"farms-pools/access/Ownable.sol\":2301:2309  newOwner */\n      dup1\n        /* \"farms-pools/access/Ownable.sol\":2292:2298  _owner */\n      0x00\n      dup1\n        /* \"farms-pools/access/Ownable.sol\":2292:2309  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/access/Ownable.sol\":2073:2317  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1696:1716  address public admin */\n    tag_158:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1390:1429  IMasterChef public immutable masterchef */\n    tag_160:\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n      dup2\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":1280:1309  IERC20 public immutable token */\n    tag_162:\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n      dup2\n      jump\t// out\n        /* \"farms-pools/SafeERC20.sol\":1381:2003  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\n    tag_163:\n        /* \"farms-pools/SafeERC20.sol\":1760:1761  0 */\n      0x00\n        /* \"farms-pools/SafeERC20.sol\":1751:1756  value */\n      dup2\n        /* \"farms-pools/SafeERC20.sol\":1751:1761  value == 0 */\n      eq\n        /* \"farms-pools/SafeERC20.sol\":1750:1812  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_398\n      jumpi\n      pop\n        /* \"farms-pools/SafeERC20.sol\":1810:1811  0 */\n      0x00\n        /* \"farms-pools/SafeERC20.sol\":1767:1772  token */\n      dup4\n        /* \"farms-pools/SafeERC20.sol\":1767:1782  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"farms-pools/SafeERC20.sol\":1791:1795  this */\n      address\n        /* \"farms-pools/SafeERC20.sol\":1798:1805  spender */\n      dup6\n        /* \"farms-pools/SafeERC20.sol\":1767:1806  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_399\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_399:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_401:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_402\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_402:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/SafeERC20.sol\":1767:1811  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"farms-pools/SafeERC20.sol\":1750:1812  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_398:\n        /* \"farms-pools/SafeERC20.sol\":1742:1894  require((value == 0) || (token.allowance(address(this), spender) == 0),\r... */\n      tag_403\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_403:\n        /* \"farms-pools/SafeERC20.sol\":1905:1995  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_404\n        /* \"farms-pools/SafeERC20.sol\":1925:1930  token */\n      dup4\n        /* \"farms-pools/SafeERC20.sol\":1955:1977  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"farms-pools/SafeERC20.sol\":1979:1986  spender */\n      dup5\n        /* \"farms-pools/SafeERC20.sol\":1988:1993  value */\n      dup5\n        /* \"farms-pools/SafeERC20.sol\":1932:1994  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SafeERC20.sol\":1905:1924  _callOptionalReturn */\n      tag_405\n        /* \"farms-pools/SafeERC20.sol\":1905:1995  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_404:\n        /* \"farms-pools/SafeERC20.sol\":1381:2003  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/utils/Address.sol\":3669:3864  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_164:\n        /* \"farms-pools/utils/Address.sol\":3772:3784  bytes memory */\n      0x60\n        /* \"farms-pools/utils/Address.sol\":3804:3856  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_407\n        /* \"farms-pools/utils/Address.sol\":3826:3832  target */\n      dup5\n        /* \"farms-pools/utils/Address.sol\":3834:3838  data */\n      dup5\n        /* \"farms-pools/utils/Address.sol\":3840:3841  0 */\n      0x00\n        /* \"farms-pools/utils/Address.sol\":3843:3855  errorMessage */\n      dup6\n        /* \"farms-pools/utils/Address.sol\":3804:3825  functionCallWithValue */\n      tag_408\n        /* \"farms-pools/utils/Address.sol\":3804:3856  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_407:\n        /* \"farms-pools/utils/Address.sol\":3797:3856  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"farms-pools/utils/Address.sol\":3669:3864  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":21654:21845  function _isContract(address addr) internal view returns (bool) {\r... */\n    tag_180:\n        /* \"farms-pools/LandbaseLockPool.sol\":21712:21716  bool */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21729:21741  uint256 size */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":21796:21800  addr */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":21784:21801  extcodesize(addr) */\n      extcodesize\n        /* \"farms-pools/LandbaseLockPool.sol\":21776:21801  size := extcodesize(addr) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21836:21837  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21829:21833  size */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":21829:21837  size > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":21822:21837  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21654:21845  function _isContract(address addr) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"farms-pools/libraries/SafeMath.sol\":3653:3873  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_189:\n        /* \"farms-pools/libraries/SafeMath.sol\":3711:3718  uint256 */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":3740:3741  0 */\n      dup1\n        /* \"farms-pools/libraries/SafeMath.sol\":3735:3736  a */\n      dup4\n        /* \"farms-pools/libraries/SafeMath.sol\":3735:3741  a == 0 */\n      eq\n        /* \"farms-pools/libraries/SafeMath.sol\":3731:3751  if (a == 0) return 0 */\n      iszero\n      tag_411\n      jumpi\n        /* \"farms-pools/libraries/SafeMath.sol\":3750:3751  0 */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":3743:3751  return 0 */\n      swap1\n      pop\n      jump(tag_410)\n        /* \"farms-pools/libraries/SafeMath.sol\":3731:3751  if (a == 0) return 0 */\n    tag_411:\n        /* \"farms-pools/libraries/SafeMath.sol\":3762:3771  uint256 c */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":3778:3779  b */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":3774:3775  a */\n      dup5\n        /* \"farms-pools/libraries/SafeMath.sol\":3774:3779  a * b */\n      mul\n        /* \"farms-pools/libraries/SafeMath.sol\":3762:3779  uint256 c = a * b */\n      swap1\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":3807:3808  b */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":3802:3803  a */\n      dup5\n        /* \"farms-pools/libraries/SafeMath.sol\":3798:3799  c */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":3798:3803  c / a */\n      dup2\n      tag_412\n      jumpi\n      invalid\n    tag_412:\n      div\n        /* \"farms-pools/libraries/SafeMath.sol\":3798:3808  c / a == b */\n      eq\n        /* \"farms-pools/libraries/SafeMath.sol\":3790:3846  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_413:\n        /* \"farms-pools/libraries/SafeMath.sol\":3864:3865  c */\n      dup1\n        /* \"farms-pools/libraries/SafeMath.sol\":3857:3865  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":3653:3873  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_410:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/libraries/SafeMath.sol\":4351:4504  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_190:\n        /* \"farms-pools/libraries/SafeMath.sol\":4409:4416  uint256 */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":4441:4442  0 */\n      dup1\n        /* \"farms-pools/libraries/SafeMath.sol\":4437:4438  b */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":4437:4442  b > 0 */\n      gt\n        /* \"farms-pools/libraries/SafeMath.sol\":4429:4473  require(b > 0, \"SafeMath: division by zero\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_415:\n        /* \"farms-pools/libraries/SafeMath.sol\":4495:4496  b */\n      dup2\n        /* \"farms-pools/libraries/SafeMath.sol\":4491:4492  a */\n      dup4\n        /* \"farms-pools/libraries/SafeMath.sol\":4491:4496  a / b */\n      dup2\n      tag_416\n      jumpi\n      invalid\n    tag_416:\n      div\n        /* \"farms-pools/libraries/SafeMath.sol\":4484:4496  return a / b */\n      swap1\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":4351:4504  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/libraries/SafeMath.sol\":3236:3394  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_192:\n        /* \"farms-pools/libraries/SafeMath.sol\":3294:3301  uint256 */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":3327:3328  a */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":3322:3323  b */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":3322:3328  b <= a */\n      gt\n      iszero\n        /* \"farms-pools/libraries/SafeMath.sol\":3314:3363  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_418:\n        /* \"farms-pools/libraries/SafeMath.sol\":3385:3386  b */\n      dup2\n        /* \"farms-pools/libraries/SafeMath.sol\":3381:3382  a */\n      dup4\n        /* \"farms-pools/libraries/SafeMath.sol\":3381:3386  a - b */\n      sub\n        /* \"farms-pools/libraries/SafeMath.sol\":3374:3386  return a - b */\n      swap1\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":3236:3394  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/libraries/SafeMath.sol\":2774:2953  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_204:\n        /* \"farms-pools/libraries/SafeMath.sol\":2832:2839  uint256 */\n      0x00\n        /* \"farms-pools/libraries/SafeMath.sol\":2852:2861  uint256 c */\n      dup1\n        /* \"farms-pools/libraries/SafeMath.sol\":2868:2869  b */\n      dup3\n        /* \"farms-pools/libraries/SafeMath.sol\":2864:2865  a */\n      dup5\n        /* \"farms-pools/libraries/SafeMath.sol\":2864:2869  a + b */\n      add\n        /* \"farms-pools/libraries/SafeMath.sol\":2852:2869  uint256 c = a + b */\n      swap1\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":2893:2894  a */\n      dup4\n        /* \"farms-pools/libraries/SafeMath.sol\":2888:2889  c */\n      dup2\n        /* \"farms-pools/libraries/SafeMath.sol\":2888:2894  c >= a */\n      lt\n      iszero\n        /* \"farms-pools/libraries/SafeMath.sol\":2880:2926  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n        /* \"farms-pools/libraries/SafeMath.sol\":2944:2945  c */\n      dup1\n        /* \"farms-pools/libraries/SafeMath.sol\":2937:2945  return c */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/libraries/SafeMath.sol\":2774:2953  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SafeERC20.sol\":722:899  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_210:\n        /* \"farms-pools/SafeERC20.sol\":805:891  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_422\n        /* \"farms-pools/SafeERC20.sol\":825:830  token */\n      dup4\n        /* \"farms-pools/SafeERC20.sol\":855:878  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"farms-pools/SafeERC20.sol\":880:882  to */\n      dup5\n        /* \"farms-pools/SafeERC20.sol\":884:889  value */\n      dup5\n        /* \"farms-pools/SafeERC20.sol\":832:890  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SafeERC20.sol\":805:824  _callOptionalReturn */\n      tag_405\n        /* \"farms-pools/SafeERC20.sol\":805:891  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_422:\n        /* \"farms-pools/SafeERC20.sol\":722:899  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":8371:9494  function _updateUserIFO(uint256 _amount, IFOActions _action) internal {\r... */\n    tag_218:\n        /* \"farms-pools/LandbaseLockPool.sol\":8452:8479  UserIFOInfo storage IFOInfo */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8482:8493  userIFOInfo */\n      0x02\n        /* \"farms-pools/LandbaseLockPool.sol\":8482:8505  userIFOInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8494:8504  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":8482:8505  userIFOInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":8452:8505  UserIFOInfo storage IFOInfo = userIFOInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":8526:8544  uint256 avgBalance */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8548:8565  _isIFOAvailable() */\n      tag_424\n        /* \"farms-pools/LandbaseLockPool.sol\":8548:8563  _isIFOAvailable */\n      tag_352\n        /* \"farms-pools/LandbaseLockPool.sol\":8548:8565  _isIFOAvailable() */\n      jump\t// in\n    tag_424:\n        /* \"farms-pools/LandbaseLockPool.sol\":8547:8565  !_isIFOAvailable() */\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":8547:8730  !_isIFOAvailable() ? 0 : _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      tag_425\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":8572:8730  _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      tag_426\n        /* \"farms-pools/LandbaseLockPool.sol\":8593:8600  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":8593:8616  IFOInfo.lastActionBlock */\n      0x02\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8618:8625  IFOInfo */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":8618:8646  IFOInfo.lastValidActionBlock */\n      0x03\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8648:8655  IFOInfo */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":8648:8673  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8675:8682  IFOInfo */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":8675:8705  IFOInfo.lastValidActionBalance */\n      0x01\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8707:8714  IFOInfo */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":8707:8729  IFOInfo.lastAvgBalance */\n      0x04\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8572:8592  _calculateAvgBalance */\n      tag_355\n        /* \"farms-pools/LandbaseLockPool.sol\":8572:8730  _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      jump\t// in\n    tag_426:\n        /* \"farms-pools/LandbaseLockPool.sol\":8547:8730  !_isIFOAvailable() ? 0 : _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      jump(tag_427)\n    tag_425:\n        /* \"farms-pools/LandbaseLockPool.sol\":8568:8569  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8547:8730  !_isIFOAvailable() ? 0 : _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n    tag_427:\n        /* \"farms-pools/LandbaseLockPool.sol\":8526:8730  uint256 avgBalance = !_isIFOAvailable() ? 0 : _calculateAvgBalance(IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastAvgBalance) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":8766:8785  IFOActions.Withdraw */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":8755:8785  _action == IFOActions.Withdraw */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_428\n      jumpi\n      invalid\n    tag_428:\n        /* \"farms-pools/LandbaseLockPool.sol\":8755:8762  _action */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":8755:8785  _action == IFOActions.Withdraw */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_429\n      jumpi\n      invalid\n    tag_429:\n      eq\n        /* \"farms-pools/LandbaseLockPool.sol\":8751:9018  if (_action == IFOActions.Withdraw){\r... */\n      iszero\n      tag_430\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":8839:8846  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":8839:8864  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8829:8836  _amount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":8829:8864  _amount > IFOInfo.lastActionBalance */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":8829:8909  _amount > IFOInfo.lastActionBalance ? 0 : IFOInfo.lastActionBalance.sub(_amount) */\n      tag_431\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":8871:8909  IFOInfo.lastActionBalance.sub(_amount) */\n      tag_432\n        /* \"farms-pools/LandbaseLockPool.sol\":8901:8908  _amount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":8871:8878  IFOInfo */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":8871:8896  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8871:8900  IFOInfo.lastActionBalance.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8871:8909  IFOInfo.lastActionBalance.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_432:\n        /* \"farms-pools/LandbaseLockPool.sol\":8829:8909  _amount > IFOInfo.lastActionBalance ? 0 : IFOInfo.lastActionBalance.sub(_amount) */\n      jump(tag_433)\n    tag_431:\n        /* \"farms-pools/LandbaseLockPool.sol\":8867:8868  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8829:8909  _amount > IFOInfo.lastActionBalance ? 0 : IFOInfo.lastActionBalance.sub(_amount) */\n    tag_433:\n        /* \"farms-pools/LandbaseLockPool.sol\":8801:8808  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":8801:8826  IFOInfo.lastActionBalance */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":8801:8909  IFOInfo.lastActionBalance = _amount > IFOInfo.lastActionBalance ? 0 : IFOInfo.lastActionBalance.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":8751:9018  if (_action == IFOActions.Withdraw){\r... */\n      jump(tag_434)\n    tag_430:\n        /* \"farms-pools/LandbaseLockPool.sol\":8968:9006  IFOInfo.lastActionBalance.add(_amount) */\n      tag_435\n        /* \"farms-pools/LandbaseLockPool.sol\":8998:9005  _amount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":8968:8975  IFOInfo */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":8968:8993  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":8968:8997  IFOInfo.lastActionBalance.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8968:9006  IFOInfo.lastActionBalance.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_435:\n        /* \"farms-pools/LandbaseLockPool.sol\":8940:8947  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":8940:8965  IFOInfo.lastActionBalance */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":8940:9006  IFOInfo.lastActionBalance = IFOInfo.lastActionBalance.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":8751:9018  if (_action == IFOActions.Withdraw){\r... */\n    tag_434:\n        /* \"farms-pools/LandbaseLockPool.sol\":9034:9055  _isValidActionBlock() */\n      tag_436\n        /* \"farms-pools/LandbaseLockPool.sol\":9034:9053  _isValidActionBlock */\n      tag_437\n        /* \"farms-pools/LandbaseLockPool.sol\":9034:9055  _isValidActionBlock() */\n      jump\t// in\n    tag_436:\n        /* \"farms-pools/LandbaseLockPool.sol\":9030:9203  if (_isValidActionBlock()) {\r... */\n      iszero\n      tag_438\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":9106:9113  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":9106:9131  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9073:9080  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":9073:9103  IFOInfo.lastValidActionBalance */\n      0x01\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":9073:9131  IFOInfo.lastValidActionBalance = IFOInfo.lastActionBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9179:9191  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":9147:9154  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":9147:9175  IFOInfo.lastValidActionBlock */\n      0x03\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":9147:9191  IFOInfo.lastValidActionBlock =  block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9030:9203  if (_isValidActionBlock()) {\r... */\n    tag_438:\n        /* \"farms-pools/LandbaseLockPool.sol\":9248:9258  avgBalance */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":9223:9230  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":9223:9245  IFOInfo.lastAvgBalance */\n      0x04\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":9223:9258  IFOInfo.lastAvgBalance = avgBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9295:9307  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":9269:9276  IFOInfo */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":9269:9292  IFOInfo.lastActionBlock */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":9269:9307  IFOInfo.lastActionBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":9337:9347  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":9323:9486  UpdateUserIFO(msg.sender, IFOInfo.lastAvgBalance, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a9632041d5ad6a474679da2ac648103e26069c6e77dca5f3675d3fdcbe1ac17\n        /* \"farms-pools/LandbaseLockPool.sol\":9349:9356  IFOInfo */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":9349:9371  IFOInfo.lastAvgBalance */\n      0x04\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9373:9380  IFOInfo */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":9373:9398  IFOInfo.lastActionBalance */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9400:9407  IFOInfo */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":9400:9430  IFOInfo.lastValidActionBalance */\n      0x01\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9432:9439  IFOInfo */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":9432:9455  IFOInfo.lastActionBlock */\n      0x02\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9457:9464  IFOInfo */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":9457:9485  IFOInfo.lastValidActionBlock */\n      0x03\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":9323:9486  UpdateUserIFO(msg.sender, IFOInfo.lastAvgBalance, IFOInfo.lastActionBalance, IFOInfo.lastValidActionBalance, IFOInfo.lastActionBlock, IFOInfo.lastValidActionBlock) */\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/LandbaseLockPool.sol\":8371:9494  function _updateUserIFO(uint256 _amount, IFOActions _action) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/utils/Pausable.sol\":2149:2269  function _unpause() internal virtual whenPaused {\r... */\n    tag_227:\n        /* \"farms-pools/utils/Pausable.sol\":1693:1701  paused() */\n      tag_440\n        /* \"farms-pools/utils/Pausable.sol\":1693:1699  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1693:1701  paused() */\n      jump\t// in\n    tag_440:\n        /* \"farms-pools/utils/Pausable.sol\":1685:1726  require(paused(), \"Pausable: not paused\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_441:\n        /* \"farms-pools/utils/Pausable.sol\":2218:2223  false */\n      0x00\n        /* \"farms-pools/utils/Pausable.sol\":2208:2215  _paused */\n      dup1\n      0x14\n        /* \"farms-pools/utils/Pausable.sol\":2208:2223  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/utils/Pausable.sol\":2239:2261  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"farms-pools/utils/Pausable.sol\":2248:2260  _msgSender() */\n      tag_443\n        /* \"farms-pools/utils/Pausable.sol\":2248:2258  _msgSender */\n      tag_265\n        /* \"farms-pools/utils/Pausable.sol\":2248:2260  _msgSender() */\n      jump\t// in\n    tag_443:\n        /* \"farms-pools/utils/Pausable.sol\":2239:2261  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/utils/Pausable.sol\":2149:2269  function _unpause() internal virtual whenPaused {\r... */\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":21364:21525  function _earn() internal {\r... */\n    tag_249:\n        /* \"farms-pools/LandbaseLockPool.sol\":21401:21412  uint256 bal */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21415:21426  available() */\n      tag_445\n        /* \"farms-pools/LandbaseLockPool.sol\":21415:21424  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":21415:21426  available() */\n      jump\t// in\n    tag_445:\n        /* \"farms-pools/LandbaseLockPool.sol\":21401:21426  uint256 bal = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21447:21448  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":21441:21444  bal */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":21441:21448  bal > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":21437:21518  if (bal > 0) {\r... */\n      iszero\n      tag_446\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":21477:21487  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":21465:21501  IMasterChef(masterchef).enterStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41441d3b\n        /* \"farms-pools/LandbaseLockPool.sol\":21502:21505  bal */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":21465:21506  IMasterChef(masterchef).enterStaking(bal) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_447\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_447:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_449\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_449:\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":21437:21518  if (bal > 0) {\r... */\n    tag_446:\n        /* \"farms-pools/LandbaseLockPool.sol\":21364:21525  function _earn() internal {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/utils/Context.sol\":613:719  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_265:\n        /* \"farms-pools/utils/Context.sol\":666:681  address payable */\n      0x00\n        /* \"farms-pools/utils/Context.sol\":701:711  msg.sender */\n      caller\n        /* \"farms-pools/utils/Context.sol\":694:711  return msg.sender */\n      swap1\n      pop\n        /* \"farms-pools/utils/Context.sol\":613:719  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/utils/Pausable.sol\":1890:2008  function _pause() internal virtual whenNotPaused {\r... */\n    tag_302:\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      tag_452\n        /* \"farms-pools/utils/Pausable.sol\":1416:1422  paused */\n      tag_93\n        /* \"farms-pools/utils/Pausable.sol\":1416:1424  paused() */\n      jump\t// in\n    tag_452:\n        /* \"farms-pools/utils/Pausable.sol\":1415:1424  !paused() */\n      iszero\n        /* \"farms-pools/utils/Pausable.sol\":1407:1445  require(!paused(), \"Pausable: paused\") */\n      tag_453\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_453:\n        /* \"farms-pools/utils/Pausable.sol\":1960:1964  true */\n      0x01\n        /* \"farms-pools/utils/Pausable.sol\":1950:1957  _paused */\n      0x00\n      0x14\n        /* \"farms-pools/utils/Pausable.sol\":1950:1964  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/utils/Pausable.sol\":1980:2000  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"farms-pools/utils/Pausable.sol\":1987:1999  _msgSender() */\n      tag_455\n        /* \"farms-pools/utils/Pausable.sol\":1987:1997  _msgSender */\n      tag_265\n        /* \"farms-pools/utils/Pausable.sol\":1987:1999  _msgSender() */\n      jump\t// in\n    tag_455:\n        /* \"farms-pools/utils/Pausable.sol\":1980:2000  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"farms-pools/utils/Pausable.sol\":1890:2008  function _pause() internal virtual whenNotPaused {\r... */\n      jump\t// out\n        /* \"farms-pools/SafeERC20.sol\":907:1112  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_337:\n        /* \"farms-pools/SafeERC20.sol\":1008:1104  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_457\n        /* \"farms-pools/SafeERC20.sol\":1028:1033  token */\n      dup5\n        /* \"farms-pools/SafeERC20.sol\":1058:1085  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"farms-pools/SafeERC20.sol\":1087:1091  from */\n      dup6\n        /* \"farms-pools/SafeERC20.sol\":1093:1095  to */\n      dup6\n        /* \"farms-pools/SafeERC20.sol\":1097:1102  value */\n      dup6\n        /* \"farms-pools/SafeERC20.sol\":1035:1103  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/SafeERC20.sol\":1008:1027  _callOptionalReturn */\n      tag_405\n        /* \"farms-pools/SafeERC20.sol\":1008:1104  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_457:\n        /* \"farms-pools/SafeERC20.sol\":907:1112  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":5879:6131  function _isIFOAvailable() internal view returns(bool) {\r... */\n    tag_352:\n        /* \"farms-pools/LandbaseLockPool.sol\":5928:5932  bool */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":6113:6123  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":6098:6110  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":6098:6123  block.number > startBlock */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":6091:6123  return block.number > startBlock */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":5879:6131  function _isIFOAvailable() internal view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":7024:8200  function _calculateAvgBalance(uint256  _lastActionBlock, uint256  _lastValidActionBlock, uint256 _lastActionBalance, uint256  _lastValidActionBalance, uint256 _lastAvgBalance) internal view returns(uint256 avgBalance) {\r... */\n    tag_355:\n        /* \"farms-pools/LandbaseLockPool.sol\":7222:7240  uint256 avgBalance */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":7253:7273  uint256 currentBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":7276:7288  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":7253:7288  uint256 currentBlock = block.number */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7495:7503  endBlock */\n      sload(0x04)\n        /* \"farms-pools/LandbaseLockPool.sol\":7475:7491  _lastActionBlock */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":7475:7503  _lastActionBlock >= endBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":7471:7553  if (_lastActionBlock >= endBlock){\r... */\n      tag_460\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":7526:7541  _lastAvgBalance */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":7519:7541  return _lastAvgBalance */\n      swap2\n      pop\n      pop\n      jump(tag_459)\n        /* \"farms-pools/LandbaseLockPool.sol\":7471:7553  if (_lastActionBlock >= endBlock){\r... */\n    tag_460:\n        /* \"farms-pools/LandbaseLockPool.sol\":7648:7658  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":7624:7645  _lastValidActionBlock */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":7624:7658  _lastValidActionBlock < startBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":7620:7813  if (_lastValidActionBlock < startBlock){\r... */\n      iszero\n      tag_461\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":7698:7708  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":7674:7708  _lastValidActionBlock = startBlock */\n      swap6\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7741:7742  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":7723:7742  _lastAvgBalance = 0 */\n      swap3\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7783:7801  _lastActionBalance */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":7757:7801  _lastValidActionBalance = _lastActionBalance */\n      swap4\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7620:7813  if (_lastValidActionBlock < startBlock){\r... */\n    tag_461:\n        /* \"farms-pools/LandbaseLockPool.sol\":7855:7863  endBlock */\n      sload(0x04)\n        /* \"farms-pools/LandbaseLockPool.sol\":7840:7852  currentBlock */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":7840:7863  currentBlock < endBlock */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":7840:7890  currentBlock < endBlock ?  currentBlock : endBlock */\n      tag_462\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":7882:7890  endBlock */\n      sload(0x04)\n        /* \"farms-pools/LandbaseLockPool.sol\":7840:7890  currentBlock < endBlock ?  currentBlock : endBlock */\n      jump(tag_463)\n    tag_462:\n        /* \"farms-pools/LandbaseLockPool.sol\":7867:7879  currentBlock */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":7840:7890  currentBlock < endBlock ?  currentBlock : endBlock */\n    tag_463:\n        /* \"farms-pools/LandbaseLockPool.sol\":7825:7890  currentBlock = currentBlock < endBlock ?  currentBlock : endBlock */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7903:7925  uint256 lastContribute */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":7929:7987  _lastAvgBalance.mul(_lastValidActionBlock.sub(startBlock)) */\n      tag_464\n        /* \"farms-pools/LandbaseLockPool.sol\":7949:7986  _lastValidActionBlock.sub(startBlock) */\n      tag_465\n        /* \"farms-pools/LandbaseLockPool.sol\":7975:7985  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":7949:7970  _lastValidActionBlock */\n      dup10\n        /* \"farms-pools/LandbaseLockPool.sol\":7949:7974  _lastValidActionBlock.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":7949:7986  _lastValidActionBlock.sub(startBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_465:\n        /* \"farms-pools/LandbaseLockPool.sol\":7929:7944  _lastAvgBalance */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":7929:7948  _lastAvgBalance.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":7929:7987  _lastAvgBalance.mul(_lastValidActionBlock.sub(startBlock)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_464:\n        /* \"farms-pools/LandbaseLockPool.sol\":7903:7987  uint256 lastContribute  = _lastAvgBalance.mul(_lastValidActionBlock.sub(startBlock)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7998:8023  uint256 currentContribute */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":8027:8095  _lastValidActionBalance.mul(currentBlock.sub(_lastValidActionBlock)) */\n      tag_466\n        /* \"farms-pools/LandbaseLockPool.sol\":8055:8094  currentBlock.sub(_lastValidActionBlock) */\n      tag_467\n        /* \"farms-pools/LandbaseLockPool.sol\":8072:8093  _lastValidActionBlock */\n      dup10\n        /* \"farms-pools/LandbaseLockPool.sol\":8055:8067  currentBlock */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":8055:8071  currentBlock.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8055:8094  currentBlock.sub(_lastValidActionBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_467:\n        /* \"farms-pools/LandbaseLockPool.sol\":8027:8050  _lastValidActionBalance */\n      dup8\n        /* \"farms-pools/LandbaseLockPool.sol\":8027:8054  _lastValidActionBalance.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8027:8095  _lastValidActionBalance.mul(currentBlock.sub(_lastValidActionBlock)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_466:\n        /* \"farms-pools/LandbaseLockPool.sol\":7998:8095  uint256 currentContribute  = _lastValidActionBalance.mul(currentBlock.sub(_lastValidActionBlock)) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":8119:8192  (lastContribute.add(currentContribute)).div(currentBlock.sub(startBlock)) */\n      tag_468\n        /* \"farms-pools/LandbaseLockPool.sol\":8163:8191  currentBlock.sub(startBlock) */\n      tag_469\n        /* \"farms-pools/LandbaseLockPool.sol\":8180:8190  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":8163:8175  currentBlock */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":8163:8179  currentBlock.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8163:8191  currentBlock.sub(startBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_469:\n        /* \"farms-pools/LandbaseLockPool.sol\":8120:8157  lastContribute.add(currentContribute) */\n      tag_470\n        /* \"farms-pools/LandbaseLockPool.sol\":8139:8156  currentContribute */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":8120:8134  lastContribute */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":8120:8138  lastContribute.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8120:8157  lastContribute.add(currentContribute) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_470:\n        /* \"farms-pools/LandbaseLockPool.sol\":8119:8162  (lastContribute.add(currentContribute)).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":8119:8192  (lastContribute.add(currentContribute)).div(currentBlock.sub(startBlock)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_468:\n        /* \"farms-pools/LandbaseLockPool.sol\":8106:8192  avgBalance = (lastContribute.add(currentContribute)).div(currentBlock.sub(startBlock)) */\n      swap4\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":7024:8200  function _calculateAvgBalance(uint256  _lastActionBlock, uint256  _lastValidActionBlock, uint256 _lastActionBalance, uint256  _lastValidActionBalance, uint256 _lastAvgBalance) internal view returns(uint256 avgBalance) {\r... */\n      pop\n      pop\n      pop\n    tag_459:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":10589:10962  function _zeroFreeIFO() internal {\r... */\n    tag_372:\n        /* \"farms-pools/LandbaseLockPool.sol\":10633:10660  UserIFOInfo storage IFOInfo */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10663:10674  userIFOInfo */\n      0x02\n        /* \"farms-pools/LandbaseLockPool.sol\":10663:10686  userIFOInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10675:10685  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":10663:10686  userIFOInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":10633:10686  UserIFOInfo storage IFOInfo = userIFOInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10727:10728  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10699:10706  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":10699:10724  IFOInfo.lastActionBalance */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":10699:10728  IFOInfo.lastActionBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10772:10773  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10739:10746  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":10739:10769  IFOInfo.lastValidActionBalance */\n      0x01\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":10739:10773  IFOInfo.lastValidActionBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10810:10811  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10784:10791  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":10784:10807  IFOInfo.lastActionBlock */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":10784:10811  IFOInfo.lastActionBlock = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10853:10854  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10822:10829  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":10822:10850  IFOInfo.lastValidActionBlock */\n      0x03\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":10822:10854  IFOInfo.lastValidActionBlock = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10890:10891  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":10865:10872  IFOInfo */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":10865:10887  IFOInfo.lastAvgBalance */\n      0x04\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":10865:10891  IFOInfo.lastAvgBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":10929:10939  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":10917:10954  ZeroFreeIFO(msg.sender, block.number) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6f66ff41198a141a4e315cd2ff387f32686a6d469da7496ffee40eaf05e4a411\n        /* \"farms-pools/LandbaseLockPool.sol\":10941:10953  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":10917:10954  ZeroFreeIFO(msg.sender, block.number) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/LandbaseLockPool.sol\":10589:10962  function _zeroFreeIFO() internal {\r... */\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":13034:14532  function withdrawV1(uint256 _shares) internal {\r... */\n    tag_374:\n        /* \"farms-pools/LandbaseLockPool.sol\":13091:13112  UserInfo storage user */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13115:13123  userInfo */\n      0x01\n        /* \"farms-pools/LandbaseLockPool.sol\":13115:13135  userInfo[msg.sender] */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13124:13134  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":13115:13135  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"farms-pools/LandbaseLockPool.sol\":13091:13135  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13164:13165  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13154:13161  _shares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13154:13165  _shares > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":13146:13189  require(_shares > 0, \"Nothing to withdraw\") */\n      tag_473\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_473:\n        /* \"farms-pools/LandbaseLockPool.sol\":13219:13223  user */\n      dup1\n        /* \"farms-pools/LandbaseLockPool.sol\":13219:13230  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":13208:13215  _shares */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13208:13230  _shares <= user.shares */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":13200:13266  require(_shares <= user.shares, \"Withdraw amount exceeds balance\") */\n      tag_474\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_474:\n        /* \"farms-pools/LandbaseLockPool.sol\":13279:13300  uint256 currentAmount */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13303:13346  (balanceOf().mul(_shares)).div(totalShares) */\n      tag_475\n        /* \"farms-pools/LandbaseLockPool.sol\":13334:13345  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13328  balanceOf().mul(_shares) */\n      tag_476\n        /* \"farms-pools/LandbaseLockPool.sol\":13320:13327  _shares */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13315  balanceOf() */\n      tag_477\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13313  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13315  balanceOf() */\n      jump\t// in\n    tag_477:\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13319  balanceOf().mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13304:13328  balanceOf().mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"farms-pools/LandbaseLockPool.sol\":13303:13333  (balanceOf().mul(_shares)).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13303:13346  (balanceOf().mul(_shares)).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_475:\n        /* \"farms-pools/LandbaseLockPool.sol\":13279:13346  uint256 currentAmount = (balanceOf().mul(_shares)).div(totalShares) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13371:13395  user.shares.sub(_shares) */\n      tag_478\n        /* \"farms-pools/LandbaseLockPool.sol\":13387:13394  _shares */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":13371:13375  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":13371:13382  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":13371:13386  user.shares.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13371:13395  user.shares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_478:\n        /* \"farms-pools/LandbaseLockPool.sol\":13357:13361  user */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13357:13368  user.shares */\n      0x00\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":13357:13395  user.shares = user.shares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13420:13444  totalShares.sub(_shares) */\n      tag_479\n        /* \"farms-pools/LandbaseLockPool.sol\":13436:13443  _shares */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":13420:13431  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":13420:13435  totalShares.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13420:13444  totalShares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_479:\n        /* \"farms-pools/LandbaseLockPool.sol\":13406:13417  totalShares */\n      0x05\n        /* \"farms-pools/LandbaseLockPool.sol\":13406:13444  totalShares = totalShares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13457:13468  uint256 bal */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13471:13482  available() */\n      tag_480\n        /* \"farms-pools/LandbaseLockPool.sol\":13471:13480  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":13471:13482  available() */\n      jump\t// in\n    tag_480:\n        /* \"farms-pools/LandbaseLockPool.sol\":13457:13482  uint256 bal = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13503:13516  currentAmount */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":13497:13500  bal */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":13497:13516  bal < currentAmount */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":13493:13847  if (bal < currentAmount) {\r... */\n      iszero\n      tag_481\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":13533:13552  uint256 balWithdraw */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13555:13577  currentAmount.sub(bal) */\n      tag_482\n        /* \"farms-pools/LandbaseLockPool.sol\":13573:13576  bal */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13555:13568  currentAmount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":13555:13572  currentAmount.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13555:13577  currentAmount.sub(bal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_482:\n        /* \"farms-pools/LandbaseLockPool.sol\":13533:13577  uint256 balWithdraw = currentAmount.sub(bal) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13604:13614  masterchef */\n      immutable(\"0x64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107\")\n        /* \"farms-pools/LandbaseLockPool.sol\":13592:13628  IMasterChef(masterchef).leaveStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1058d281\n        /* \"farms-pools/LandbaseLockPool.sol\":13629:13640  balWithdraw */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13592:13641  IMasterChef(masterchef).leaveStaking(balWithdraw) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_483\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_483:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_485\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_485:\n      pop\n      pop\n      pop\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13656:13672  uint256 balAfter */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13675:13686  available() */\n      tag_486\n        /* \"farms-pools/LandbaseLockPool.sol\":13675:13684  available */\n      tag_87\n        /* \"farms-pools/LandbaseLockPool.sol\":13675:13686  available() */\n      jump\t// in\n    tag_486:\n        /* \"farms-pools/LandbaseLockPool.sol\":13656:13686  uint256 balAfter = available() */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13701:13713  uint256 diff */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13716:13733  balAfter.sub(bal) */\n      tag_487\n        /* \"farms-pools/LandbaseLockPool.sol\":13729:13732  bal */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":13716:13724  balAfter */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":13716:13728  balAfter.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13716:13733  balAfter.sub(bal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_487:\n        /* \"farms-pools/LandbaseLockPool.sol\":13701:13733  uint256 diff = balAfter.sub(bal) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13759:13770  balWithdraw */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":13752:13756  diff */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":13752:13770  diff < balWithdraw */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":13748:13836  if (diff < balWithdraw) {\r... */\n      iszero\n      tag_488\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":13807:13820  bal.add(diff) */\n      tag_489\n        /* \"farms-pools/LandbaseLockPool.sol\":13815:13819  diff */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":13807:13810  bal */\n      dup6\n        /* \"farms-pools/LandbaseLockPool.sol\":13807:13814  bal.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13807:13820  bal.add(diff) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_489:\n        /* \"farms-pools/LandbaseLockPool.sol\":13791:13820  currentAmount = bal.add(diff) */\n      swap5\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13748:13836  if (diff < balWithdraw) {\r... */\n    tag_488:\n        /* \"farms-pools/LandbaseLockPool.sol\":13493:13847  if (bal < currentAmount) {\r... */\n      pop\n      pop\n      pop\n    tag_481:\n        /* \"farms-pools/LandbaseLockPool.sol\":13881:13926  user.lastDepositedTime.add(withdrawFeePeriod) */\n      tag_490\n        /* \"farms-pools/LandbaseLockPool.sol\":13908:13925  withdrawFeePeriod */\n      sload(0x0c)\n        /* \"farms-pools/LandbaseLockPool.sol\":13881:13885  user */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":13881:13903  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":13881:13907  user.lastDepositedTime.add */\n      tag_204\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13881:13926  user.lastDepositedTime.add(withdrawFeePeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_490:\n        /* \"farms-pools/LandbaseLockPool.sol\":13863:13878  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":13863:13926  block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod) */\n      lt\n        /* \"farms-pools/LandbaseLockPool.sol\":13859:14156  if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      iszero\n      tag_491\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":13943:13969  uint256 currentWithdrawFee */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:14013  currentAmount.mul(withdrawFee).div(10000) */\n      tag_492\n        /* \"farms-pools/LandbaseLockPool.sol\":14007:14012  10000 */\n      0x2710\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:14002  currentAmount.mul(withdrawFee) */\n      tag_493\n        /* \"farms-pools/LandbaseLockPool.sol\":13990:14001  withdrawFee */\n      sload(0x0b)\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:13985  currentAmount */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:13989  currentAmount.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:14002  currentAmount.mul(withdrawFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_493:\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:14006  currentAmount.mul(withdrawFee).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":13972:14013  currentAmount.mul(withdrawFee).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_492:\n        /* \"farms-pools/LandbaseLockPool.sol\":13943:14013  uint256 currentWithdrawFee = currentAmount.mul(withdrawFee).div(10000) */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14028:14076  token.safeTransfer(treasury, currentWithdrawFee) */\n      tag_494\n        /* \"farms-pools/LandbaseLockPool.sol\":14047:14055  treasury */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/LandbaseLockPool.sol\":14057:14075  currentWithdrawFee */\n      dup3\n        /* \"farms-pools/LandbaseLockPool.sol\":14028:14033  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":14028:14046  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14028:14076  token.safeTransfer(treasury, currentWithdrawFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_494:\n        /* \"farms-pools/LandbaseLockPool.sol\":14107:14144  currentAmount.sub(currentWithdrawFee) */\n      tag_495\n        /* \"farms-pools/LandbaseLockPool.sol\":14125:14143  currentWithdrawFee */\n      dup2\n        /* \"farms-pools/LandbaseLockPool.sol\":14107:14120  currentAmount */\n      dup5\n        /* \"farms-pools/LandbaseLockPool.sol\":14107:14124  currentAmount.sub */\n      tag_192\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14107:14144  currentAmount.sub(currentWithdrawFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_495:\n        /* \"farms-pools/LandbaseLockPool.sol\":14091:14144  currentAmount = currentAmount.sub(currentWithdrawFee) */\n      swap3\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":13859:14156  if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      pop\n    tag_491:\n        /* \"farms-pools/LandbaseLockPool.sol\":14186:14187  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14172:14176  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14172:14183  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":14172:14187  user.shares > 0 */\n      gt\n        /* \"farms-pools/LandbaseLockPool.sol\":14168:14351  if (user.shares > 0) {\r... */\n      iszero\n      tag_496\n      jumpi\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14277  user.shares.mul(balanceOf()).div(totalShares) */\n      tag_497\n        /* \"farms-pools/LandbaseLockPool.sol\":14265:14276  totalShares */\n      sload(0x05)\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14260  user.shares.mul(balanceOf()) */\n      tag_498\n        /* \"farms-pools/LandbaseLockPool.sol\":14248:14259  balanceOf() */\n      tag_499\n        /* \"farms-pools/LandbaseLockPool.sol\":14248:14257  balanceOf */\n      tag_105\n        /* \"farms-pools/LandbaseLockPool.sol\":14248:14259  balanceOf() */\n      jump\t// in\n    tag_499:\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14236  user */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14243  user.shares */\n      0x00\n      add\n      sload\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14247  user.shares.mul */\n      tag_189\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14260  user.shares.mul(balanceOf()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_498:\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14264  user.shares.mul(balanceOf()).div */\n      tag_190\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14232:14277  user.shares.mul(balanceOf()).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_497:\n        /* \"farms-pools/LandbaseLockPool.sol\":14204:14208  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14204:14229  user.cakeAtLastUserAction */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":14204:14277  user.cakeAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14168:14351  if (user.shares > 0) {\r... */\n      jump(tag_500)\n    tag_496:\n        /* \"farms-pools/LandbaseLockPool.sol\":14338:14339  0 */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":14310:14314  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14310:14335  user.cakeAtLastUserAction */\n      0x02\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":14310:14339  user.cakeAtLastUserAction = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14168:14351  if (user.shares > 0) {\r... */\n    tag_500:\n        /* \"farms-pools/LandbaseLockPool.sol\":14389:14404  block.timestamp */\n      timestamp\n        /* \"farms-pools/LandbaseLockPool.sol\":14363:14367  user */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14363:14386  user.lastUserActionTime */\n      0x03\n      add\n        /* \"farms-pools/LandbaseLockPool.sol\":14363:14404  user.lastUserActionTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":14417:14462  token.safeTransfer(msg.sender, currentAmount) */\n      tag_501\n        /* \"farms-pools/LandbaseLockPool.sol\":14436:14446  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":14448:14461  currentAmount */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14417:14422  token */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"farms-pools/LandbaseLockPool.sol\":14417:14435  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"farms-pools/LandbaseLockPool.sol\":14417:14462  token.safeTransfer(msg.sender, currentAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_501:\n        /* \"farms-pools/LandbaseLockPool.sol\":14489:14499  msg.sender */\n      caller\n        /* \"farms-pools/LandbaseLockPool.sol\":14480:14524  Withdraw(msg.sender, currentAmount, _shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"farms-pools/LandbaseLockPool.sol\":14501:14514  currentAmount */\n      dup4\n        /* \"farms-pools/LandbaseLockPool.sol\":14516:14523  _shares */\n      dup7\n        /* \"farms-pools/LandbaseLockPool.sol\":14480:14524  Withdraw(msg.sender, currentAmount, _shares) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"farms-pools/LandbaseLockPool.sol\":13034:14532  function withdrawV1(uint256 _shares) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/SafeERC20.sol\":3027:3788  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_405:\n        /* \"farms-pools/SafeERC20.sol\":3451:3474  bytes memory returndata */\n      0x60\n        /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_503\n        /* \"farms-pools/SafeERC20.sol\":3505:3509  data */\n      dup3\n        /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"farms-pools/SafeERC20.sol\":3485:3490  token */\n      dup6\n        /* \"farms-pools/SafeERC20.sol\":3477:3504  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_164\n      swap1\n        /* \"farms-pools/SafeERC20.sol\":3477:3546  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_503:\n        /* \"farms-pools/SafeERC20.sol\":3451:3546  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"farms-pools/SafeERC20.sol\":3581:3582  0 */\n      0x00\n        /* \"farms-pools/SafeERC20.sol\":3561:3571  returndata */\n      dup2\n        /* \"farms-pools/SafeERC20.sol\":3561:3578  returndata.length */\n      mload\n        /* \"farms-pools/SafeERC20.sol\":3561:3582  returndata.length > 0 */\n      gt\n        /* \"farms-pools/SafeERC20.sol\":3557:3781  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_504\n      jumpi\n        /* \"farms-pools/SafeERC20.sol\":3703:3713  returndata */\n      dup1\n        /* \"farms-pools/SafeERC20.sol\":3692:3722  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_505\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_505:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"farms-pools/SafeERC20.sol\":3684:3769  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_506\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_506:\n        /* \"farms-pools/SafeERC20.sol\":3557:3781  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_504:\n        /* \"farms-pools/SafeERC20.sol\":3027:3788  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/utils/Address.sol\":4721:5251  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_408:\n        /* \"farms-pools/utils/Address.sol\":4848:4860  bytes memory */\n      0x60\n        /* \"farms-pools/utils/Address.sol\":4906:4911  value */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":4881:4902  address(this).balance */\n      selfbalance\n        /* \"farms-pools/utils/Address.sol\":4881:4911  address(this).balance >= value */\n      lt\n      iszero\n        /* \"farms-pools/utils/Address.sol\":4873:4954  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_508\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_508:\n        /* \"farms-pools/utils/Address.sol\":4973:4991  isContract(target) */\n      tag_509\n        /* \"farms-pools/utils/Address.sol\":4984:4990  target */\n      dup6\n        /* \"farms-pools/utils/Address.sol\":4973:4983  isContract */\n      tag_510\n        /* \"farms-pools/utils/Address.sol\":4973:4991  isContract(target) */\n      jump\t// in\n    tag_509:\n        /* \"farms-pools/utils/Address.sol\":4965:5025  require(isContract(target), \"Address: call to non-contract\") */\n      tag_511\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_511:\n        /* \"farms-pools/utils/Address.sol\":5099:5111  bool success */\n      0x00\n        /* \"farms-pools/utils/Address.sol\":5113:5136  bytes memory returndata */\n      0x60\n        /* \"farms-pools/utils/Address.sol\":5140:5146  target */\n      dup7\n        /* \"farms-pools/utils/Address.sol\":5140:5151  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"farms-pools/utils/Address.sol\":5160:5165  value */\n      dup6\n        /* \"farms-pools/utils/Address.sol\":5168:5172  data */\n      dup8\n        /* \"farms-pools/utils/Address.sol\":5140:5173  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_512:\n      0x20\n      dup4\n      lt\n      tag_514\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_512)\n    tag_514:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_517\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_516)\n    tag_517:\n      0x60\n      swap2\n      pop\n    tag_516:\n      pop\n        /* \"farms-pools/utils/Address.sol\":5098:5173  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"farms-pools/utils/Address.sol\":5191:5243  _verifyCallResult(success, returndata, errorMessage) */\n      tag_518\n        /* \"farms-pools/utils/Address.sol\":5209:5216  success */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":5218:5228  returndata */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":5230:5242  errorMessage */\n      dup7\n        /* \"farms-pools/utils/Address.sol\":5191:5208  _verifyCallResult */\n      tag_519\n        /* \"farms-pools/utils/Address.sol\":5191:5243  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_518:\n        /* \"farms-pools/utils/Address.sol\":5184:5243  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"farms-pools/utils/Address.sol\":4721:5251  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farms-pools/LandbaseLockPool.sol\":6342:6481  function _isValidActionBlock() internal view returns(bool) {\r... */\n    tag_437:\n        /* \"farms-pools/LandbaseLockPool.sol\":6395:6399  bool */\n      0x00\n        /* \"farms-pools/LandbaseLockPool.sol\":6435:6445  startBlock */\n      sload(0x03)\n        /* \"farms-pools/LandbaseLockPool.sol\":6419:6431  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":6419:6445  block.number >= startBlock */\n      lt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":6419:6473  block.number >= startBlock && block.number <= endBlock */\n      dup1\n      iszero\n      tag_521\n      jumpi\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":6465:6473  endBlock */\n      sload(0x04)\n        /* \"farms-pools/LandbaseLockPool.sol\":6449:6461  block.number */\n      number\n        /* \"farms-pools/LandbaseLockPool.sol\":6449:6473  block.number <= endBlock */\n      gt\n      iszero\n        /* \"farms-pools/LandbaseLockPool.sol\":6419:6473  block.number >= startBlock && block.number <= endBlock */\n    tag_521:\n        /* \"farms-pools/LandbaseLockPool.sol\":6412:6473  return block.number >= startBlock && block.number <= endBlock */\n      swap1\n      pop\n        /* \"farms-pools/LandbaseLockPool.sol\":6342:6481  function _isValidActionBlock() internal view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"farms-pools/utils/Address.sol\":751:1173  function isContract(address account) internal view returns (bool) {\r... */\n    tag_510:\n        /* \"farms-pools/utils/Address.sol\":811:815  bool */\n      0x00\n        /* \"farms-pools/utils/Address.sol\":1019:1031  uint256 size */\n      dup1\n        /* \"farms-pools/utils/Address.sol\":1130:1137  account */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":1118:1138  extcodesize(account) */\n      extcodesize\n        /* \"farms-pools/utils/Address.sol\":1110:1138  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"farms-pools/utils/Address.sol\":1164:1165  0 */\n      0x00\n        /* \"farms-pools/utils/Address.sol\":1157:1161  size */\n      dup2\n        /* \"farms-pools/utils/Address.sol\":1157:1165  size > 0 */\n      gt\n        /* \"farms-pools/utils/Address.sol\":1150:1165  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"farms-pools/utils/Address.sol\":751:1173  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"farms-pools/utils/Address.sol\":7261:8003  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_519:\n        /* \"farms-pools/utils/Address.sol\":7376:7388  bytes memory */\n      0x60\n        /* \"farms-pools/utils/Address.sol\":7405:7412  success */\n      dup4\n        /* \"farms-pools/utils/Address.sol\":7401:7996  if (success) {\r... */\n      iszero\n      tag_524\n      jumpi\n        /* \"farms-pools/utils/Address.sol\":7436:7446  returndata */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":7429:7446  return returndata */\n      swap1\n      pop\n      jump(tag_523)\n        /* \"farms-pools/utils/Address.sol\":7401:7996  if (success) {\r... */\n    tag_524:\n        /* \"farms-pools/utils/Address.sol\":7570:7571  0 */\n      0x00\n        /* \"farms-pools/utils/Address.sol\":7550:7560  returndata */\n      dup4\n        /* \"farms-pools/utils/Address.sol\":7550:7567  returndata.length */\n      mload\n        /* \"farms-pools/utils/Address.sol\":7550:7571  returndata.length > 0 */\n      gt\n        /* \"farms-pools/utils/Address.sol\":7546:7985  if (returndata.length > 0) {\r... */\n      iszero\n      tag_526\n      jumpi\n        /* \"farms-pools/utils/Address.sol\":7813:7823  returndata */\n      dup3\n        /* \"farms-pools/utils/Address.sol\":7807:7824  mload(returndata) */\n      mload\n        /* \"farms-pools/utils/Address.sol\":7874:7889  returndata_size */\n      dup1\n        /* \"farms-pools/utils/Address.sol\":7861:7871  returndata */\n      dup5\n        /* \"farms-pools/utils/Address.sol\":7857:7859  32 */\n      0x20\n        /* \"farms-pools/utils/Address.sol\":7853:7872  add(32, returndata) */\n      add\n        /* \"farms-pools/utils/Address.sol\":7846:7890  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"farms-pools/utils/Address.sol\":7761:7909  {\r... */\n    tag_526:\n        /* \"farms-pools/utils/Address.sol\":7956:7968  errorMessage */\n      dup2\n        /* \"farms-pools/utils/Address.sol\":7949:7969  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_528:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_530\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_528)\n    tag_530:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_531\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_531:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"farms-pools/utils/Address.sol\":7261:8003  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_523:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19 546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e\n    data_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0 4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_56f1cb28260a5fe006a543516f28c8e9fca2a3d42753a5ece1397133ea778f1c 546f6b656e2063616e6e6f742062652073616d65206173207265636569707420746f6b656e\n    data_5f4afedb5cb4c613eb925791e30905bbaa67a23ed369aa450ccf1eb0e08c07ff 63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f43414c4c5f464545\n    data_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5 706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545\n    data_6d2e0ee418a4fa9636bc860d0410414c2f3bb829ed67581046f589a0e038df7e 6e657720656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a6806e6705a9ee3b0e0c4b8d8e7cb4e2da5d59db3275bba90220e3e7d15d16f8 6465706f73697420616d6f756e7420697320746f6f20736d616c6c20746f20616c6c6f6361746520736861726573\n    data_c9c3e461d0a427a4e9ec61c7672ef5d0872b7afe41af330c564d77d66b5b728b 506f6f6c2063757272656e7420626c6f636b206d757374206265206c6f776572207468616e206e6577207374617274426c6f636b\n    data_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850 7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f44\n    data_e10f87a14096ac956401d5f800040ab40e68d1d271dcb4693c1df00be0147b71 6f6c6420656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18 77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220402a01c5e6c8f21a32b73e6d16c505953f56e2f9dcf29f78d5e54aff9ffe6c7164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0xC8 PUSH1 0x9 SSTORE PUSH1 0x19 PUSH1 0xA SSTORE PUSH1 0xA PUSH1 0xB SSTORE PUSH3 0x3F480 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x582E CODESIZE SUB DUP1 PUSH3 0x582E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xE0 DUP2 LT ISZERO PUSH3 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0xAC PUSH3 0x3AC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 NUMBER LT PUSH3 0x1BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x5760 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH3 0x218 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x57D6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP4 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x39F DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x3B4 PUSH1 0x20 SHL PUSH3 0x3738 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP PUSH3 0x946 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH3 0x486 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x45C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH3 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x57F8 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x582 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH3 0x587 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x5F0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x681 PUSH1 0x20 SHL PUSH3 0x38FD OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH3 0x67C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH3 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x57AC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x698 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x6A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x5786 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x70F DUP6 PUSH3 0x861 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x7D4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH3 0x7AF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x838 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x83D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x855 DUP3 DUP3 DUP7 PUSH3 0x874 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x886 JUMPI DUP3 SWAP1 POP PUSH3 0x93F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x89A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x903 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8E6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x931 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x4D85 PUSH3 0x9DB PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1159 MSTORE DUP1 PUSH2 0x172A MSTORE DUP1 PUSH2 0x1A23 MSTORE DUP1 PUSH2 0x1F7D MSTORE DUP1 PUSH2 0x265D MSTORE DUP1 PUSH2 0x2E1D MSTORE DUP1 PUSH2 0x36F2 MSTORE DUP1 PUSH2 0x3E95 MSTORE DUP1 PUSH2 0x4455 MSTORE POP DUP1 PUSH2 0x319A MSTORE DUP1 PUSH2 0x3320 MSTORE POP DUP1 PUSH2 0x129D MSTORE DUP1 PUSH2 0x136A MSTORE DUP1 PUSH2 0x1828 MSTORE DUP1 PUSH2 0x18A0 MSTORE DUP1 PUSH2 0x1953 MSTORE DUP1 PUSH2 0x2058 MSTORE DUP1 PUSH2 0x2AAD MSTORE DUP1 PUSH2 0x30F5 MSTORE DUP1 PUSH2 0x3716 MSTORE DUP1 PUSH2 0x4599 MSTORE DUP1 PUSH2 0x465B MSTORE POP PUSH2 0x4D85 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x289 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xDAD6F0DC GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xEC78E832 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEC78E832 EQ PUSH2 0x895 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x8C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xFB1DB278 EQ PUSH2 0x985 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9B9 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0xDAD6F0DC EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0xDD191719 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x877 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x9D72596B GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x9D72596B EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xB60F0531 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xB6AC642A EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xBDCA9165 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x78B JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x87788782 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x90321E1A EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x69D JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x4641257D GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x704B6C02 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x619 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x4641257D EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x58EBCEB6 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x52D JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x26465826 GT PUSH2 0x252 JUMPI DUP1 PUSH4 0x26465826 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2AD5A53F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x2CFC5F01 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x49F JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH3 0x6F0231 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x6F5A745 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x1EFAC1B8 EQ PUSH2 0x3BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x489 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0x1411 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B1 PUSH2 0x1584 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH2 0x194F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F7 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DB PUSH2 0x1E0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E5 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x603 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH2 0x2181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62B PUSH2 0x22F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x635 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x653 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x687 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DD PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FB PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2763 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x288B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x775 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x793 PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x809 PUSH2 0x2D58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x813 PUSH2 0x2EBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x857 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3030 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x861 PUSH2 0x3312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87F PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89D PUSH2 0x331E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x34D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x959 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98D PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C1 PUSH2 0x3714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 NUMBER LT PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BB0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C98 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x72A01621587849E39C667EB81696643997F818C6C286614CD1497E5EF2E9ECD6 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C5B PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B52 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xE74 CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EB PUSH1 0x5 SLOAD PUSH2 0x10DD DUP6 PUSH2 0x10CF PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1109 DUP5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1126 DUP5 PUSH1 0x5 SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1136 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x0 PUSH2 0x1155 DUP3 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x11EC PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1203 DUP5 DUP4 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1220 DUP2 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x1240 PUSH1 0xC SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 PUSH2 0x1272 PUSH2 0x2710 PUSH2 0x1264 PUSH1 0xB SLOAD DUP8 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12E1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12F4 DUP2 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1337 PUSH1 0x5 SLOAD PUSH2 0x1329 PUSH2 0x1316 PUSH2 0x1F78 JUMP JUMPDEST DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1363 DUP3 PUSH1 0x1 PUSH2 0x3BE4 JUMP JUMPDEST PUSH2 0x13AE CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DC PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x154E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1556 PUSH2 0x3D94 JUMP JUMPDEST PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x158D CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x1600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A9 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x171C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1726 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x17D0 DUP3 PUSH2 0x17C2 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17FD PUSH2 0x2710 PUSH2 0x17EF PUSH1 0x9 SLOAD DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x186C PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1897 PUSH2 0x2710 PUSH2 0x1889 PUSH1 0xA SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18E4 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EC PUSH2 0x3E7E JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1175A1DD PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1B08 PUSH2 0x1AF9 PUSH2 0x194F JUMP JUMPDEST DUP3 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B55 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B73 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 DUP2 GT ISZERO PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B7A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E13 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E31 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x93F1A40B PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x200A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP SWAP1 POP PUSH2 0x2126 DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD EQ PUSH2 0x2172 JUMPI PUSH2 0x216D PUSH1 0x5 SLOAD PUSH2 0x215F PUSH8 0xDE0B6B3A7640000 PUSH2 0x2151 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x217C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x224C PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x22BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C7 PUSH2 0x3F2A JUMP JUMPDEST PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x22FE CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x245D PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xE6B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 NUMBER LT PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C27 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x2607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AD9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x53462FEC8F17A9D662E3778A6027B6C0C1AC0DA2390A991AA33CB3AA60CAE4E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1175A1DD PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2753 PUSH2 0x2710 PUSH2 0x2745 PUSH1 0xA SLOAD DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x190 DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CEA PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2893 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x2906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290F CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2A99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AF2 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4016 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD EQ PUSH2 0x2B2B JUMPI PUSH2 0x2B24 DUP3 PUSH2 0x2B16 PUSH1 0x5 SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2B2F JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2B88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BF9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2BE2 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2C08 DUP3 PUSH1 0x5 SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x2C40 PUSH1 0x5 SLOAD PUSH2 0x2C32 PUSH2 0x2C1F PUSH2 0x1F78 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2C5C DUP5 PUSH1 0x0 PUSH2 0x3BE4 JUMP JUMPDEST PUSH2 0x2C64 PUSH2 0x3E7E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2D20 PUSH2 0x40D7 JUMP JUMPDEST ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D46 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x40E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5312EA8E PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2EAF PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x2EBC JUMPI PUSH2 0x2EBB PUSH2 0x3F2A JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH2 0x2EC7 CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FE3 PUSH2 0x41C3 JUMP JUMPDEST PUSH2 0x302E PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AB4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x323D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B2D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x330E CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334A PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3368 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x34E0 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34FE PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3587 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x360D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A8E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x3806 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x385B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4D1A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F8 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x390C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x47EA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x393B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x39A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x394C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x39A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BD8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3A2E JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3AAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3B38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BDF DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x3C31 PUSH2 0x40D7 JUMP JUMPDEST ISZERO PUSH2 0x3C5C JUMPI PUSH2 0x3C57 DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x4 ADD SLOAD PUSH2 0x40E3 JUMP JUMPDEST PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x3C6D JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C79 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3CB6 JUMPI DUP2 PUSH1 0x0 ADD SLOAD DUP5 GT PUSH2 0x3CA6 JUMPI PUSH2 0x3CA1 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3CD6 JUMP JUMPDEST PUSH2 0x3CCD DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3CDE PUSH2 0x4993 JUMP JUMPDEST ISZERO PUSH2 0x3CFA JUMPI DUP2 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A9632041D5AD6A474679DA2AC648103E26069C6E77DCA5F3675D3FDCBE1AC17 DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x3D9C PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x3E0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3E51 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E88 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3F1F JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41441D3B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F32 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x3FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3FE9 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x40D1 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 NUMBER SWAP1 POP PUSH1 0x4 SLOAD DUP8 LT PUSH2 0x40FB JUMPI DUP3 SWAP2 POP POP PUSH2 0x41BA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP7 LT ISZERO PUSH2 0x4112 JUMPI PUSH1 0x3 SLOAD SWAP6 POP PUSH1 0x0 SWAP3 POP DUP5 SWAP4 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x4123 JUMPI PUSH1 0x4 SLOAD PUSH2 0x4125 JUMP JUMPDEST DUP1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4150 PUSH2 0x4141 PUSH1 0x3 SLOAD DUP10 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4179 PUSH2 0x416A DUP10 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x41B4 PUSH2 0x4193 PUSH1 0x3 SLOAD DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x41A6 DUP4 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F66FF41198A141A4E315CD2FF387F32686A6D469DA7496FFEE40EAF05E4A411 NUMBER PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4342 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x43BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43EC PUSH1 0x5 SLOAD PUSH2 0x43DE DUP6 PUSH2 0x43D0 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4405 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4422 DUP4 PUSH1 0x5 SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x4432 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4523 JUMPI PUSH1 0x0 PUSH2 0x4451 DUP3 DUP5 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x44E8 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44FF DUP5 DUP4 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x451F JUMPI PUSH2 0x451C DUP2 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x453C PUSH1 0xC SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x45F4 JUMPI PUSH1 0x0 PUSH2 0x456E PUSH2 0x2710 PUSH2 0x4560 PUSH1 0xB SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x45DD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x45F0 DUP2 DUP5 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4640 JUMPI PUSH2 0x4633 PUSH1 0x5 SLOAD PUSH2 0x4625 PUSH2 0x4612 PUSH2 0x1F78 JUMP JUMPDEST DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x464B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x469F CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x475D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38FD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x477E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x47E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CC0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484E DUP6 PUSH2 0x49AE JUMP JUMPDEST PUSH2 0x48C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4910 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4972 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4987 DUP3 DUP3 DUP7 PUSH2 0x49C1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER LT ISZERO DUP1 ISZERO PUSH2 0x49A9 JUMPI POP PUSH1 0x4 SLOAD NUMBER GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x49D1 JUMPI DUP3 SWAP1 POP PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x49E4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A4B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A30 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A78 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373546F6B656E2063616E6E6F7420626520 PUSH20 0x616D65206173206465706F73697420746F6B656E 0x4E PUSH6 0x772073746172 PUSH21 0x426C6F636B206D757374206265206C6F7765722074 PUSH9 0x616E206E657720656E PUSH5 0x426C6F636B COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C546F6B65 PUSH15 0x2063616E6E6F742062652073616D65 KECCAK256 PUSH2 0x7320 PUSH19 0x65636569707420746F6B656E63616C6C466565 KECCAK256 PUSH4 0x616E6E6F PUSH21 0x206265206D6F7265207468616E204D41585F43414C 0x4C 0x5F CHAINID GASLIMIT GASLIMIT PUSH17 0x6572666F726D616E63654665652063616E PUSH15 0x6F74206265206D6F7265207468616E KECCAK256 0x4D COINBASE PC 0x5F POP GASLIMIT MSTORE CHAINID 0x4F MSTORE 0x4D COINBASE 0x4E NUMBER GASLIMIT 0x5F CHAINID GASLIMIT GASLIMIT PUSH15 0x657720656E6420626C6F636B206361 PUSH15 0x277420626568696E64206375727265 PUSH15 0x7420626C6F636B536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F776465706F7369742061 PUSH14 0x6F756E7420697320746F6F20736D PUSH2 0x6C6C KECCAK256 PUSH21 0x6F20616C6C6F6361746520736861726573506F6F6C KECCAK256 PUSH4 0x75727265 PUSH15 0x7420626C6F636B206D757374206265 KECCAK256 PUSH13 0x6F776572207468616E206E6577 KECCAK256 PUSH20 0x74617274426C6F636B7769746864726177466565 POP PUSH6 0x72696F642063 PUSH2 0x6E6E PUSH16 0x74206265206D6F7265207468616E204D COINBASE PC 0x5F JUMPI 0x49 SLOAD 0x48 DIFFICULTY MSTORE COINBASE JUMPI 0x5F CHAINID GASLIMIT GASLIMIT 0x5F POP GASLIMIT MSTORE 0x49 0x4F DIFFICULTY PUSH16 0x6C6420656E6420626C6F636B2063616E 0x27 PUSH21 0x20626568696E642063757272656E7420626C6F636B MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565647769746864726177466565206361 PUSH15 0x6E6F74206265206D6F726520746861 PUSH15 0x204D41585F57495448445241575F46 GASLIMIT GASLIMIT MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220402A01 0xC5 0xE6 0xC8 CALLCODE BYTE ORIGIN 0xB7 RETURNDATACOPY PUSH14 0x16C505953F56E2F9DCF29F78D5E5 0x4A SELFDESTRUCT SWAP16 INVALID PUSH13 0x7164736F6C634300060C003373 PUSH21 0x61727420626C6F636B2063616E277420626568696E PUSH5 0x2063757272 PUSH6 0x6E7420626C6F PUSH4 0x6B416464 PUSH19 0x6573733A20696E73756666696369656E742062 PUSH2 0x6C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564656E6420626C6F636B2063616E27 PUSH21 0x20626568696E6420737461727420626C6F636B5361 PUSH7 0x6545524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x636500000000000000000000000000 ",
							"sourceMap": "229:21619:1:-:0;;;2041:3;2009:35;;2082:2;2057:27;;2129:2;2100:31;;2181:8;2146:43;;3290:729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:17:3;930:12;:10;;;:12;;:::i;:::-;910:32;;962:9;953:6;;:18;;;;;;;;;;;;;;;;;;1020:9;987:43;;1016:1;987:43;;;;;;;;;;;;875:163;977:5:8;967:7;;:15;;;;;;;;;;;;;;;;;;3550:11:1;3535:12;:26;3527:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3637:9;3623:11;:23;3615:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3706:6;3698:14;;;;;;;;;;;;3738:13;3723:28;;;;;;;;;;;;3775:11;3762:24;;;;;;;;;;;;3805:6;3797:5;;:14;;;;;;;;;;;;;;;;;;3833:9;3822:8;;:20;;;;;;;;;;;;;;;;;;3866:11;3853:10;:24;;;;3899:9;3888:8;:20;;;;3950:61;3985:11;4007:2;3957:6;3950:26;;;;;;;;:61;;;;;:::i;:::-;3290:729;;;;;;;229:21619;;613:106:7;666:15;701:10;694:17;;613:106;:::o;1381:622:2:-;1760:1;1751:5;:10;1750:62;;;;1810:1;1767:5;:15;;;1791:4;1798:7;1767:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:44;1750:62;1742:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1905:90;1925:5;1955:22;;;1979:7;1988:5;1932:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1905:19;;;:90;;:::i;:::-;1381:622;;;:::o;3027:761::-;3451:23;3477:69;3505:4;3477:69;;;;;;;;;;;;;;;;;3485:5;3477:27;;;;;;;;:69;;;;;:::i;:::-;3451:95;;3581:1;3561:10;:17;:21;3557:224;;;3703:10;3692:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:224;3027:761;;;:::o;3669:195:6:-;3772:12;3804:52;3826:6;3834:4;3840:1;3843:12;3804:21;;;:52;;:::i;:::-;3797:59;;3669:195;;;;;:::o;4721:530::-;4848:12;4906:5;4881:21;:30;;4873:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:18;4984:6;4973:10;;;:18;;:::i;:::-;4965:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5099:12;5113:23;5140:6;:11;;5160:5;5168:4;5140:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5098:75;;;;5191:52;5209:7;5218:10;5230:12;5191:17;;;:52;;:::i;:::-;5184:59;;;;4721:530;;;;;;:::o;751:422::-;811:4;1019:12;1130:7;1118:20;1110:28;;1164:1;1157:4;:8;1150:15;;;751:422;;;:::o;7261:742::-;7376:12;7405:7;7401:595;;;7436:10;7429:17;;;;7401:595;7570:1;7550:10;:17;:21;7546:439;;;7813:10;7807:17;7874:15;7861:10;7857:2;7853:19;7846:44;7761:148;7956:12;7949:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:742;;;;;;:::o;229:21619:1:-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"119": [
									{
										"length": 32,
										"start": 4765
									},
									{
										"length": 32,
										"start": 4970
									},
									{
										"length": 32,
										"start": 6184
									},
									{
										"length": 32,
										"start": 6304
									},
									{
										"length": 32,
										"start": 6483
									},
									{
										"length": 32,
										"start": 8280
									},
									{
										"length": 32,
										"start": 10925
									},
									{
										"length": 32,
										"start": 12533
									},
									{
										"length": 32,
										"start": 14102
									},
									{
										"length": 32,
										"start": 17817
									},
									{
										"length": 32,
										"start": 18011
									}
								],
								"121": [
									{
										"length": 32,
										"start": 12698
									},
									{
										"length": 32,
										"start": 13088
									}
								],
								"123": [
									{
										"length": 32,
										"start": 4441
									},
									{
										"length": 32,
										"start": 5930
									},
									{
										"length": 32,
										"start": 6691
									},
									{
										"length": 32,
										"start": 8061
									},
									{
										"length": 32,
										"start": 9821
									},
									{
										"length": 32,
										"start": 11805
									},
									{
										"length": 32,
										"start": 14066
									},
									{
										"length": 32,
										"start": 16021
									},
									{
										"length": 32,
										"start": 17493
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102895760003560e01c8063853828b61161015c578063dad6f0dc116100ce578063ec78e83211610087578063ec78e83214610895578063f0f44260146108c9578063f2fde38b1461090d578063f851a44014610951578063fb1db27814610985578063fc0c546a146109b957610289565b8063dad6f0dc146107a9578063db2e21bc14610801578063dd1917191461080b578063def68a9c14610815578063df10b4e614610859578063e941fa781461087757610289565b80639d72596b116101205780639d72596b146106d5578063b60f0531146106f3578063b6ac642a14610711578063b6b55f251461073f578063bdca91651461076d578063d4b0de2f1461078b57610289565b8063853828b614610623578063877887821461062d5780638da5cb5b1461064b57806390321e1a1461067f5780639513997f1461069d57610289565b80634641257d11610200578063704b6c02116101b9578063704b6c021461056157806370897b23146105a5578063715018a6146105d3578063722713f7146105dd57806377c7b8fc146105fb5780638456cb591461061957610289565b80634641257d146104a957806348a0d754146104b357806348cd4cb1146104d157806358ebceb6146104ef5780635c975abb1461050d57806361d027b31461052d57610289565b8063264658261161025257806326465826146103e95780632ad5a53f146104175780632cfc5f01146104355780632e1a7d4d146104535780633a98ef39146104815780633f4ba83a1461049f57610289565b80626f02311461028e57806306f5a745146102bc578063083c6323146103305780631959a0021461034e5780631efac1b8146103bb575b600080fd5b6102ba600480360360208110156102a457600080fd5b81019080803590602001909291905050506109ed565b005b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba3565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b610338610bd9565b6040518082815260200191505060405180910390f35b6103906004803603602081101561036457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdf565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6103e7600480360360208110156103d157600080fd5b8101908080359060200190929190505050610c0f565b005b610415600480360360208110156103ff57600080fd5b8101908080359060200190929190505050610d38565b005b61041f610e5f565b6040518082815260200191505060405180910390f35b61043d610e64565b6040518082815260200191505060405180910390f35b61047f6004803603602081101561046957600080fd5b8101908080359060200190929190505050610e6b565b005b61048961140b565b6040518082815260200191505060405180910390f35b6104a7611411565b005b6104b1611584565b005b6104bb61194f565b6040518082815260200191505060405180910390f35b6104d9611a18565b6040518082815260200191505060405180910390f35b6104f7611a1e565b6040518082815260200191505060405180910390f35b610515611b11565b60405180821515815260200191505060405180910390f35b610535611b27565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a36004803603602081101561057757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4d565b005b6105d1600480360360208110156105bb57600080fd5b8101908080359060200190929190505050611ce3565b005b6105db611e0b565b005b6105e5611f78565b6040518082815260200191505060405180910390f35b61060361212c565b6040518082815260200191505060405180910390f35b610621612181565b005b61062b6122f5565b005b61063561245f565b6040518082815260200191505060405180910390f35b610653612465565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61068761248e565b6040518082815260200191505060405180910390f35b6106d3600480360360408110156106b357600080fd5b810190808035906020019092919080359060200190929190505050612494565b005b6106dd612658565b6040518082815260200191505060405180910390f35b6106fb61275d565b6040518082815260200191505060405180910390f35b61073d6004803603602081101561072757600080fd5b8101908080359060200190929190505050612763565b005b61076b6004803603602081101561075557600080fd5b810190808035906020019092919050505061288b565b005b610775612cc8565b6040518082815260200191505060405180910390f35b610793612cce565b6040518082815260200191505060405180910390f35b6107eb600480360360208110156107bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cd4565b6040518082815260200191505060405180910390f35b610809612d58565b005b610813612ebe565b005b6108576004803603602081101561082b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613030565b005b610861613312565b6040518082815260200191505060405180910390f35b61087f613318565b6040518082815260200191505060405180910390f35b61089d61331e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61090b600480360360208110156108df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613342565b005b61094f6004803603602081101561092357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134d8565b005b6109596136ca565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61098d6136f0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109c1613714565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b804310610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614bb06028913960400191505060405180910390fd5b6004544310610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614c986028913960400191505060405180910390fd5b806004819055507f72a01621587849e39c667eb81696643997f818c6c286614cd1497e5ef2e9ecd6816040518082815260200191505060405180910390a150565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b60045481565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b62093a80811115610d2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180614c5b603d913960400191505060405180910390fd5b80600c8190555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b6064811115610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614b526028913960400191505060405180910390fd5b80600a8190555050565b606481565b62093a8081565b610e7433613915565b15610ee7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f636f6e7472616374206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f70726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211611041576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b80600001548211156110bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b60006110eb6005546110dd856110cf611f78565b61392890919063ffffffff16565b6139ae90919063ffffffff16565b90506000819050611109848460000154613a3790919063ffffffff16565b836000018190555061112684600554613a3790919063ffffffff16565b600581905550600061113661194f565b9050828110156112275760006111558285613a3790919063ffffffff16565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631058d281826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111ca57600080fd5b505af11580156111de573d6000803e3d6000fd5b5050505060006111ec61194f565b905060006112038483613a3790919063ffffffff16565b905082811015611223576112208185613aba90919063ffffffff16565b95505b5050505b611240600c548560010154613aba90919063ffffffff16565b4210156112f8576000611272612710611264600b548761392890919063ffffffff16565b6139ae90919063ffffffff16565b90506112e1600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b6112f48185613a3790919063ffffffff16565b9350505b60008460000154111561134457611337600554611329611316611f78565b876000015461392890919063ffffffff16565b6139ae90919063ffffffff16565b846002018190555061134f565b600084600201819055505b428460030181905550611363826001613be4565b6113ae33847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688487604051808381526020018281526020019250505060405180910390a25050505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b6114dc611b11565b61154e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b611556613d94565b7f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b61158d33613915565b15611600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f636f6e7472616374206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f70726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000081525060200191505060405180910390fd5b6116a9611b11565b1561171c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600061172661194f565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631058d28160006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561179c57600080fd5b505af11580156117b0573d6000803e3d6000fd5b5050505060006117d0826117c261194f565b613a3790919063ffffffff16565b905060006117fd6127106117ef6009548561392890919063ffffffff16565b6139ae90919063ffffffff16565b905061186c600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b6000611897612710611889600a548661392890919063ffffffff16565b6139ae90919063ffffffff16565b90506118e433827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b6118ec613e7e565b426006819055503373ffffffffffffffffffffffffffffffffffffffff167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249548383604051808381526020018281526020019250505060405180910390a250505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156119d857600080fd5b505afa1580156119ec573d6000803e3d6000fd5b505050506040513d6020811015611a0257600080fd5b8101908080519060200190929190505050905090565b60035481565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631175a1dd6000306040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611ab157600080fd5b505afa158015611ac5573d6000803e3d6000fd5b505050506040513d6020811015611adb57600080fd5b81019080805190602001909291905050509050611b08611af961194f565b82613aba90919063ffffffff16565b90508091505090565b60008060149054906101000a900460ff16905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b55613f22565b73ffffffffffffffffffffffffffffffffffffffff16611b73612465565b73ffffffffffffffffffffffffffffffffffffffff1614611bfc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f74206265207a65726f20616464726573730000000000000000000081525060200191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611da6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b610258811115611e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180614b7a6036913960400191505060405180910390fd5b8060098190555050565b611e13613f22565b73ffffffffffffffffffffffffffffffffffffffff16611e31612465565b73ffffffffffffffffffffffffffffffffffffffff1614611eba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166393f1a40b6000306040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801561200a57600080fd5b505afa15801561201e573d6000803e3d6000fd5b505050506040513d604081101561203457600080fd5b810190808051906020019092919080519060200190929190505050509050612126817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120dd57600080fd5b505afa1580156120f1573d6000803e3d6000fd5b505050506040513d602081101561210757600080fd5b8101908080519060200190929190505050613aba90919063ffffffff16565b91505090565b600080600554146121725761216d60055461215f670de0b6b3a7640000612151611f78565b61392890919063ffffffff16565b6139ae90919063ffffffff16565b61217c565b670de0b6b3a76400005b905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b61224c611b11565b156122bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6122c7613f2a565b7f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6122fe33613915565b15612371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f636f6e7472616374206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f70726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000081525060200191505060405180910390fd5b61245d600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610e6b565b565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a5481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b8143106125af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180614c276034913960400191505060405180910390fd5b808210612607576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614ad9602e913960400191505060405180910390fd5b81600381905550806004819055507f053462fec8f17a9d662e3778a6027b6c0c1ac0da2390a991aa33cb3aa60cae4e8282604051808381526020018281526020019250505060405180910390a15050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631175a1dd6000306040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156126eb57600080fd5b505afa1580156126ff573d6000803e3d6000fd5b505050506040513d602081101561271557600080fd5b810190808051906020019092919050505090506000612753612710612745600a548561392890919063ffffffff16565b6139ae90919063ffffffff16565b9050809250505090565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b610190811115612881576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614cea6030913960400191505060405180910390fd5b80600b8190555050565b612893611b11565b15612906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61290f33613915565b15612982576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f636f6e7472616374206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612a23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f70726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000081525060200191505060405180910390fd5b60008111612a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7468696e6720746f206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b6000612aa3611f78565b9050612af23330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16614016909392919063ffffffff16565b60008060055414612b2b57612b2482612b166005548661392890919063ffffffff16565b6139ae90919063ffffffff16565b9050612b2f565b8290505b60008111612b88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614bf9602e913960400191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050612be2828260000154613aba90919063ffffffff16565b8160000181905550428160010181905550612c0882600554613aba90919063ffffffff16565b600581905550612c40600554612c32612c1f611f78565b846000015461392890919063ffffffff16565b6139ae90919063ffffffff16565b8160020181905550428160030181905550612c5c846000613be4565b612c64613e7e565b3373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e85844260405180848152602001838152602001828152602001935050505060405180910390a250505050565b61025881565b61019081565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050612d206140d7565b15612d4d57612d46816002015482600301548360000154846001015485600401546140e3565b9150612d52565b600091505b50919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612e1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635312ea8e60006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015612e8f57600080fd5b505af1158015612ea3573d6000803e3d6000fd5b50505050612eaf611b11565b612ebc57612ebb613f2a565b5b565b612ec733613915565b15612f3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f636f6e7472616374206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612fdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f70726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000081525060200191505060405180910390fd5b612fe36141c3565b61302e600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154614289565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146130f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f61646d696e3a207775743f00000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613198576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180614ab46025913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561323d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180614b2d6025913960400191505060405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156132a657600080fd5b505afa1580156132ba573d6000803e3d6000fd5b505050506040513d60208110156132d057600080fd5b8101908080519060200190929190505050905061330e33828473ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b5050565b600c5481565b600b5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b61334a613f22565b73ffffffffffffffffffffffffffffffffffffffff16613368612465565b73ffffffffffffffffffffffffffffffffffffffff16146133f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613494576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f74206265207a65726f20616464726573730000000000000000000081525060200191505060405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6134e0613f22565b73ffffffffffffffffffffffffffffffffffffffff166134fe612465565b73ffffffffffffffffffffffffffffffffffffffff1614613587576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561360d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614a8e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000811480613806575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156137c957600080fd5b505afa1580156137dd573d6000803e3d6000fd5b505050506040513d60208110156137f357600080fd5b8101908080519060200190929190505050145b61385b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180614d1a6036913960400191505060405180910390fd5b6138f88363095ea7b360e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506146fb565b505050565b606061390c84846000856147ea565b90509392505050565b600080823b905060008111915050919050565b60008083141561393b57600090506139a8565b600082840290508284828161394c57fe5b04146139a3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614bd86021913960400191505060405180910390fd5b809150505b92915050565b6000808211613a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381613a2e57fe5b04905092915050565b600082821115613aaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015613b38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b613bdf8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506146fb565b505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000613c316140d7565b15613c5c57613c57826002015483600301548460000154856001015486600401546140e3565b613c5f565b60005b9050600180811115613c6d57fe5b836001811115613c7957fe5b1415613cb65781600001548411613ca657613ca1848360000154613a3790919063ffffffff16565b613ca9565b60005b8260000181905550613cd6565b613ccd848360000154613aba90919063ffffffff16565b82600001819055505b613cde614993565b15613cfa57816000015482600101819055504382600301819055505b8082600401819055504382600201819055503373ffffffffffffffffffffffffffffffffffffffff167f6a9632041d5ad6a474679da2ac648103e26069c6e77dca5f3675d3fdcbe1ac1783600401548460000154856001015486600201548760030154604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a250505050565b613d9c611b11565b613e0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa613e51613f22565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000613e8861194f565b90506000811115613f1f577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166341441d3b826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015613f0657600080fd5b505af1158015613f1a573d6000803e3d6000fd5b505050505b50565b600033905090565b613f32611b11565b15613fa5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613fe9613f22565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6140d1846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506146fb565b50505050565b60006003544311905090565b60008043905060045487106140fb57829150506141ba565b600354861015614112576003549550600092508493505b600454811061412357600454614125565b805b9050600061415061414160035489613a3790919063ffffffff16565b8561392890919063ffffffff16565b9050600061417961416a8985613a3790919063ffffffff16565b8761392890919063ffffffff16565b90506141b461419360035485613a3790919063ffffffff16565b6141a68385613aba90919063ffffffff16565b6139ae90919063ffffffff16565b93505050505b95945050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000181905550600081600101819055506000816002018190555060008160030181905550600081600401819055503373ffffffffffffffffffffffffffffffffffffffff167f6f66ff41198a141a4e315cd2ff387f32686a6d469da7496ffee40eaf05e4a411436040518082815260200191505060405180910390a250565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211614342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b80600001548211156143bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b60006143ec6005546143de856143d0611f78565b61392890919063ffffffff16565b6139ae90919063ffffffff16565b9050614405838360000154613a3790919063ffffffff16565b826000018190555061442283600554613a3790919063ffffffff16565b600581905550600061443261194f565b9050818110156145235760006144518284613a3790919063ffffffff16565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631058d281826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156144c657600080fd5b505af11580156144da573d6000803e3d6000fd5b5050505060006144e861194f565b905060006144ff8483613a3790919063ffffffff16565b90508281101561451f5761451c8185613aba90919063ffffffff16565b94505b5050505b61453c600c548460010154613aba90919063ffffffff16565b4210156145f457600061456e612710614560600b548661392890919063ffffffff16565b6139ae90919063ffffffff16565b90506145dd600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b6145f08184613a3790919063ffffffff16565b9250505b60008360000154111561464057614633600554614625614612611f78565b866000015461392890919063ffffffff16565b6139ae90919063ffffffff16565b836002018190555061464b565b600083600201819055505b42836003018190555061469f33837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16613b429092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688386604051808381526020018281526020019250505060405180910390a250505050565b606061475d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166138fd9092919063ffffffff16565b90506000815111156147e55780806020019051602081101561477e57600080fd5b81019080805190602001909291905050506147e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614cc0602a913960400191505060405180910390fd5b5b505050565b606082471015614845576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614b076026913960400191505060405180910390fd5b61484e856149ae565b6148c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061491057805182526020820191506020810190506020830392506148ed565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614972576040519150601f19603f3d011682016040523d82523d6000602084013e614977565b606091505b50915091506149878282866149c1565b92505050949350505050565b600060035443101580156149a957506004544311155b905090565b600080823b905060008111915050919050565b606083156149d157829050614a86565b6000835111156149e45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a4b578082015181840152602081019050614a30565b50505050905090810190601f168015614a785780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c546f6b656e2063616e6e6f742062652073616d65206173207265636569707420746f6b656e63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f43414c4c5f464545706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f4645456e657720656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776465706f73697420616d6f756e7420697320746f6f20736d616c6c20746f20616c6c6f6361746520736861726573506f6f6c2063757272656e7420626c6f636b206d757374206265206c6f776572207468616e206e6577207374617274426c6f636b7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f446f6c6420656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b5361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656477697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220402a01c5e6c8f21a32b73e6d16c505953f56e2f9dcf29f78d5e54aff9ffe6c7164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x289 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xDAD6F0DC GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xEC78E832 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEC78E832 EQ PUSH2 0x895 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x8C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xFB1DB278 EQ PUSH2 0x985 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9B9 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0xDAD6F0DC EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0xDD191719 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x877 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x9D72596B GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x9D72596B EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xB60F0531 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xB6AC642A EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xBDCA9165 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x78B JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x87788782 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x90321E1A EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x69D JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x4641257D GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x704B6C02 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x619 JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x4641257D EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x58EBCEB6 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x52D JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH4 0x26465826 GT PUSH2 0x252 JUMPI DUP1 PUSH4 0x26465826 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2AD5A53F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x2CFC5F01 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x49F JUMPI PUSH2 0x289 JUMP JUMPDEST DUP1 PUSH3 0x6F0231 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x6F5A745 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x1EFAC1B8 EQ PUSH2 0x3BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x489 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0x1411 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B1 PUSH2 0x1584 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH2 0x194F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F7 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DB PUSH2 0x1E0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E5 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x603 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH2 0x2181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62B PUSH2 0x22F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x635 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x653 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x687 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DD PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FB PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2763 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x288B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x775 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x793 PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x809 PUSH2 0x2D58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x813 PUSH2 0x2EBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x857 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3030 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x861 PUSH2 0x3312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87F PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89D PUSH2 0x331E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x34D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x959 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98D PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C1 PUSH2 0x3714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 NUMBER LT PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BB0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C98 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x72A01621587849E39C667EB81696643997F818C6C286614CD1497E5EF2E9ECD6 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C5B PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B52 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xE74 CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EB PUSH1 0x5 SLOAD PUSH2 0x10DD DUP6 PUSH2 0x10CF PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1109 DUP5 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1126 DUP5 PUSH1 0x5 SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1136 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x0 PUSH2 0x1155 DUP3 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x11EC PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1203 DUP5 DUP4 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1220 DUP2 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x1240 PUSH1 0xC SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 PUSH2 0x1272 PUSH2 0x2710 PUSH2 0x1264 PUSH1 0xB SLOAD DUP8 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12E1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12F4 DUP2 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1337 PUSH1 0x5 SLOAD PUSH2 0x1329 PUSH2 0x1316 PUSH2 0x1F78 JUMP JUMPDEST DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1363 DUP3 PUSH1 0x1 PUSH2 0x3BE4 JUMP JUMPDEST PUSH2 0x13AE CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DC PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x154E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1556 PUSH2 0x3D94 JUMP JUMPDEST PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x158D CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x1600 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A9 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x171C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1726 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x17D0 DUP3 PUSH2 0x17C2 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17FD PUSH2 0x2710 PUSH2 0x17EF PUSH1 0x9 SLOAD DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x186C PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1897 PUSH2 0x2710 PUSH2 0x1889 PUSH1 0xA SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18E4 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EC PUSH2 0x3E7E JUMP JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1175A1DD PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1B08 PUSH2 0x1AF9 PUSH2 0x194F JUMP JUMPDEST DUP3 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B55 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B73 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 DUP2 GT ISZERO PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B7A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E13 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E31 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x93F1A40B PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x200A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP SWAP1 POP PUSH2 0x2126 DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD EQ PUSH2 0x2172 JUMPI PUSH2 0x216D PUSH1 0x5 SLOAD PUSH2 0x215F PUSH8 0xDE0B6B3A7640000 PUSH2 0x2151 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x217C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x224C PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x22BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C7 PUSH2 0x3F2A JUMP JUMPDEST PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x22FE CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x245D PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xE6B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 NUMBER LT PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C27 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x2607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AD9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x53462FEC8F17A9D662E3778A6027B6C0C1AC0DA2390A991AA33CB3AA60CAE4E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1175A1DD PUSH1 0x0 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2753 PUSH2 0x2710 PUSH2 0x2745 PUSH1 0xA SLOAD DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x190 DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CEA PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2893 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x2906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290F CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2A99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AF2 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4016 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD EQ PUSH2 0x2B2B JUMPI PUSH2 0x2B24 DUP3 PUSH2 0x2B16 PUSH1 0x5 SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2B2F JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2B88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BF9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2BE2 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2C08 DUP3 PUSH1 0x5 SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x2C40 PUSH1 0x5 SLOAD PUSH2 0x2C32 PUSH2 0x2C1F PUSH2 0x1F78 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2C5C DUP5 PUSH1 0x0 PUSH2 0x3BE4 JUMP JUMPDEST PUSH2 0x2C64 PUSH2 0x3E7E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2D20 PUSH2 0x40D7 JUMP JUMPDEST ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D46 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x40E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5312EA8E PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2EAF PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x2EBC JUMPI PUSH2 0x2EBB PUSH2 0x3F2A JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH2 0x2EC7 CALLER PUSH2 0x3915 JUMP JUMPDEST ISZERO PUSH2 0x2F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FE3 PUSH2 0x41C3 JUMP JUMPDEST PUSH2 0x302E PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AB4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x323D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B2D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x330E CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334A PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3368 PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x34E0 PUSH2 0x3F22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34FE PUSH2 0x2465 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3587 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x360D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A8E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x3806 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x385B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4D1A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F8 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x390C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x47EA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x393B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x39A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x394C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x39A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BD8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3A2E JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3AAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3B38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BDF DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x3C31 PUSH2 0x40D7 JUMP JUMPDEST ISZERO PUSH2 0x3C5C JUMPI PUSH2 0x3C57 DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x4 ADD SLOAD PUSH2 0x40E3 JUMP JUMPDEST PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x3C6D JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C79 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3CB6 JUMPI DUP2 PUSH1 0x0 ADD SLOAD DUP5 GT PUSH2 0x3CA6 JUMPI PUSH2 0x3CA1 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3CD6 JUMP JUMPDEST PUSH2 0x3CCD DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3CDE PUSH2 0x4993 JUMP JUMPDEST ISZERO PUSH2 0x3CFA JUMPI DUP2 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A9632041D5AD6A474679DA2AC648103E26069C6E77DCA5F3675D3FDCBE1AC17 DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x3D9C PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x3E0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3E51 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E88 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3F1F JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41441D3B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F32 PUSH2 0x1B11 JUMP JUMPDEST ISZERO PUSH2 0x3FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3FE9 PUSH2 0x3F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x40D1 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x46FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 NUMBER SWAP1 POP PUSH1 0x4 SLOAD DUP8 LT PUSH2 0x40FB JUMPI DUP3 SWAP2 POP POP PUSH2 0x41BA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP7 LT ISZERO PUSH2 0x4112 JUMPI PUSH1 0x3 SLOAD SWAP6 POP PUSH1 0x0 SWAP3 POP DUP5 SWAP4 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x4123 JUMPI PUSH1 0x4 SLOAD PUSH2 0x4125 JUMP JUMPDEST DUP1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4150 PUSH2 0x4141 PUSH1 0x3 SLOAD DUP10 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4179 PUSH2 0x416A DUP10 DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x41B4 PUSH2 0x4193 PUSH1 0x3 SLOAD DUP6 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x41A6 DUP4 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F66FF41198A141A4E315CD2FF387F32686A6D469DA7496FFEE40EAF05E4A411 NUMBER PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4342 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x43BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43EC PUSH1 0x5 SLOAD PUSH2 0x43DE DUP6 PUSH2 0x43D0 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4405 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4422 DUP4 PUSH1 0x5 SLOAD PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x4432 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4523 JUMPI PUSH1 0x0 PUSH2 0x4451 DUP3 DUP5 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1058D281 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x44E8 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44FF DUP5 DUP4 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x451F JUMPI PUSH2 0x451C DUP2 DUP6 PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH2 0x453C PUSH1 0xC SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x3ABA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x45F4 JUMPI PUSH1 0x0 PUSH2 0x456E PUSH2 0x2710 PUSH2 0x4560 PUSH1 0xB SLOAD DUP7 PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x45DD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x45F0 DUP2 DUP5 PUSH2 0x3A37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4640 JUMPI PUSH2 0x4633 PUSH1 0x5 SLOAD PUSH2 0x4625 PUSH2 0x4612 PUSH2 0x1F78 JUMP JUMPDEST DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x3928 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x464B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x469F CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x475D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38FD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x477E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x47E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CC0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484E DUP6 PUSH2 0x49AE JUMP JUMPDEST PUSH2 0x48C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4910 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4972 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4987 DUP3 DUP3 DUP7 PUSH2 0x49C1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER LT ISZERO DUP1 ISZERO PUSH2 0x49A9 JUMPI POP PUSH1 0x4 SLOAD NUMBER GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x49D1 JUMPI DUP3 SWAP1 POP PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x49E4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A4B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A30 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A78 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373546F6B656E2063616E6E6F7420626520 PUSH20 0x616D65206173206465706F73697420746F6B656E 0x4E PUSH6 0x772073746172 PUSH21 0x426C6F636B206D757374206265206C6F7765722074 PUSH9 0x616E206E657720656E PUSH5 0x426C6F636B COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C546F6B65 PUSH15 0x2063616E6E6F742062652073616D65 KECCAK256 PUSH2 0x7320 PUSH19 0x65636569707420746F6B656E63616C6C466565 KECCAK256 PUSH4 0x616E6E6F PUSH21 0x206265206D6F7265207468616E204D41585F43414C 0x4C 0x5F CHAINID GASLIMIT GASLIMIT PUSH17 0x6572666F726D616E63654665652063616E PUSH15 0x6F74206265206D6F7265207468616E KECCAK256 0x4D COINBASE PC 0x5F POP GASLIMIT MSTORE CHAINID 0x4F MSTORE 0x4D COINBASE 0x4E NUMBER GASLIMIT 0x5F CHAINID GASLIMIT GASLIMIT PUSH15 0x657720656E6420626C6F636B206361 PUSH15 0x277420626568696E64206375727265 PUSH15 0x7420626C6F636B536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F776465706F7369742061 PUSH14 0x6F756E7420697320746F6F20736D PUSH2 0x6C6C KECCAK256 PUSH21 0x6F20616C6C6F6361746520736861726573506F6F6C KECCAK256 PUSH4 0x75727265 PUSH15 0x7420626C6F636B206D757374206265 KECCAK256 PUSH13 0x6F776572207468616E206E6577 KECCAK256 PUSH20 0x74617274426C6F636B7769746864726177466565 POP PUSH6 0x72696F642063 PUSH2 0x6E6E PUSH16 0x74206265206D6F7265207468616E204D COINBASE PC 0x5F JUMPI 0x49 SLOAD 0x48 DIFFICULTY MSTORE COINBASE JUMPI 0x5F CHAINID GASLIMIT GASLIMIT 0x5F POP GASLIMIT MSTORE 0x49 0x4F DIFFICULTY PUSH16 0x6C6420656E6420626C6F636B2063616E 0x27 PUSH21 0x20626568696E642063757272656E7420626C6F636B MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565647769746864726177466565206361 PUSH15 0x6E6F74206265206D6F726520746861 PUSH15 0x204D41585F57495448445241575F46 GASLIMIT GASLIMIT MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220402A01 0xC5 0xE6 0xC8 CALLCODE BYTE ORIGIN 0xB7 RETURNDATACOPY PUSH14 0x16C505953F56E2F9DCF29F78D5E5 0x4A SELFDESTRUCT SWAP16 INVALID PUSH13 0x7164736F6C634300060C003300 ",
							"sourceMap": "229:21619:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18049:322;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1500:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1438:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16901:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16278:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1817:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1931:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11095:1644;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1624:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19518:103;;;:::i;:::-;;14665:612;;;:::i;:::-;;20801:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1560:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20181:234;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1090:86:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1723:23:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15388:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15934:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1770:148:3;;;:::i;:::-;;21065:201:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20488:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19300:100;;;:::i;:::-;;10135;;;:::i;:::-;;2009:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1119:87:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2057:27:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17441:428;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19770:260;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1657:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16570:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4670:1063;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1755:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1872:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9626:436;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18544:169;;;:::i;:::-;;10378:136;;;:::i;:::-;;18805:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2146:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2100:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1330:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15654:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2073:244:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1696:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1390:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1280:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18049:322;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18145:9:::1;18130:12;:24;18122:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18233:8;;18218:12;:23;18210:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18311:9;18300:8;:20;;;;18338:25;18353:9;18338:25;;;;;;;;;;;;;;;;;;18049:322:::0;:::o;1500:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1592:23::-;;;;:::o;1438:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16901:301::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:9:::1;17011:18;:45;;16989:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17176:18;17156:17;:38;;;;16901:301:::0;:::o;16278:182::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:3:::1;16354:8;:24;;16346:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16444:8;16434:7;:18;;;;16278:182:::0;:::o;1817:42::-;1856:3;1817:42;:::o;1931:59::-;1981:9;1931:59;:::o;11095:1644::-;4337:23;4349:10;4337:11;:23::i;:::-;4336:24;4328:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:9;4404:23;;:10;:23;;;4396:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11160:21:::1;11184:8;:20;11193:10;11184:20;;;;;;;;;;;;;;;11160:44;;11233:1;11223:7;:11;11215:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11288:4;:11;;;11277:7;:22;;11269:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11348:21;11372:43;11403:11;;11373:24;11389:7;11373:11;:9;:11::i;:::-;:15;;:24;;;;:::i;:::-;11372:30;;:43;;;;:::i;:::-;11348:67;;11426:23;11452:13;11426:39;;11490:24;11506:7;11490:4;:11;;;:15;;:24;;;;:::i;:::-;11476:4;:11;;:38;;;;11539:24;11555:7;11539:11;;:15;;:24;;;;:::i;:::-;11525:11;:38;;;;11576:11;11590;:9;:11::i;:::-;11576:25;;11622:13;11616:3;:19;11612:354;;;11652:19;11674:22;11692:3;11674:13;:17;;:22;;;;:::i;:::-;11652:44;;11723:10;11711:36;;;11748:11;11711:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11775:16;11794:11;:9;:11::i;:::-;11775:30;;11820:12;11835:17;11848:3;11835:8;:12;;:17;;;;:::i;:::-;11820:32;;11878:11;11871:4;:18;11867:88;;;11926:13;11934:4;11926:3;:7;;:13;;;;:::i;:::-;11910:29;;11867:88;11612:354;;;;12000:45;12027:17;;12000:4;:22;;;:26;;:45;;;;:::i;:::-;11982:15;:63;11978:297;;;12062:26;12091:41;12126:5;12091:30;12109:11;;12091:13;:17;;:30;;;;:::i;:::-;:34;;:41;;;;:::i;:::-;12062:70;;12147:48;12166:8;;;;;;;;;;;12176:18;12147:5;:18;;;;:48;;;;;:::i;:::-;12226:37;12244:18;12226:13;:17;;:37;;;;:::i;:::-;12210:53;;11978:297;;12305:1;12291:4;:11;;;:15;12287:183;;;12351:45;12384:11;;12351:28;12367:11;:9;:11::i;:::-;12351:4;:11;;;:15;;:28;;;;:::i;:::-;:32;;:45;;;;:::i;:::-;12323:4;:25;;:73;;;;12287:183;;;12457:1;12429:4;:25;;:29;;;;12287:183;12508:15;12482:4;:23;;:41;;;;12559:52;12574:15;12591:19;12559:14;:52::i;:::-;12624:45;12643:10;12655:13;12624:5;:18;;;;:45;;;;;:::i;:::-;12696:10;12687:44;;;12708:13;12723:7;12687:44;;;;;;;;;;;;;;;;;;;;;;;;4469:1;;;;11095:1644:::0;:::o;1624:26::-;;;;:::o;19518:103::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1693:8:8::1;:6;:8::i;:::-;1685:41;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;19578:10:1::2;:8;:10::i;:::-;19604:9;;;;;;;;;;19518:103::o:0;14665:612::-;4337:23;4349:10;4337:11;:23::i;:::-;4336:24;4328:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:9;4404:23;;:10;:23;;;4396:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:8:8::1;:6;:8::i;:::-;1415:9;1407:38;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;14730:17:1::2;14750:11;:9;:11::i;:::-;14730:31;;14784:10;14772:36;;;14809:1;14772:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;14822:11;14836:26;14852:9;14836:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;14822:40;;14875:29;14907:34;14935:5;14907:23;14915:14;;14907:3;:7;;:23;;;;:::i;:::-;:27;;:34;;;;:::i;:::-;14875:66;;14952:51;14971:8;;;;;;;;;;;14981:21;14952:5;:18;;;;:51;;;;;:::i;:::-;15016:22;15041:27;15062:5;15041:16;15049:7;;15041:3;:7;;:16;;;;:::i;:::-;:20;;:27;;;;:::i;:::-;15016:52;;15079:46;15098:10;15110:14;15079:5;:18;;;;:46;;;;;:::i;:::-;15138:7;:5;:7::i;:::-;15178:15;15158:17;:35;;;;15219:10;15211:58;;;15231:21;15254:14;15211:58;;;;;;;;;;;;;;;;;;;;;;;;1456:1:8;;;;14665:612:1:o:0;20801:107::-;20843:7;20870:5;:15;;;20894:4;20870:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20863:37;;20801:107;:::o;1560:25::-;;;;:::o;20181:234::-;20248:7;20268:14;20297:10;20285:35;;;20321:1;20332:4;20285:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20268:70;;20358:23;20369:11;:9;:11::i;:::-;20358:6;:10;;:23;;;;:::i;:::-;20349:32;;20401:6;20394:13;;;20181:234;:::o;1090:86:8:-;1137:4;1161:7;;;;;;;;;;;1154:14;;1090:86;:::o;1723:23:1:-;;;;;;;;;;;;;:::o;15388:152::-;1350:12:3;:10;:12::i;:::-;1339:23;;:7;:5;:7::i;:::-;:23;;;1331:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15478:1:1::1;15460:20;;:6;:20;;;;15452:55;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;15526:6;15518:5;;:14;;;;;;;;;;;;;;;;;;15388:152:::0;:::o;15934:238::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:3:::1;16024:15;:38;;16016:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16149:15;16132:14;:32;;;;15934:238:::0;:::o;1770:148:3:-;1350:12;:10;:12::i;:::-;1339:23;;:7;:5;:7::i;:::-;:23;;;1331:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1908:1;1891:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1770:148::o:0;21065:201:1:-;21107:7;21128:14;21160:10;21148:32;;;21181:1;21192:4;21148:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21127:71;;;21216:42;21251:6;21216:5;:15;;;21240:4;21216:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;:42;;;;:::i;:::-;21209:49;;;21065:201;:::o;20488:154::-;20543:7;20585:1;20570:11;;:16;:64;;20596:38;20622:11;;20596:21;20612:4;20596:11;:9;:11::i;:::-;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;20570:64;;;20589:4;20570:64;20563:71;;20488:154;:::o;19300:100::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:8:8::1;:6;:8::i;:::-;1415:9;1407:38;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;19361:8:1::2;:6;:8::i;:::-;19385:7;;;;;;;;;;19300:100::o:0;10135:::-;4337:23;4349:10;4337:11;:23::i;:::-;4336:24;4328:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:9;4404:23;;:10;:23;;;4396:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10190:37:::1;10199:8;:20;10208:10;10199:20;;;;;;;;;;;;;;;:27;;;10190:8;:37::i;:::-;10135:100::o:0;2009:35::-;;;;:::o;1119:87:3:-;1165:7;1192:6;;;;;;;;;;;1185:13;;1119:87;:::o;2057:27:1:-;;;;:::o;17441:428::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17567:11:::1;17552:12;:26;17544:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17668:9;17654:11;:23;17646:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17754:11;17741:10;:24;;;;17787:9;17776:8;:20;;;;17814:47;17838:11;17851:9;17814:47;;;;;;;;;;;;;;;;;;;;;;;;17441:428:::0;;:::o;19770:260::-;19832:7;19852:14;19881:10;19869:35;;;19905:1;19916:4;19869:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19852:70;;19933:22;19958:30;19982:5;19958:19;19969:7;;19958:6;:10;;:19;;;;:::i;:::-;:23;;:30;;;;:::i;:::-;19933:55;;20008:14;20001:21;;;;19770:260;:::o;1657:32::-;;;;:::o;16570:214::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1915:3:::1;16654:12;:32;;16646:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16764:12;16750:11;:26;;;;16570:214:::0;:::o;4670:1063::-;1416:8:8;:6;:8::i;:::-;1415:9;1407:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4337:23:1::1;4349:10;4337:11;:23::i;:::-;4336:24;4328:57;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4418:9;4404:23;;:10;:23;;;4396:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4768:1:::2;4758:7;:11;4750:42;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;4805:12;4820:11;:9;:11::i;:::-;4805:26;;4842:58;4865:10;4885:4;4892:7;4842:5;:22;;;;:58;;;;;;:::i;:::-;4911:21;4966:1:::0;4951:11:::2;;:16;4947:157;;5000:36;5031:4;5001:24;5013:11;;5001:7;:11;;:24;;;;:::i;:::-;5000:30;;:36;;;;:::i;:::-;4984:52;;4947:157;;;5085:7;5069:23;;4947:157;5138:1;5122:13;:17;5114:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:21;5227:8;:20;5236:10;5227:20;;;;;;;;;;;;;;;5203:44;;5282:30;5298:13;5282:4;:11;;;:15;;:30;;;;:::i;:::-;5268:4;:11;;:44;;;;5348:15;5323:4;:22;;:40;;;;5390:30;5406:13;5390:11;;:15;;:30;;;;:::i;:::-;5376:11;:44;;;;5461:45;5494:11;;5461:28;5477:11;:9;:11::i;:::-;5461:4;:11;;;:15;;:28;;;;:::i;:::-;:32;;:45;;;;:::i;:::-;5433:4;:25;;:73;;;;5543:15;5517:4;:23;;:41;;;;5584:43;5599:7;5608:18;5584:14;:43::i;:::-;5640:7;:5;:7::i;:::-;5673:10;5665:60;;;5685:7;5694:13;5709:15;5665:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4469:1;;;4670:1063:::0;:::o;1755:49::-;1801:3;1755:49;:::o;1872:46::-;1915:3;1872:46;:::o;9626:436::-;9686:18;9717:27;9747:11;:18;9759:5;9747:18;;;;;;;;;;;;;;;9717:48;;9790:17;:15;:17::i;:::-;9786:269;;;9836:158;9857:7;:23;;;9882:7;:28;;;9912:7;:25;;;9939:7;:30;;;9971:7;:22;;;9836:20;:158::i;:::-;9823:171;;9786:269;;;10039:1;10026:14;;9786:269;9626:436;;;;:::o;18544:169::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18615:10:::1;18603:41;;;18645:1;18603:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18662:8;:6;:8::i;:::-;18658:48;;18686:8;:6;:8::i;:::-;18658:48;18544:169::o:0;10378:136::-;4337:23;4349:10;4337:11;:23::i;:::-;4336:24;4328:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:9;4404:23;;:10;:23;;;4396:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10442:14:::1;:12;:14::i;:::-;10467:39;10478:8;:20;10487:10;10478:20;;;;;;;;;;;;;;;:27;;;10467:10;:39::i;:::-;10378:136::o:0;18805:377::-;4161:5;;;;;;;;;;;4147:19;;:10;:19;;;4139:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18907:5:::1;18889:24;;:6;:24;;;;18881:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18992:12;18974:31;;:6;:31;;;;18966:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19060:14;19084:6;19077:24;;;19110:4;19077:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;19060:56;;19127:47;19155:10;19167:6;19134;19127:27;;;;:47;;;;;:::i;:::-;4193:1;18805:377:::0;:::o;2146:43::-;;;;:::o;2100:31::-;;;;:::o;1330:36::-;;;:::o;15654:167::-;1350:12:3;:10;:12::i;:::-;1339:23;;:7;:5;:7::i;:::-;:23;;;1331:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15753:1:1::1;15732:23;;:9;:23;;;;15724:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;15804:9;15793:8;;:20;;;;;;;;;;;;;;;;;;15654:167:::0;:::o;2073:244:3:-;1350:12;:10;:12::i;:::-;1339:23;;:7;:5;:7::i;:::-;:23;;;1331:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:8;2243:38;;2264:6;::::0;::::1;;;;;;;;2243:38;;;;;;;;;;;;2301:8;2292:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2073:244:::0;:::o;1696:20:1:-;;;;;;;;;;;;;:::o;1390:39::-;;;:::o;1280:29::-;;;:::o;1381:622:2:-;1760:1;1751:5;:10;1750:62;;;;1810:1;1767:5;:15;;;1791:4;1798:7;1767:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:44;1750:62;1742:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1905:90;1925:5;1955:22;;;1979:7;1988:5;1932:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1905:19;:90::i;:::-;1381:622;;;:::o;3669:195:6:-;3772:12;3804:52;3826:6;3834:4;3840:1;3843:12;3804:21;:52::i;:::-;3797:59;;3669:195;;;;;:::o;21654:191:1:-;21712:4;21729:12;21796:4;21784:17;21776:25;;21836:1;21829:4;:8;21822:15;;;21654:191;;;:::o;3653:220:5:-;3711:7;3740:1;3735;:6;3731:20;;;3750:1;3743:8;;;;3731:20;3762:9;3778:1;3774;:5;3762:17;;3807:1;3802;3798;:5;;;;;;:10;3790:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:1;3857:8;;;3653:220;;;;;:::o;4351:153::-;4409:7;4441:1;4437;:5;4429:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4495:1;4491;:5;;;;;;4484:12;;4351:153;;;;:::o;3236:158::-;3294:7;3327:1;3322;:6;;3314:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:1;3381;:5;3374:12;;3236:158;;;;:::o;2774:179::-;2832:7;2852:9;2868:1;2864;:5;2852:17;;2893:1;2888;:6;;2880:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2944:1;2937:8;;;2774:179;;;;:::o;722:177:2:-;805:86;825:5;855:23;;;880:2;884:5;832:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:19;:86::i;:::-;722:177;;;:::o;8371:1123:1:-;8452:27;8482:11;:23;8494:10;8482:23;;;;;;;;;;;;;;;8452:53;;8526:18;8548:17;:15;:17::i;:::-;8547:18;:183;;8572:158;8593:7;:23;;;8618:7;:28;;;8648:7;:25;;;8675:7;:30;;;8707:7;:22;;;8572:20;:158::i;:::-;8547:183;;;8568:1;8547:183;8526:204;;8766:19;8755:30;;;;;;;;:7;:30;;;;;;;;;8751:267;;;8839:7;:25;;;8829:7;:35;:80;;8871:38;8901:7;8871;:25;;;:29;;:38;;;;:::i;:::-;8829:80;;;8867:1;8829:80;8801:7;:25;;:108;;;;8751:267;;;8968:38;8998:7;8968;:25;;;:29;;:38;;;;:::i;:::-;8940:7;:25;;:66;;;;8751:267;9034:21;:19;:21::i;:::-;9030:173;;;9106:7;:25;;;9073:7;:30;;:58;;;;9179:12;9147:7;:28;;:44;;;;9030:173;9248:10;9223:7;:22;;:35;;;;9295:12;9269:7;:23;;:38;;;;9337:10;9323:163;;;9349:7;:22;;;9373:7;:25;;;9400:7;:30;;;9432:7;:23;;;9457:7;:28;;;9323:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8371:1123;;;;:::o;2149:120:8:-;1693:8;:6;:8::i;:::-;1685:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2218:5:::1;2208:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2239:22;2248:12;:10;:12::i;:::-;2239:22;;;;;;;;;;;;;;;;;;;;2149:120::o:0;21364:161:1:-;21401:11;21415;:9;:11::i;:::-;21401:25;;21447:1;21441:3;:7;21437:81;;;21477:10;21465:36;;;21502:3;21465:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21437:81;21364:161;:::o;613:106:7:-;666:15;701:10;694:17;;613:106;:::o;1890:118:8:-;1416:8;:6;:8::i;:::-;1415:9;1407:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:4:::1;1950:7;;:14;;;;;;;;;;;;;;;;;;1980:20;1987:12;:10;:12::i;:::-;1980:20;;;;;;;;;;;;;;;;;;;;1890:118::o:0;907:205:2:-;1008:96;1028:5;1058:27;;;1087:4;1093:2;1097:5;1035:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:19;:96::i;:::-;907:205;;;;:::o;5879:252:1:-;5928:4;6113:10;;6098:12;:25;6091:32;;5879:252;:::o;7024:1176::-;7222:18;7253:20;7276:12;7253:35;;7495:8;;7475:16;:28;7471:82;;7526:15;7519:22;;;;;7471:82;7648:10;;7624:21;:34;7620:193;;;7698:10;;7674:34;;7741:1;7723:19;;7783:18;7757:44;;7620:193;7855:8;;7840:12;:23;:50;;7882:8;;7840:50;;;7867:12;7840:50;7825:65;;7903:22;7929:58;7949:37;7975:10;;7949:21;:25;;:37;;;;:::i;:::-;7929:15;:19;;:58;;;;:::i;:::-;7903:84;;7998:25;8027:68;8055:39;8072:21;8055:12;:16;;:39;;;;:::i;:::-;8027:23;:27;;:68;;;;:::i;:::-;7998:97;;8119:73;8163:28;8180:10;;8163:12;:16;;:28;;;;:::i;:::-;8120:37;8139:17;8120:14;:18;;:37;;;;:::i;:::-;8119:43;;:73;;;;:::i;:::-;8106:86;;7024:1176;;;;;;;;;;;:::o;10589:373::-;10633:27;10663:11;:23;10675:10;10663:23;;;;;;;;;;;;;;;10633:53;;10727:1;10699:7;:25;;:29;;;;10772:1;10739:7;:30;;:34;;;;10810:1;10784:7;:23;;:27;;;;10853:1;10822:7;:28;;:32;;;;10890:1;10865:7;:22;;:26;;;;10929:10;10917:37;;;10941:12;10917:37;;;;;;;;;;;;;;;;;;10589:373;:::o;13034:1498::-;13091:21;13115:8;:20;13124:10;13115:20;;;;;;;;;;;;;;;13091:44;;13164:1;13154:7;:11;13146:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13219:4;:11;;;13208:7;:22;;13200:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13279:21;13303:43;13334:11;;13304:24;13320:7;13304:11;:9;:11::i;:::-;:15;;:24;;;;:::i;:::-;13303:30;;:43;;;;:::i;:::-;13279:67;;13371:24;13387:7;13371:4;:11;;;:15;;:24;;;;:::i;:::-;13357:4;:11;;:38;;;;13420:24;13436:7;13420:11;;:15;;:24;;;;:::i;:::-;13406:11;:38;;;;13457:11;13471;:9;:11::i;:::-;13457:25;;13503:13;13497:3;:19;13493:354;;;13533:19;13555:22;13573:3;13555:13;:17;;:22;;;;:::i;:::-;13533:44;;13604:10;13592:36;;;13629:11;13592:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13656:16;13675:11;:9;:11::i;:::-;13656:30;;13701:12;13716:17;13729:3;13716:8;:12;;:17;;;;:::i;:::-;13701:32;;13759:11;13752:4;:18;13748:88;;;13807:13;13815:4;13807:3;:7;;:13;;;;:::i;:::-;13791:29;;13748:88;13493:354;;;;13881:45;13908:17;;13881:4;:22;;;:26;;:45;;;;:::i;:::-;13863:15;:63;13859:297;;;13943:26;13972:41;14007:5;13972:30;13990:11;;13972:13;:17;;:30;;;;:::i;:::-;:34;;:41;;;;:::i;:::-;13943:70;;14028:48;14047:8;;;;;;;;;;;14057:18;14028:5;:18;;;;:48;;;;;:::i;:::-;14107:37;14125:18;14107:13;:17;;:37;;;;:::i;:::-;14091:53;;13859:297;;14186:1;14172:4;:11;;;:15;14168:183;;;14232:45;14265:11;;14232:28;14248:11;:9;:11::i;:::-;14232:4;:11;;;:15;;:28;;;;:::i;:::-;:32;;:45;;;;:::i;:::-;14204:4;:25;;:73;;;;14168:183;;;14338:1;14310:4;:25;;:29;;;;14168:183;14389:15;14363:4;:23;;:41;;;;14417:45;14436:10;14448:13;14417:5;:18;;;;:45;;;;;:::i;:::-;14489:10;14480:44;;;14501:13;14516:7;14480:44;;;;;;;;;;;;;;;;;;;;;;;;13034:1498;;;;:::o;3027:761:2:-;3451:23;3477:69;3505:4;3477:69;;;;;;;;;;;;;;;;;3485:5;3477:27;;;;:69;;;;;:::i;:::-;3451:95;;3581:1;3561:10;:17;:21;3557:224;;;3703:10;3692:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:224;3027:761;;;:::o;4721:530:6:-;4848:12;4906:5;4881:21;:30;;4873:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:18;4984:6;4973:10;:18::i;:::-;4965:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5099:12;5113:23;5140:6;:11;;5160:5;5168:4;5140:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5098:75;;;;5191:52;5209:7;5218:10;5230:12;5191:17;:52::i;:::-;5184:59;;;;4721:530;;;;;;:::o;6342:139:1:-;6395:4;6435:10;;6419:12;:26;;:54;;;;;6465:8;;6449:12;:24;;6419:54;6412:61;;6342:139;:::o;751:422:6:-;811:4;1019:12;1130:7;1118:20;1110:28;;1164:1;1157:4;:8;1150:15;;;751:422;;;:::o;7261:742::-;7376:12;7405:7;7401:595;;;7436:10;7429:17;;;;7401:595;7570:1;7550:10;:17;:21;7546:439;;;7813:10;7807:17;7874:15;7861:10;7857:2;7853:19;7846:44;7761:148;7956:12;7949:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:742;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3969000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_CALL_FEE()": "273",
								"MAX_PERFORMANCE_FEE()": "338",
								"MAX_WITHDRAW_FEE()": "360",
								"MAX_WITHDRAW_FEE_PERIOD()": "295",
								"admin()": "1157",
								"available()": "infinite",
								"balanceOf()": "infinite",
								"calculateHarvestCakeRewards()": "infinite",
								"calculateTotalPendingCakeRewards()": "infinite",
								"callFee()": "1117",
								"deposit(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawAll()": "infinite",
								"endBlock()": "1096",
								"getPricePerFullShare()": "infinite",
								"getUserCredit(address)": "infinite",
								"harvest()": "infinite",
								"inCaseTokensGetStuck(address)": "infinite",
								"lastHarvestedTime()": "1072",
								"masterchef()": "infinite",
								"owner()": "1145",
								"pause()": "infinite",
								"paused()": "1239",
								"performanceFee()": "1073",
								"receiptToken()": "infinite",
								"renounceOwnership()": "24418",
								"setAdmin(address)": "22124",
								"setCallFee(uint256)": "infinite",
								"setPerformanceFee(uint256)": "infinite",
								"setTreasury(address)": "22145",
								"setWithdrawFee(uint256)": "infinite",
								"setWithdrawFeePeriod(uint256)": "infinite",
								"startBlock()": "1095",
								"token()": "infinite",
								"totalShares()": "1139",
								"transferOwnership(address)": "infinite",
								"treasury()": "1203",
								"unpause()": "infinite",
								"updateEndBlock(uint256)": "infinite",
								"updateStartAndEndBlocks(uint256,uint256)": "infinite",
								"userIFOInfo(address)": "4580",
								"userInfo(address)": "3792",
								"withdraw(uint256)": "infinite",
								"withdrawAll()": "infinite",
								"withdrawFee()": "1160",
								"withdrawFeePeriod()": "1138"
							},
							"internal": {
								"_calculateAvgBalance(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_earn()": "infinite",
								"_isContract(address)": "747",
								"_isIFOAvailable()": "828",
								"_isValidActionBlock()": "1664",
								"_updateUserIFO(uint256,enum LandbaseLockPool.IFOActions)": "infinite",
								"_zeroFreeIFO()": "infinite",
								"withdrawV1(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "PUSH",
									"source": 1,
									"value": "C8"
								},
								{
									"begin": 2009,
									"end": 2044,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2009,
									"end": 2044,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2082,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2057,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 2057,
									"end": 2084,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 2100,
									"end": 2131,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 2100,
									"end": 2131,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2189,
									"name": "PUSH",
									"source": 1,
									"value": "3F480"
								},
								{
									"begin": 2146,
									"end": 2189,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 2146,
									"end": 2189,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 927,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 930,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 930,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 940,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 930,
									"end": 942,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 942,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 930,
									"end": 942,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 930,
									"end": 942,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 930,
									"end": 942,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 910,
									"end": 942,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 910,
									"end": 942,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 962,
									"end": 971,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 953,
									"end": 959,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 959,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 953,
									"end": 971,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1030,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 875,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 977,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 967,
									"end": 974,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 967,
									"end": 974,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 967,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 967,
									"end": 982,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 967,
									"end": 982,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3561,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3535,
									"end": 3547,
									"name": "NUMBER",
									"source": 1
								},
								{
									"begin": 3535,
									"end": 3561,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH data",
									"source": 1,
									"value": "506F1B59863F183C6AC4F29F4CC284383FF9846BDAE98E937F71108256FEA9EA"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3527,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3637,
									"end": 3646,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3623,
									"end": 3634,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3623,
									"end": 3646,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH data",
									"source": 1,
									"value": "E7E60FFF60BA5B691CE03013041A838E37A54104910525CA5EF5521E8EDC3E12"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3615,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3706,
									"end": 3712,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3751,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3775,
									"end": 3786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3762,
									"end": 3786,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3805,
									"end": 3811,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3802,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3797,
									"end": 3802,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3797,
									"end": 3811,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 3842,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3830,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3822,
									"end": 3830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3842,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3866,
									"end": 3877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3863,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3853,
									"end": 3877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3877,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3877,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3899,
									"end": 3908,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3896,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3888,
									"end": 3908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3908,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3985,
									"end": 3996,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4007,
									"end": 4009,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3957,
									"end": 3963,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551779"
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3976,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3950,
									"end": 4011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 4019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 613,
									"end": 719,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 613,
									"end": 719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 666,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 711,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 694,
									"end": 711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 613,
									"end": 719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 613,
									"end": 719,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1751,
									"end": 1756,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1751,
									"end": 1761,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1810,
									"end": 1811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1782,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "DD62ED3E"
								},
								{
									"begin": 1791,
									"end": 1795,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1798,
									"end": 1805,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1811,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1750,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH data",
									"source": 2,
									"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1742,
									"end": 1894,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1925,
									"end": 1930,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 1977,
									"name": "PUSH",
									"source": 2,
									"value": "95EA7B3"
								},
								{
									"begin": 1955,
									"end": 1977,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 1955,
									"end": 1977,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1979,
									"end": 1986,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1988,
									"end": 1993,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1932,
									"end": 1994,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1924,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1905,
									"end": 1924,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1924,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1905,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 2003,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3451,
									"end": 3474,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3505,
									"end": 3509,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3485,
									"end": 3490,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551780"
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3504,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3477,
									"end": 3546,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3451,
									"end": 3546,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3451,
									"end": 3546,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3581,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3561,
									"end": 3571,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3561,
									"end": 3578,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3561,
									"end": 3582,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3557,
									"end": 3781,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3557,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3557,
									"end": 3781,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3703,
									"end": 3713,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3692,
									"end": 3722,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "2A"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH data",
									"source": 2,
									"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "2A"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 3684,
									"end": 3769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3557,
									"end": 3781,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3557,
									"end": 3781,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3027,
									"end": 3788,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3772,
									"end": 3784,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3826,
									"end": 3832,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3840,
									"end": 3841,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 3855,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3804,
									"end": 3825,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3804,
									"end": 3825,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3804,
									"end": 3856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3797,
									"end": 3856,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3797,
									"end": 3856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3669,
									"end": 3864,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4848,
									"end": 4860,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4906,
									"end": 4911,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4881,
									"end": 4902,
									"name": "SELFBALANCE",
									"source": 6
								},
								{
									"begin": 4881,
									"end": 4911,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4881,
									"end": 4911,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH data",
									"source": 6,
									"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4873,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4984,
									"end": 4990,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4973,
									"end": 4983,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4973,
									"end": 4983,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "1D"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4965,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5099,
									"end": 5111,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5113,
									"end": 5136,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5140,
									"end": 5146,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5151,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5140,
									"end": 5151,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5165,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5172,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5098,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5098,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5098,
									"end": 5173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5098,
									"end": 5173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5209,
									"end": 5216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5228,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5242,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5191,
									"end": 5208,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5191,
									"end": 5208,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5191,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5243,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 5251,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 811,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1019,
									"end": 1031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1138,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1138,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1138,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1165,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1165,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 751,
									"end": 1173,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7376,
									"end": 7388,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7405,
									"end": 7412,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7401,
									"end": 7996,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7401,
									"end": 7996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7401,
									"end": 7996,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7436,
									"end": 7446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7429,
									"end": 7446,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7429,
									"end": 7446,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7429,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7429,
									"end": 7446,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7401,
									"end": 7996,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7401,
									"end": 7996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7570,
									"end": 7571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7550,
									"end": 7560,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7550,
									"end": 7567,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7550,
									"end": 7571,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7985,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7546,
									"end": 7985,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7813,
									"end": 7823,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7824,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7874,
									"end": 7889,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7861,
									"end": 7871,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7857,
									"end": 7859,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7853,
									"end": 7872,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7846,
									"end": 7890,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 7761,
									"end": 7909,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7761,
									"end": 7909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7956,
									"end": 7968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7949,
									"end": 7969,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7261,
									"end": 8003,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 21848,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220402a01c5e6c8f21a32b73e6d16c505953f56e2f9dcf29f78d5e54aff9ffe6c7164736f6c634300060c0033",
									".code": [
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "853828B6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DAD6F0DC"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "EC78E832"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "EC78E832"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "F0F44260"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "F851A440"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "FB1DB278"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DAD6F0DC"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DB2E21BC"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DD191719"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DEF68A9C"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "DF10B4E6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "E941FA78"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "9D72596B"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "9D72596B"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "B60F0531"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "B6AC642A"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "B6B55F25"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "BDCA9165"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "D4B0DE2F"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "853828B6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "87788782"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "90321E1A"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "9513997F"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "4641257D"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "704B6C02"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "704B6C02"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "70897B23"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "722713F7"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "77C7B8FC"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "8456CB59"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "4641257D"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "48A0D754"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "48CD4CB1"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "58EBCEB6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "5C975ABB"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "61D027B3"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "26465826"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "26465826"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "2AD5A53F"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "2CFC5F01"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "3A98EF39"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "3F4BA83A"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "6F0231"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "6F5A745"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "83C6323"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "1959A002"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "1EFAC1B8"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 21848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18130,
											"end": 18142,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 18130,
											"end": 18154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH data",
											"source": 1,
											"value": "6D2E0EE418A4FA9636BC860D0410414C2F3BB829ED67581046F589A0E038DF7E"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 18122,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18233,
											"end": 18241,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18233,
											"end": 18241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18218,
											"end": 18230,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 18218,
											"end": 18241,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH data",
											"source": 1,
											"value": "E10F87A14096AC956401D5F800040AB40E68D1D271DCB4693C1DF00BE0147B71"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 18210,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18311,
											"end": 18320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18300,
											"end": 18320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18320,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "72A01621587849E39C667EB81696643997F818C6C286614CD1497E5EF2E9ECD6"
										},
										{
											"begin": 18353,
											"end": 18362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18363,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 17011,
											"end": 17029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17011,
											"end": 17056,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17011,
											"end": 17056,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH data",
											"source": 1,
											"value": "CFCA239801295453E18A917561471428326355DCFD35C2679D3E455F8DDB6850"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16989,
											"end": 17145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17176,
											"end": 17194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17173,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 17156,
											"end": 17194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17194,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16354,
											"end": 16362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16354,
											"end": 16378,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16354,
											"end": 16378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH data",
											"source": 1,
											"value": "5F4AFEDB5CB4C613EB925791E30905BBAA67A23ED369AA450CCF1EB0E08C07FF"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16346,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16441,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1990,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4349,
											"end": 4359,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11192,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11203,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11233,
											"end": 11234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11223,
											"end": 11234,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11215,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11288,
											"end": 11292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11288,
											"end": 11299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11288,
											"end": 11299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11277,
											"end": 11284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11277,
											"end": 11299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11277,
											"end": 11299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11348,
											"end": 11369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11403,
											"end": 11414,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11403,
											"end": 11414,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11389,
											"end": 11396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11373,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11373,
											"end": 11388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11373,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 11372,
											"end": 11402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11372,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11348,
											"end": 11415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11348,
											"end": 11415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11426,
											"end": 11449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11426,
											"end": 11465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11426,
											"end": 11465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11506,
											"end": 11513,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11490,
											"end": 11501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11490,
											"end": 11505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11490,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11476,
											"end": 11487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11514,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 11555,
											"end": 11562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11550,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11539,
											"end": 11550,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11539,
											"end": 11554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 11539,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11536,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11525,
											"end": 11563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11563,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11590,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11590,
											"end": 11601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11590,
											"end": 11601,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 11590,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11622,
											"end": 11635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11635,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 11692,
											"end": 11695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11687,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11674,
											"end": 11691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 11674,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11733,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11711,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11711,
											"end": 11747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "1058D281"
										},
										{
											"begin": 11748,
											"end": 11759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11711,
											"end": 11760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 11794,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11794,
											"end": 11805,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11794,
											"end": 11805,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 11794,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11835,
											"end": 11847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11835,
											"end": 11852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 11867,
											"end": 11955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11929,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 11926,
											"end": 11933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 11926,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11910,
											"end": 11939,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11910,
											"end": 11939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11955,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 11867,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 11612,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 12027,
											"end": 12044,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12027,
											"end": 12044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12004,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12022,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 12000,
											"end": 12026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 12000,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11997,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12126,
											"end": 12131,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 12109,
											"end": 12120,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 12109,
											"end": 12120,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12104,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12091,
											"end": 12108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12091,
											"end": 12125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12091,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12152,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 12147,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 12244,
											"end": 12262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12239,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 12226,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12263,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11978,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12305,
											"end": 12306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12295,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12306,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 12384,
											"end": 12395,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 12384,
											"end": 12395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 12367,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 12367,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 12367,
											"end": 12378,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12367,
											"end": 12378,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 12367,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12355,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12351,
											"end": 12366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 12351,
											"end": 12379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12351,
											"end": 12383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 12351,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12396,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12454,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12429,
											"end": 12454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12458,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 12287,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12523,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12505,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12482,
											"end": 12505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12523,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12559,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 12574,
											"end": 12589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12610,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12559,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 12559,
											"end": 12611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12559,
											"end": 12611,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 12559,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 12643,
											"end": 12653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12668,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12629,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 12624,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12706,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 12708,
											"end": 12721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12723,
											"end": 12730,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12731,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 12739,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1650,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19578,
											"end": 19588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 19578,
											"end": 19586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 19578,
											"end": 19588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19578,
											"end": 19588,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 19578,
											"end": 19588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "PUSH",
											"source": 1,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19604,
											"end": 19613,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19621,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4349,
											"end": 4359,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14730,
											"end": 14747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 14750,
											"end": 14761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14750,
											"end": 14761,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14750,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14784,
											"end": 14794,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 14772,
											"end": 14808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14772,
											"end": 14808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14808,
											"name": "PUSH",
											"source": 1,
											"value": "1058D281"
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14822,
											"end": 14833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 14836,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 14836,
											"end": 14847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14836,
											"end": 14847,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 14836,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 14836,
											"end": 14851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14836,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14822,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14822,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 14904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 14935,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 14915,
											"end": 14929,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14915,
											"end": 14929,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14907,
											"end": 14914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 14907,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14907,
											"end": 14934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 14941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14971,
											"end": 14979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 14957,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 14952,
											"end": 15003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15016,
											"end": 15038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15049,
											"end": 15056,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 15049,
											"end": 15056,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 15041,
											"end": 15048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15041,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15041,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15016,
											"end": 15068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15016,
											"end": 15068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 15098,
											"end": 15108,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 15110,
											"end": 15124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15084,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 15079,
											"end": 15097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15079,
											"end": 15097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15079,
											"end": 15097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 15079,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 15138,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 15138,
											"end": 15145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15138,
											"end": 15145,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 15138,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15178,
											"end": 15193,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 15158,
											"end": 15193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15193,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15229,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
										},
										{
											"begin": 15231,
											"end": 15252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15254,
											"end": 15268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15269,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14665,
											"end": 15277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20843,
											"end": 20850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20875,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 20870,
											"end": 20885,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20870,
											"end": 20885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20885,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 20894,
											"end": 20898,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20870,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20863,
											"end": 20900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20863,
											"end": 20900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20908,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20268,
											"end": 20282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20297,
											"end": 20307,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 20285,
											"end": 20320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20285,
											"end": 20320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20320,
											"name": "PUSH",
											"source": 1,
											"value": "1175A1DD"
										},
										{
											"begin": 20321,
											"end": 20322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20332,
											"end": 20336,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20268,
											"end": 20338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20268,
											"end": 20338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 20369,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 20369,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 20369,
											"end": 20380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20369,
											"end": 20380,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 20369,
											"end": 20380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 20358,
											"end": 20368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 20358,
											"end": 20381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20349,
											"end": 20381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20349,
											"end": 20381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20401,
											"end": 20407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1161,
											"end": 1168,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1176,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15478,
											"end": 15479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74206265207A65726F206164647265737300000000000000000000"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 15452,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15526,
											"end": 15532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15523,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 15518,
											"end": 15523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15388,
											"end": 15540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 16024,
											"end": 16039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16024,
											"end": 16062,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16024,
											"end": 16062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH data",
											"source": 1,
											"value": "6432039CF9FF586E7B7914864FFEEB65018DE8382B891F7ABEA9A0FA0A0EEBA5"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 16016,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16149,
											"end": 16164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16132,
											"end": 16146,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 16132,
											"end": 16164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16132,
											"end": 16164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16132,
											"end": 16164,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16132,
											"end": 16164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 16172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 1918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21107,
											"end": 21114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21160,
											"end": 21170,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "PUSH",
											"source": 1,
											"value": "93F1A40B"
										},
										{
											"begin": 21181,
											"end": 21182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21192,
											"end": 21196,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21148,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 21251,
											"end": 21257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21221,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 21216,
											"end": 21231,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21216,
											"end": 21231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21231,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 21240,
											"end": 21244,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 21216,
											"end": 21250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 21216,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21209,
											"end": 21258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21209,
											"end": 21258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21209,
											"end": 21258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20585,
											"end": 20586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 20570,
											"end": 20581,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 20622,
											"end": 20633,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 20622,
											"end": 20633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 20612,
											"end": 20616,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20596,
											"end": 20607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 20596,
											"end": 20605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 20596,
											"end": 20607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20596,
											"end": 20607,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 20596,
											"end": 20607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 20596,
											"end": 20611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 20596,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 20596,
											"end": 20621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 20596,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 20593,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 20570,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20563,
											"end": 20634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20563,
											"end": 20634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 19361,
											"end": 19367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 19361,
											"end": 19369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19361,
											"end": 19369,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 19361,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "PUSH",
											"source": 1,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19385,
											"end": 19392,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4349,
											"end": 4359,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10199,
											"end": 10207,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10218,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10219,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1206,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17567,
											"end": 17578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17564,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17578,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH data",
											"source": 1,
											"value": "C9C3E461D0A427A4E9EC61C7672EF5D0872B7AFE41AF330C564D77D66B5B728B"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 17544,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17668,
											"end": 17677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17654,
											"end": 17665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17654,
											"end": 17677,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH data",
											"source": 1,
											"value": "55E8B512461165150226D7FB62AF16288A660C0FC1F35821BA4AD8AD658A0BB0"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 17646,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17754,
											"end": 17765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17751,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 17741,
											"end": 17765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17765,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17787,
											"end": 17796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17776,
											"end": 17784,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17776,
											"end": 17796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17776,
											"end": 17796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17776,
											"end": 17796,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17776,
											"end": 17796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "PUSH",
											"source": 1,
											"value": "53462FEC8F17A9D662E3778A6027B6C0C1AC0DA2390A991AA33CB3AA60CAE4E"
										},
										{
											"begin": 17838,
											"end": 17849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17814,
											"end": 17861,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17869,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19832,
											"end": 19839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19852,
											"end": 19866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19891,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 19869,
											"end": 19904,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19869,
											"end": 19904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19904,
											"name": "PUSH",
											"source": 1,
											"value": "1175A1DD"
										},
										{
											"begin": 19905,
											"end": 19906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19916,
											"end": 19920,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 19922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 19922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19933,
											"end": 19955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 19982,
											"end": 19987,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 19969,
											"end": 19976,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 19969,
											"end": 19976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19964,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 19958,
											"end": 19968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 19958,
											"end": 19981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 19958,
											"end": 19988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19933,
											"end": 19988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19933,
											"end": 19988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20008,
											"end": 20022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19770,
											"end": 20030,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16654,
											"end": 16666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16654,
											"end": 16686,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16654,
											"end": 16686,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH data",
											"source": 1,
											"value": "E7BB9C347F949E24DA350C193CC8369C19AA7E8A530ABA25A3447A9658C66F18"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 16646,
											"end": 16739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16764,
											"end": 16776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16761,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16784,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4349,
											"end": 4359,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4769,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7468696E6720746F206465706F7369740000000000000000000000000000"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4750,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4820,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4820,
											"end": 4831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4820,
											"end": 4831,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4820,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4865,
											"end": 4875,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4842,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4951,
											"end": 4962,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4967,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5013,
											"end": 5024,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5013,
											"end": 5024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5001,
											"end": 5012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5001,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5000,
											"end": 5030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4947,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH data",
											"source": 1,
											"value": "A6806E6705A9EE3B0E0C4B8D8E7CB4E2DA5D59DB3275BBA90220E3E7D15D16F8"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5114,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5282,
											"end": 5297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5323,
											"end": 5345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5363,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5406,
											"end": 5419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5401,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5390,
											"end": 5401,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5390,
											"end": 5405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5376,
											"end": 5420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5420,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5494,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5494,
											"end": 5505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5472,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5461,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5461,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5461,
											"end": 5493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5461,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5433,
											"end": 5458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5599,
											"end": 5606,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5584,
											"end": 5627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5627,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5584,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5683,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5707,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5724,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5725,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9758,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9790,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 9790,
											"end": 9807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9790,
											"end": 9807,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9790,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9857,
											"end": 9864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9880,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9857,
											"end": 9880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9910,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9882,
											"end": 9910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9910,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9978,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 9836,
											"end": 9994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9836,
											"end": 9994,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9836,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9786,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9626,
											"end": 10062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18615,
											"end": 18625,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 18603,
											"end": 18644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18603,
											"end": 18644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18644,
											"name": "PUSH",
											"source": 1,
											"value": "5312EA8E"
										},
										{
											"begin": 18645,
											"end": 18646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18662,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 18662,
											"end": 18668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 18662,
											"end": 18670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18662,
											"end": 18670,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 18662,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18658,
											"end": 18706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 18658,
											"end": 18706,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18686,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 18686,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 18686,
											"end": 18694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18686,
											"end": 18694,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 18686,
											"end": 18694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18658,
											"end": 18706,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 18658,
											"end": 18706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18713,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 4349,
											"end": 4359,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E7472616374206E6F7420616C6C6F776564000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4328,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "ORIGIN",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "70726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4396,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10442,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10442,
											"end": 10456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10442,
											"end": 10456,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10442,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10478,
											"end": 10486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10497,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10478,
											"end": 10505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 10467,
											"end": 10506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10467,
											"end": 10506,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10467,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4139,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18907,
											"end": 18912,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18889,
											"end": 18895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18889,
											"end": 18913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH data",
											"source": 1,
											"value": "3EA9D2748B0A4CF4D9041EA5447CC8D433BCE6AE4E36584BAC37B5BB6CA2FC19"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 18881,
											"end": 18955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18992,
											"end": 19004,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18974,
											"end": 18980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH data",
											"source": 1,
											"value": "56F1CB28260A5FE006A543516F28C8E9FCA2A3D42753A5ECE1397133EA778F1C"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 18966,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19060,
											"end": 19074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19084,
											"end": 19090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19077,
											"end": 19101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19101,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 19110,
											"end": 19114,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19060,
											"end": 19116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19060,
											"end": 19116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 19155,
											"end": 19165,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19167,
											"end": 19173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19134,
											"end": 19140,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19154,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19127,
											"end": 19154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 19127,
											"end": 19154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 19127,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18805,
											"end": 19182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15753,
											"end": 15754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74206265207A65726F206164647265737300000000000000000000"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 15724,
											"end": 15782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15804,
											"end": 15813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15801,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 15793,
											"end": 15801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 1331,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2182,
											"end": 2183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH data",
											"source": 3,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2281,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1429,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 1761,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1811,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 1750,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH data",
											"source": 2,
											"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 1742,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1977,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1955,
											"end": 1977,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1955,
											"end": 1977,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 1905,
											"end": 1995,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1995,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 1905,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 2003,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3838,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3864,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21712,
											"end": 21716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21729,
											"end": 21741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21796,
											"end": 21800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21784,
											"end": 21801,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 21776,
											"end": 21801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21776,
											"end": 21801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21836,
											"end": 21837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21829,
											"end": 21837,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21822,
											"end": 21837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21822,
											"end": 21837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21822,
											"end": 21837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3735,
											"end": 3741,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3751,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3790,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3873,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4409,
											"end": 4416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 4429,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4504,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 3314,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3386,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3394,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2953,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 722,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 722,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 805,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 855,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 855,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 880,
											"end": 882,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 884,
											"end": 889,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 805,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 805,
											"end": 891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 805,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 805,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8493,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8504,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8548,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8548,
											"end": 8565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8548,
											"end": 8565,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8548,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8593,
											"end": 8600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8616,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8593,
											"end": 8616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8646,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8618,
											"end": 8646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8646,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8682,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8705,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8675,
											"end": 8705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8705,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8707,
											"end": 8729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8729,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8572,
											"end": 8730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8572,
											"end": 8730,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8572,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8547,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8766,
											"end": 8785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8785,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8864,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8871,
											"end": 8900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8867,
											"end": 8868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8829,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8909,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8998,
											"end": 9005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8993,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8968,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9006,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 9006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8751,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9034,
											"end": 9055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9034,
											"end": 9055,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9034,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9030,
											"end": 9203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9131,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9191,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9147,
											"end": 9175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9191,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9203,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9030,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9223,
											"end": 9245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9258,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9307,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9292,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9269,
											"end": 9292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9307,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9347,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "6A9632041D5AD6A474679DA2AC648103E26069C6E77DCA5F3675D3FDCBE1AC17"
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9349,
											"end": 9371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9380,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9400,
											"end": 9407,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9400,
											"end": 9430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9400,
											"end": 9430,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9439,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9455,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9432,
											"end": 9455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9464,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9485,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9457,
											"end": 9485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9485,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9486,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 9494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2149,
											"end": 2269,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2149,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 2248,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21364,
											"end": 21525,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 21364,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21401,
											"end": 21412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21415,
											"end": 21426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 21415,
											"end": 21424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 21415,
											"end": 21426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21415,
											"end": 21426,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 21415,
											"end": 21426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21401,
											"end": 21426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21401,
											"end": 21426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21447,
											"end": 21448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21441,
											"end": 21444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21441,
											"end": 21448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21437,
											"end": 21518,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21437,
											"end": 21518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 21437,
											"end": 21518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21477,
											"end": 21487,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 21465,
											"end": 21501,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21465,
											"end": 21501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21501,
											"name": "PUSH",
											"source": 1,
											"value": "41441D3B"
										},
										{
											"begin": 21502,
											"end": 21505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21437,
											"end": 21518,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 21437,
											"end": 21518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21364,
											"end": 21525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21364,
											"end": 21525,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 613,
											"end": 719,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 613,
											"end": 719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 666,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 711,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 694,
											"end": 711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 613,
											"end": 719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 613,
											"end": 719,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1407,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1987,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 1008,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 1008,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 907,
											"end": 1112,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5879,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 5879,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6123,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6113,
											"end": 6123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6110,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6123,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 6131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 6131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7288,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7503,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7495,
											"end": 7503,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7491,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7503,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7471,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7471,
											"end": 7553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 7519,
											"end": 7541,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7471,
											"end": 7553,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7471,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7648,
											"end": 7658,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7620,
											"end": 7813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7708,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7698,
											"end": 7708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7708,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7757,
											"end": 7801,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7757,
											"end": 7801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7813,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7620,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7863,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7863,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7882,
											"end": 7890,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7840,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7975,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7975,
											"end": 7985,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7970,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7949,
											"end": 7974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7949,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7929,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7998,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8055,
											"end": 8071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 8055,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 8027,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7998,
											"end": 8095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7998,
											"end": 8095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8175,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8139,
											"end": 8156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8120,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8119,
											"end": 8162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 8119,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 8200,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10589,
											"end": 10962,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10589,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10674,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10675,
											"end": 10685,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10686,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10728,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10739,
											"end": 10769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10773,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10807,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10784,
											"end": 10807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10850,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10822,
											"end": 10850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10865,
											"end": 10887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10891,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10929,
											"end": 10939,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "6F66FF41198A141A4E315CD2FF387F32686A6D469DA7496FFEE40EAF05E4A411"
										},
										{
											"begin": 10941,
											"end": 10953,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10954,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10962,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13134,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13164,
											"end": 13165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13165,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13146,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13230,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13200,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13279,
											"end": 13300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13334,
											"end": 13345,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13334,
											"end": 13345,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13320,
											"end": 13327,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13304,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 13304,
											"end": 13315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13304,
											"end": 13315,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13304,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13304,
											"end": 13319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13304,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 13303,
											"end": 13333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13303,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13279,
											"end": 13346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13279,
											"end": 13346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13387,
											"end": 13394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13371,
											"end": 13386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13371,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13357,
											"end": 13368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13436,
											"end": 13443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13431,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13420,
											"end": 13431,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13420,
											"end": 13435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13420,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13406,
											"end": 13417,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13406,
											"end": 13444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13406,
											"end": 13444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13406,
											"end": 13444,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13406,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13471,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13471,
											"end": 13480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 13471,
											"end": 13482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13471,
											"end": 13482,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13471,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13503,
											"end": 13516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13516,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13573,
											"end": 13576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13568,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13555,
											"end": 13572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13604,
											"end": 13614,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 13592,
											"end": 13628,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13592,
											"end": 13628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13628,
											"name": "PUSH",
											"source": 1,
											"value": "1058D281"
										},
										{
											"begin": 13629,
											"end": 13640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 13675,
											"end": 13686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13675,
											"end": 13686,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13675,
											"end": 13686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13729,
											"end": 13732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13716,
											"end": 13728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13759,
											"end": 13770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13770,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13748,
											"end": 13836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13810,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13807,
											"end": 13814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 13807,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13820,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13836,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13748,
											"end": 13836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 13493,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13908,
											"end": 13925,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 13908,
											"end": 13925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13885,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13903,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13881,
											"end": 13903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13881,
											"end": 13907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13881,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13878,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14007,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 13990,
											"end": 14001,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 13990,
											"end": 14001,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 13985,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13972,
											"end": 13989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 13972,
											"end": 14006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 13972,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14047,
											"end": 14055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14057,
											"end": 14075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14033,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14028,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14125,
											"end": 14143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 14107,
											"end": 14124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14107,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 13859,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14172,
											"end": 14176,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14172,
											"end": 14183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14172,
											"end": 14183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14172,
											"end": 14183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14172,
											"end": 14187,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14265,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14265,
											"end": 14276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14248,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14248,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 14248,
											"end": 14259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14248,
											"end": 14259,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14248,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14236,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14232,
											"end": 14243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14243,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14232,
											"end": 14247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14232,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14232,
											"end": 14264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14232,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14229,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14204,
											"end": 14229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14277,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14338,
											"end": 14339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14335,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14310,
											"end": 14335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14339,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14310,
											"end": 14339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14168,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14389,
											"end": 14404,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14386,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 14363,
											"end": 14386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 14436,
											"end": 14446,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 14448,
											"end": 14461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 14417,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14499,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 14501,
											"end": 14514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14523,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14480,
											"end": 14524,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 14532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 3505,
											"end": 3509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3477,
											"end": 3504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "tag",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 3477,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3781,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 3557,
											"end": 3781,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "tag",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "tag",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 3684,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3781,
											"name": "tag",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 3557,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3788,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4848,
											"end": 4860,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4906,
											"end": 4911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4902,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4911,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH data",
											"source": 6,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 4873,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 4965,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5136,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5172,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5209,
											"end": 5216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5242,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 5251,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6342,
											"end": 6481,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 6342,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6395,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6445,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6435,
											"end": 6445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6431,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6445,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6461,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6473,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 6419,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6342,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6342,
											"end": 6481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1138,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1165,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 751,
											"end": 1173,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7376,
											"end": 7388,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7405,
											"end": 7412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 7401,
											"end": 7996,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7996,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 7401,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7570,
											"end": 7571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7567,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7571,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7985,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7546,
											"end": 7985,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7874,
											"end": 7889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7871,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7853,
											"end": 7872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7846,
											"end": 7890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7909,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7761,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 8003,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"3EA9D2748B0A4CF4D9041EA5447CC8D433BCE6AE4E36584BAC37B5BB6CA2FC19": "546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e",
										"55E8B512461165150226D7FB62AF16288A660C0FC1F35821BA4AD8AD658A0BB0": "4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"56F1CB28260A5FE006A543516F28C8E9FCA2A3D42753A5ECE1397133EA778F1C": "546f6b656e2063616e6e6f742062652073616d65206173207265636569707420746f6b656e",
										"5F4AFEDB5CB4C613EB925791E30905BBAA67A23ED369AA450CCF1EB0E08C07FF": "63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f43414c4c5f464545",
										"6432039CF9FF586E7B7914864FFEEB65018DE8382B891F7ABEA9A0FA0A0EEBA5": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545",
										"6D2E0EE418A4FA9636BC860D0410414C2F3BB829ED67581046F589A0E038DF7E": "6e657720656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A6806E6705A9EE3B0E0C4B8D8E7CB4E2DA5D59DB3275BBA90220E3E7D15D16F8": "6465706f73697420616d6f756e7420697320746f6f20736d616c6c20746f20616c6c6f6361746520736861726573",
										"C9C3E461D0A427A4E9EC61C7672EF5D0872B7AFE41AF330C564D77D66B5B728B": "506f6f6c2063757272656e7420626c6f636b206d757374206265206c6f776572207468616e206e6577207374617274426c6f636b",
										"CFCA239801295453E18A917561471428326355DCFD35C2679D3E455F8DDB6850": "7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f44",
										"E10F87A14096AC956401D5F800040AB40E68D1D271DCB4693C1DF00BE0147B71": "6f6c6420656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"E7BB9C347F949E24DA350C193CC8369C19AA7E8A530ABA25A3447A9658C66F18": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545",
										"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
									}
								},
								"506F1B59863F183C6AC4F29F4CC284383FF9846BDAE98E937F71108256FEA9EA": "737461727420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
								"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
								"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
								"E7E60FFF60BA5B691CE03013041A838E37A54104910525CA5EF5521E8EDC3E12": "656e6420626c6f636b2063616e277420626568696e6420737461727420626c6f636b",
								"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
							}
						},
						"methodIdentifiers": {
							"MAX_CALL_FEE()": "2ad5a53f",
							"MAX_PERFORMANCE_FEE()": "bdca9165",
							"MAX_WITHDRAW_FEE()": "d4b0de2f",
							"MAX_WITHDRAW_FEE_PERIOD()": "2cfc5f01",
							"admin()": "f851a440",
							"available()": "48a0d754",
							"balanceOf()": "722713f7",
							"calculateHarvestCakeRewards()": "9d72596b",
							"calculateTotalPendingCakeRewards()": "58ebceb6",
							"callFee()": "90321e1a",
							"deposit(uint256)": "b6b55f25",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawAll()": "dd191719",
							"endBlock()": "083c6323",
							"getPricePerFullShare()": "77c7b8fc",
							"getUserCredit(address)": "dad6f0dc",
							"harvest()": "4641257d",
							"inCaseTokensGetStuck(address)": "def68a9c",
							"lastHarvestedTime()": "b60f0531",
							"masterchef()": "fb1db278",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"performanceFee()": "87788782",
							"receiptToken()": "ec78e832",
							"renounceOwnership()": "715018a6",
							"setAdmin(address)": "704b6c02",
							"setCallFee(uint256)": "26465826",
							"setPerformanceFee(uint256)": "70897b23",
							"setTreasury(address)": "f0f44260",
							"setWithdrawFee(uint256)": "b6ac642a",
							"setWithdrawFeePeriod(uint256)": "1efac1b8",
							"startBlock()": "48cd4cb1",
							"token()": "fc0c546a",
							"totalShares()": "3a98ef39",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unpause()": "3f4ba83a",
							"updateEndBlock(uint256)": "006f0231",
							"updateStartAndEndBlocks(uint256,uint256)": "9513997f",
							"userIFOInfo(address)": "06f5a745",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6",
							"withdrawFee()": "e941fa78",
							"withdrawFeePeriod()": "df10b4e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_receiptToken\",\"type\":\"address\"},{\"internalType\":\"contract IMasterChef\",\"name\":\"_masterchef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callFee\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"UpdateEndBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"UpdateStartAndEndBlocks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastAvgBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastActionBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastValidActionBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastActionBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastValidActionBlock\",\"type\":\"uint256\"}],\"name\":\"UpdateUserIFO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBlock\",\"type\":\"uint256\"}],\"name\":\"ZeroFreeIFO\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CALL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERFORMANCE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateHarvestCakeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTotalPendingCakeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"avgBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHarvestedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterchef\",\"outputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiptToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_callFee\",\"type\":\"uint256\"}],\"name\":\"setCallFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"updateEndBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"updateStartAndEndBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userIFOInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastActionBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastValidActionBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActionBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastValidActionBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastAvgBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cakeAtLastUserAction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available()\":{\"details\":\"The contract puts 100% of the tokens to work.\"},\"balanceOf()\":{\"details\":\"It includes tokens held by the contract and held in MasterChef\"},\"calculateHarvestCakeRewards()\":{\"returns\":{\"_0\":\"Expected reward to collect in CAKE\"}},\"calculateTotalPendingCakeRewards()\":{\"returns\":{\"_0\":\"Returns total pending cake rewards\"}},\"constructor\":{\"params\":{\"_admin\":\": address of the admin\",\"_endBlock\":\": IFO end block height\",\"_masterchef\":\": MasterChef contract\",\"_receiptToken\":\": Syrup token contract\",\"_startBlock\":\": IFO start block height\",\"_token\":\": Cake token contract\",\"_treasury\":\": address of the treasury (collects fees)\"}},\"deposit(uint256)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_amount\":\": number of tokens to deposit (in CAKE)\"}},\"emergencyWithdraw()\":{\"details\":\"EMERGENCY ONLY. Only callable by the contract admin.\"},\"getUserCredit(address)\":{\"params\":{\"_user\":\": user address\"}},\"harvest()\":{\"details\":\"Only possible when contract not paused.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setCallFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setPerformanceFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setTreasury(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setWithdrawFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeePeriod(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"},\"updateEndBlock(uint256)\":{\"details\":\"This function is only callable by owner.\",\"params\":{\"_endBlock\":\": the new end block\"}},\"updateStartAndEndBlocks(uint256,uint256)\":{\"details\":\"This function is only callable by owner.\",\"params\":{\"_endBlock\":\": the new end block\",\"_startBlock\":\": the new start block\"}},\"withdraw(uint256)\":{\"params\":{\"_shares\":\": Number of shares to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"available()\":{\"notice\":\"Custom logic for how much the vault allows to be borrowed\"},\"balanceOf()\":{\"notice\":\"Calculates the total underlying tokens\"},\"calculateHarvestCakeRewards()\":{\"notice\":\"Calculates the expected harvest reward from third party\"},\"calculateTotalPendingCakeRewards()\":{\"notice\":\"Calculates the total pending rewards that can be restaked\"},\"constructor\":\"Constructor\",\"deposit(uint256)\":{\"notice\":\"Deposits funds into the Cake Vault\"},\"emergencyWithdraw()\":{\"notice\":\"Withdraws from MasterChef to Vault without caring about rewards.\"},\"emergencyWithdrawAll()\":{\"notice\":\"Withdraws user all funds in emergency,it's called by user not admin,the userifo status will be clear\"},\"getPricePerFullShare()\":{\"notice\":\"Calculates the price per share\"},\"getUserCredit(address)\":{\"notice\":\"calculate IFO latest average balance for specific user\"},\"harvest()\":{\"notice\":\"Reinvests CAKE tokens into MasterChef\"},\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the Cake Vault\"},\"pause()\":{\"notice\":\"Triggers stopped state\"},\"setAdmin(address)\":{\"notice\":\"Sets admin address\"},\"setCallFee(uint256)\":{\"notice\":\"Sets call fee\"},\"setPerformanceFee(uint256)\":{\"notice\":\"Sets performance fee\"},\"setTreasury(address)\":{\"notice\":\"Sets treasury address\"},\"setWithdrawFee(uint256)\":{\"notice\":\"Sets withdraw fee\"},\"setWithdrawFeePeriod(uint256)\":{\"notice\":\"Sets withdraw fee period\"},\"unpause()\":{\"notice\":\"Returns to normal state\"},\"updateEndBlock(uint256)\":{\"notice\":\"It allows the admin to update end block\"},\"updateStartAndEndBlocks(uint256,uint256)\":{\"notice\":\"It allows the admin to update start and end blocks\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws from funds from the IFOPool\"},\"withdrawAll()\":{\"notice\":\"Withdraws all funds for a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/LandbaseLockPool.sol\":\"LandbaseLockPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/IERC20.sol\":{\"keccak256\":\"0x1cf8c1e1a8a8f60671d426bcedba75f5f0509dc74789e2d2475791c0596c33d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687bcf000696228ec0ab4f0a4a694c5d66386a03e3accb981882e44c267ecc2a\",\"dweb:/ipfs/QmbbfbCnBKTiqC1avw89kfA3wx8nmJWAWL7AAdu2p8DrHp\"]},\"farms-pools/LandbaseLockPool.sol\":{\"keccak256\":\"0x66db4147d6d65ffe0fdda2b1ae4c363cec7bc48ae2a0749b8001f733781c1cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8badb7044f22be9dab1e1f8dc3c7710f604d01d0c099be011373b88748d036ae\",\"dweb:/ipfs/QmTpkYnPnkSrVPGUQtongGAKb3CMKucBAPei3dVh46S4P3\"]},\"farms-pools/SafeERC20.sol\":{\"keccak256\":\"0xbc5515eb437f14554c0a3130218d4e10fa2005ebe04de5a94c3b26045ea1edca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c499bba562949b35ef7c62a405c718ffdffd00eaf719be51f55b0555f2970d03\",\"dweb:/ipfs/QmPR8ay1e9S45f467LJJCLTfjUWeasAyRdRxD61AphUduB\"]},\"farms-pools/access/Ownable.sol\":{\"keccak256\":\"0xd23f7163f3959c5989d5a5c08c1d9018ddd1b5cf87250aab0950a53744cbd745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9e02a29196a37f06675dd464d7ed2d604e17c5a227b86c0230100a5ee8fc873\",\"dweb:/ipfs/QmQ3EhqCuz8qV7yQ9gL5ybrxaVrjw9LdH45C6adQwwaN8c\"]},\"farms-pools/interfaces/IMasterChef.sol\":{\"keccak256\":\"0x848f6928415dd126e6d6b1295e9c18222524f6bac8108e2d2b48a09ec9220b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbaebd1af51cecf6738e363bbe2dc299636908348c5deb0f38d585ecd74c3c1a\",\"dweb:/ipfs/QmT6DC2R7X27sLPAiJixgYiyDDh7YgcrzpbFviA9uu2UhY\"]},\"farms-pools/libraries/SafeMath.sol\":{\"keccak256\":\"0x7a187c7031248663ae674cb56acdcea47099c2fa4fde49f91679b14b004e1ce0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f48576ad6b6ece288d6df1241d22503330c86696f2fb719e61205b2fbc34a8e\",\"dweb:/ipfs/QmYqDwsCFkEZ9UusAZvLReiRCU1UV8GQ8bzHgeRmCVkSAJ\"]},\"farms-pools/utils/Address.sol\":{\"keccak256\":\"0x17de04c9a869de25c86566a4d0ae5569374884a54ac619506073b14197d2f6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5910c7dce55c17825ea964237054a544f164e854732bfdfaf593b612a89f57b\",\"dweb:/ipfs/QmUQ2gzqoAvYcJ5LqdUEsbMY8aA7tWxFKZjVt8tFgttEVu\"]},\"farms-pools/utils/Context.sol\":{\"keccak256\":\"0xa475c1685349498b21fd15bf23d66cc09480745186a5854b010784b620ffe4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aa171a3b0aeabd7b31b94cf63eb14df9fd3d2e3a12d5ba3d9a634a789871196\",\"dweb:/ipfs/QmNwZDsCn4Af9Uyw3syohXAAoe9pAwCuvCm6FZXG3Hv5ka\"]},\"farms-pools/utils/Pausable.sol\":{\"keccak256\":\"0x6e6dd5d6fb04c52a8aef08c1198f2c182b9dc4ea9e6dca1643f81ecccc28d962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5d276d345f2fd45a6f56f5a02495b471428537026a1da1b03cac525be1b9a4f\",\"dweb:/ipfs/QmfBYHxkeixHMTLJt8eb4oWrvUiEvFitPycxTxAKgqFrhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1990,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2836,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 127,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(UserInfo)103_storage)"
							},
							{
								"astId": 131,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "userIFOInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(UserIFOInfo)114_storage)"
							},
							{
								"astId": 133,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "startBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 135,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "endBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 137,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "totalShares",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 139,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "lastHarvestedTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 141,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "admin",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "treasury",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "performanceFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 161,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "callFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 164,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "withdrawFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
								"label": "withdrawFeePeriod",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(UserIFOInfo)114_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LandbaseLockPool.UserIFOInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIFOInfo)114_storage"
							},
							"t_mapping(t_address,t_struct(UserInfo)103_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LandbaseLockPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)103_storage"
							},
							"t_struct(UserIFOInfo)114_storage": {
								"encoding": "inplace",
								"label": "struct LandbaseLockPool.UserIFOInfo",
								"members": [
									{
										"astId": 105,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastActionBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 107,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastValidActionBalance",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 109,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastActionBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 111,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastValidActionBlock",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 113,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastAvgBalance",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)103_storage": {
								"encoding": "inplace",
								"label": "struct LandbaseLockPool.UserInfo",
								"members": [
									{
										"astId": 96,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "shares",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 98,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastDepositedTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 100,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "cakeAtLastUserAction",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "farms-pools/LandbaseLockPool.sol:LandbaseLockPool",
										"label": "lastUserActionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"available()": {
								"notice": "Custom logic for how much the vault allows to be borrowed"
							},
							"balanceOf()": {
								"notice": "Calculates the total underlying tokens"
							},
							"calculateHarvestCakeRewards()": {
								"notice": "Calculates the expected harvest reward from third party"
							},
							"calculateTotalPendingCakeRewards()": {
								"notice": "Calculates the total pending rewards that can be restaked"
							},
							"constructor": "Constructor",
							"deposit(uint256)": {
								"notice": "Deposits funds into the Cake Vault"
							},
							"emergencyWithdraw()": {
								"notice": "Withdraws from MasterChef to Vault without caring about rewards."
							},
							"emergencyWithdrawAll()": {
								"notice": "Withdraws user all funds in emergency,it's called by user not admin,the userifo status will be clear"
							},
							"getPricePerFullShare()": {
								"notice": "Calculates the price per share"
							},
							"getUserCredit(address)": {
								"notice": "calculate IFO latest average balance for specific user"
							},
							"harvest()": {
								"notice": "Reinvests CAKE tokens into MasterChef"
							},
							"inCaseTokensGetStuck(address)": {
								"notice": "Withdraw unexpected tokens sent to the Cake Vault"
							},
							"pause()": {
								"notice": "Triggers stopped state"
							},
							"setAdmin(address)": {
								"notice": "Sets admin address"
							},
							"setCallFee(uint256)": {
								"notice": "Sets call fee"
							},
							"setPerformanceFee(uint256)": {
								"notice": "Sets performance fee"
							},
							"setTreasury(address)": {
								"notice": "Sets treasury address"
							},
							"setWithdrawFee(uint256)": {
								"notice": "Sets withdraw fee"
							},
							"setWithdrawFeePeriod(uint256)": {
								"notice": "Sets withdraw fee period"
							},
							"unpause()": {
								"notice": "Returns to normal state"
							},
							"updateEndBlock(uint256)": {
								"notice": "It allows the admin to update end block"
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"notice": "It allows the admin to update start and end blocks"
							},
							"withdraw(uint256)": {
								"notice": "Withdraws from funds from the IFOPool"
							},
							"withdrawAll()": {
								"notice": "Withdraws all funds for a user"
							}
						},
						"version": 1
					}
				}
			},
			"farms-pools/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/SafeERC20.sol\":630:3791  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/SafeERC20.sol\":630:3791  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220822203487620c3e25db9cc189ac35a242a25b7349efdbd3e2f11fb0ed42340ea64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220822203487620c3e25db9cc189ac35a242a25b7349efdbd3e2f11fb0ed42340ea64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0x22 SUB 0x48 PUSH23 0x20C3E25DB9CC189AC35A242A25B7349EFDBD3E2F11FB0E 0xD4 0x23 BLOCKHASH 0xEA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:3161:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220822203487620c3e25db9cc189ac35a242a25b7349efdbd3e2f11fb0ed42340ea64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0x22 SUB 0x48 PUSH23 0x20C3E25DB9CC189AC35A242A25B7349EFDBD3E2F11FB0E 0xD4 0x23 BLOCKHASH 0xEA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:3161:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 3791,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220822203487620c3e25db9cc189ac35a242a25b7349efdbd3e2f11fb0ed42340ea64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 3791,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 3791,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/IERC20.sol\":{\"keccak256\":\"0x1cf8c1e1a8a8f60671d426bcedba75f5f0509dc74789e2d2475791c0596c33d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687bcf000696228ec0ab4f0a4a694c5d66386a03e3accb981882e44c267ecc2a\",\"dweb:/ipfs/QmbbfbCnBKTiqC1avw89kfA3wx8nmJWAWL7AAdu2p8DrHp\"]},\"farms-pools/SafeERC20.sol\":{\"keccak256\":\"0xbc5515eb437f14554c0a3130218d4e10fa2005ebe04de5a94c3b26045ea1edca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c499bba562949b35ef7c62a405c718ffdffd00eaf719be51f55b0555f2970d03\",\"dweb:/ipfs/QmPR8ay1e9S45f467LJJCLTfjUWeasAyRdRxD61AphUduB\"]},\"farms-pools/libraries/SafeMath.sol\":{\"keccak256\":\"0x7a187c7031248663ae674cb56acdcea47099c2fa4fde49f91679b14b004e1ce0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f48576ad6b6ece288d6df1241d22503330c86696f2fb719e61205b2fbc34a8e\",\"dweb:/ipfs/QmYqDwsCFkEZ9UusAZvLReiRCU1UV8GQ8bzHgeRmCVkSAJ\"]},\"farms-pools/utils/Address.sol\":{\"keccak256\":\"0x17de04c9a869de25c86566a4d0ae5569374884a54ac619506073b14197d2f6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5910c7dce55c17825ea964237054a544f164e854732bfdfaf593b612a89f57b\",\"dweb:/ipfs/QmUQ2gzqoAvYcJ5LqdUEsbMY8aA7tWxFKZjVt8tFgttEVu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/access/Ownable.sol\":{\"keccak256\":\"0xd23f7163f3959c5989d5a5c08c1d9018ddd1b5cf87250aab0950a53744cbd745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9e02a29196a37f06675dd464d7ed2d604e17c5a227b86c0230100a5ee8fc873\",\"dweb:/ipfs/QmQ3EhqCuz8qV7yQ9gL5ybrxaVrjw9LdH45C6adQwwaN8c\"]},\"farms-pools/utils/Context.sol\":{\"keccak256\":\"0xa475c1685349498b21fd15bf23d66cc09480745186a5854b010784b620ffe4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aa171a3b0aeabd7b31b94cf63eb14df9fd3d2e3a12d5ba3d9a634a789871196\",\"dweb:/ipfs/QmNwZDsCn4Af9Uyw3syohXAAoe9pAwCuvCm6FZXG3Hv5ka\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1990,
								"contract": "farms-pools/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/interfaces/IMasterChef.sol": {
				"IMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingCake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"leaveStaking(uint256)": "1058d281",
							"pendingCake(uint256,address)": "1175a1dd",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/interfaces/IMasterChef.sol\":\"IMasterChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/interfaces/IMasterChef.sol\":{\"keccak256\":\"0x848f6928415dd126e6d6b1295e9c18222524f6bac8108e2d2b48a09ec9220b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbaebd1af51cecf6738e363bbe2dc299636908348c5deb0f38d585ecd74c3c1a\",\"dweb:/ipfs/QmT6DC2R7X27sLPAiJixgYiyDDh7YgcrzpbFviA9uu2UhY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/libraries/SafeMath.sol\":647:7437  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/libraries/SafeMath.sol\":647:7437  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209f8bce5df1ff635c75639af43348cddb9d9badc4f26effddfeb826352e2d524164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f8bce5df1ff635c75639af43348cddb9d9badc4f26effddfeb826352e2d524164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP12 0xCE 0x5D CALL SELFDESTRUCT PUSH4 0x5C75639A DELEGATECALL CALLER 0x48 0xCD 0xDB SWAP14 SWAP12 0xAD 0xC4 CALLCODE PUSH15 0xFFDDFEB826352E2D524164736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "647:6790:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f8bce5df1ff635c75639af43348cddb9d9badc4f26effddfeb826352e2d524164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP12 0xCE 0x5D CALL SELFDESTRUCT PUSH4 0x5C75639A DELEGATECALL CALLER 0x48 0xCD 0xDB SWAP14 SWAP12 0xAD 0xC4 CALLCODE PUSH15 0xFFDDFEB826352E2D524164736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "647:6790:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 7437,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f8bce5df1ff635c75639af43348cddb9d9badc4f26effddfeb826352e2d524164736f6c634300060c0033",
									".code": [
										{
											"begin": 647,
											"end": 7437,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 647,
											"end": 7437,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/libraries/SafeMath.sol\":{\"keccak256\":\"0x7a187c7031248663ae674cb56acdcea47099c2fa4fde49f91679b14b004e1ce0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f48576ad6b6ece288d6df1241d22503330c86696f2fb719e61205b2fbc34a8e\",\"dweb:/ipfs/QmYqDwsCFkEZ9UusAZvLReiRCU1UV8GQ8bzHgeRmCVkSAJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farms-pools/utils/Address.sol\":141:8006  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farms-pools/utils/Address.sol\":141:8006  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0f95fd2ada37963c8017a386e967f66a942d92ff9449ba1adc0dfeafad7c71964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f95fd2ada37963c8017a386e967f66a942d92ff9449ba1adc0dfeafad7c71964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xF9 0x5F 0xD2 0xAD LOG3 PUSH26 0x63C8017A386E967F66A942D92FF9449BA1ADC0DFEAFAD7C71964 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "141:7865:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f95fd2ada37963c8017a386e967f66a942d92ff9449ba1adc0dfeafad7c71964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xF9 0x5F 0xD2 0xAD LOG3 PUSH26 0x63C8017A386E967F66A942D92FF9449BA1ADC0DFEAFAD7C71964 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "141:7865:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 141,
									"end": 8006,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0f95fd2ada37963c8017a386e967f66a942d92ff9449ba1adc0dfeafad7c71964736f6c634300060c0033",
									".code": [
										{
											"begin": 141,
											"end": 8006,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 141,
											"end": 8006,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/utils/Address.sol\":{\"keccak256\":\"0x17de04c9a869de25c86566a4d0ae5569374884a54ac619506073b14197d2f6ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5910c7dce55c17825ea964237054a544f164e854732bfdfaf593b612a89f57b\",\"dweb:/ipfs/QmUQ2gzqoAvYcJ5LqdUEsbMY8aA7tWxFKZjVt8tFgttEVu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/utils/Context.sol\":{\"keccak256\":\"0xa475c1685349498b21fd15bf23d66cc09480745186a5854b010784b620ffe4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aa171a3b0aeabd7b31b94cf63eb14df9fd3d2e3a12d5ba3d9a634a789871196\",\"dweb:/ipfs/QmNwZDsCn4Af9Uyw3syohXAAoe9pAwCuvCm6FZXG3Hv5ka\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farms-pools/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farms-pools/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"farms-pools/utils/Context.sol\":{\"keccak256\":\"0xa475c1685349498b21fd15bf23d66cc09480745186a5854b010784b620ffe4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aa171a3b0aeabd7b31b94cf63eb14df9fd3d2e3a12d5ba3d9a634a789871196\",\"dweb:/ipfs/QmNwZDsCn4Af9Uyw3syohXAAoe9pAwCuvCm6FZXG3Hv5ka\"]},\"farms-pools/utils/Pausable.sol\":{\"keccak256\":\"0x6e6dd5d6fb04c52a8aef08c1198f2c182b9dc4ea9e6dca1643f81ecccc28d962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5d276d345f2fd45a6f56f5a02495b471428537026a1da1b03cac525be1b9a4f\",\"dweb:/ipfs/QmfBYHxkeixHMTLJt8eb4oWrvUiEvFitPycxTxAKgqFrhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2836,
								"contract": "farms-pools/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"farms-pools/IERC20.sol": {
				"ast": {
					"absolutePath": "farms-pools/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "168:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "287:9:0"
									},
									"scope": 77,
									"src": "242:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "305:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "403:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:9:0"
									},
									"scope": 77,
									"src": "385:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "461:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "700:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "752:6:0"
									},
									"scope": 77,
									"src": "682:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "767:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1062:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1061:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1116:9:0"
									},
									"scope": 77,
									"src": "1043:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1134:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1811:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1863:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1862:6:0"
									},
									"scope": 77,
									"src": "1795:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1877:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2209:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2225:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2208:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2277:6:0"
									},
									"scope": 77,
									"src": "2187:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2292:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2476:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2498:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2475:57:0"
									},
									"src": "2461:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2541:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2713:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2736:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2761:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2712:63:0"
									},
									"src": "2698:78:0"
								}
							],
							"scope": 78,
							"src": "144:2635:0"
						}
					],
					"src": "35:2744:0"
				},
				"id": 0
			},
			"farms-pools/LandbaseLockPool.sol": {
				"ast": {
					"absolutePath": "farms-pools/LandbaseLockPool.sol",
					"exportedSymbols": {
						"LandbaseLockPool": [
							1769
						]
					},
					"id": 1770,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "farms-pools/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 2093,
							"src": "60:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 81,
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 2500,
							"src": "92:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 82,
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 1983,
							"src": "128:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/utils/Pausable.sol",
							"file": "./utils/Pausable.sol",
							"id": 83,
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 2911,
							"src": "155:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/interfaces/IMasterChef.sol",
							"file": "./interfaces/IMasterChef.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 1770,
							"sourceUnit": 2145,
							"src": "187:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 85,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2092,
										"src": "258:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$2092",
											"typeString": "contract Ownable"
										}
									},
									"id": 86,
									"nodeType": "InheritanceSpecifier",
									"src": "258:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 87,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2910,
										"src": "267:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$2910",
											"typeString": "contract Pausable"
										}
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "267:8:1"
								}
							],
							"contractDependencies": [
								2092,
								2818,
								2910
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1769,
							"linearizedBaseContracts": [
								1769,
								2910,
								2092,
								2818
							],
							"name": "LandbaseLockPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 91,
									"libraryName": {
										"contractScope": null,
										"id": 89,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1982,
										"src": "289:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1982",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "283:27:1",
									"typeName": {
										"contractScope": null,
										"id": 90,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "303:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 94,
									"libraryName": {
										"contractScope": null,
										"id": 92,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2499,
										"src": "322:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2499",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "316:27:1",
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "LandbaseLockPool.UserInfo",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "shares",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "378:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "378:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "lastDepositedTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "434:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "cakeAtLastUserAction",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "525:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "525:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "lastUserActionTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "621:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "621:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1769,
									"src": "351:348:1",
									"visibility": "public"
								},
								{
									"canonicalName": "LandbaseLockPool.UserIFOInfo",
									"id": 114,
									"members": [
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "lastActionBalance",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 114,
											"src": "824:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "824:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "lastValidActionBalance",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 114,
											"src": "925:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "925:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "lastActionBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 114,
											"src": "1009:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 108,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1009:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "lastValidActionBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 114,
											"src": "1073:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1073:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "lastAvgBalance",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 114,
											"src": "1160:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1160:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserIFOInfo",
									"nodeType": "StructDefinition",
									"scope": 1769,
									"src": "716:513:1",
									"visibility": "public"
								},
								{
									"canonicalName": "LandbaseLockPool.IFOActions",
									"id": 117,
									"members": [
										{
											"id": 115,
											"name": "Deposit",
											"nodeType": "EnumValue",
											"src": "1254:7:1"
										},
										{
											"id": 116,
											"name": "Withdraw",
											"nodeType": "EnumValue",
											"src": "1263:8:1"
										}
									],
									"name": "IFOActions",
									"nodeType": "EnumDefinition",
									"src": "1237:35:1"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 119,
									"mutability": "immutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1280:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 118,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "1280:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec78e832",
									"id": 121,
									"mutability": "immutable",
									"name": "receiptToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1330:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 120,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "1330:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb1db278",
									"id": 123,
									"mutability": "immutable",
									"name": "masterchef",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1390:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterChef_$2144",
										"typeString": "contract IMasterChef"
									},
									"typeName": {
										"contractScope": null,
										"id": 122,
										"name": "IMasterChef",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2144,
										"src": "1390:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterChef_$2144",
											"typeString": "contract IMasterChef"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 127,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1438:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
										"typeString": "mapping(address => struct LandbaseLockPool.UserInfo)"
									},
									"typeName": {
										"id": 126,
										"keyType": {
											"id": 124,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1446:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1438:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
											"typeString": "mapping(address => struct LandbaseLockPool.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 125,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 103,
											"src": "1457:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
												"typeString": "struct LandbaseLockPool.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06f5a745",
									"id": 131,
									"mutability": "mutable",
									"name": "userIFOInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1500:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserIFOInfo_$114_storage_$",
										"typeString": "mapping(address => struct LandbaseLockPool.UserIFOInfo)"
									},
									"typeName": {
										"id": 130,
										"keyType": {
											"id": 128,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1500:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserIFOInfo_$114_storage_$",
											"typeString": "mapping(address => struct LandbaseLockPool.UserIFOInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 129,
											"name": "UserIFOInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 114,
											"src": "1520:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
												"typeString": "struct LandbaseLockPool.UserIFOInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 133,
									"mutability": "mutable",
									"name": "startBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1560:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1560:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "083c6323",
									"id": 135,
									"mutability": "mutable",
									"name": "endBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1592:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a98ef39",
									"id": 137,
									"mutability": "mutable",
									"name": "totalShares",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1624:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1624:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b60f0531",
									"id": 139,
									"mutability": "mutable",
									"name": "lastHarvestedTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1657:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1657:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 141,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1696:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 143,
									"mutability": "mutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1723:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bdca9165",
									"id": 146,
									"mutability": "constant",
									"name": "MAX_PERFORMANCE_FEE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1755:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1755:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "363030",
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1801:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "600"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ad5a53f",
									"id": 149,
									"mutability": "constant",
									"name": "MAX_CALL_FEE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1817:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1817:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030",
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1856:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d4b0de2f",
									"id": 152,
									"mutability": "constant",
									"name": "MAX_WITHDRAW_FEE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1872:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1872:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "343030",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1915:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2cfc5f01",
									"id": 155,
									"mutability": "constant",
									"name": "MAX_WITHDRAW_FEE_PERIOD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "1931:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1931:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313638",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1981:9:1",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "168"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87788782",
									"id": 158,
									"mutability": "mutable",
									"name": "performanceFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "2009:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2009:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323030",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2041:3:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90321e1a",
									"id": 161,
									"mutability": "mutable",
									"name": "callFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "2057:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2057:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3235",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2082:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e941fa78",
									"id": 164,
									"mutability": "mutable",
									"name": "withdrawFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "2100:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2100:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2129:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df10b4e6",
									"id": 167,
									"mutability": "mutable",
									"name": "withdrawFeePeriod",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1769,
									"src": "2146:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2146:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3732",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2181:8:1",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "72"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 169,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2219:2:1"
									},
									"src": "2208:14:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 171,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2241:2:1"
									},
									"src": "2228:16:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 181,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2264:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2288:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2304:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastDepositedTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2320:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2263:83:1"
									},
									"src": "2250:97:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 189,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "2368:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "2392:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "2408:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2367:56:1"
									},
									"src": "2353:71:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 197,
									"name": "Harvest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2444:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"indexed": false,
												"mutability": "mutable",
												"name": "performanceFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2468:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "callFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2492:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2443:65:1"
									},
									"src": "2430:79:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 201,
									"name": "UpdateEndBlock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "2536:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2535:18:1"
									},
									"src": "2515:39:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 207,
									"name": "ZeroFreeIFO",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 207,
												"src": "2578:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 207,
												"src": "2602:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2577:46:1"
									},
									"src": "2560:64:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 213,
									"name": "UpdateStartAndEndBlocks",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"indexed": false,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "2660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "2680:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2659:38:1"
									},
									"src": "2630:68:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 227,
									"name": "UpdateUserIFO",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2724:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastAvgBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2748:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastActionBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2772:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastValidActionBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2799:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastActionBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2831:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastValidActionBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "2856:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2723:162:1"
									},
									"src": "2704:182:1"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "3516:503:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 246,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "3535:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3535:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "3550:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3535:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "737461727420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3563:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_506f1b59863f183c6ac4f29f4cc284383ff9846bdae98e937f71108256fea9ea",
																"typeString": "literal_string \"start block can't behind current block\""
															},
															"value": "start block can't behind current block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_506f1b59863f183c6ac4f29f4cc284383ff9846bdae98e937f71108256fea9ea",
																"typeString": "literal_string \"start block can't behind current block\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3527:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3527:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 254,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "3623:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 255,
																"name": "_endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "3637:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "656e6420626c6f636b2063616e277420626568696e6420737461727420626c6f636b",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3648:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7e60fff60ba5b691ce03013041a838e37a54104910525ca5ef5521e8edc3e12",
																"typeString": "literal_string \"end block can't behind start block\""
															},
															"value": "end block can't behind start block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7e60fff60ba5b691ce03013041a838e37a54104910525ca5ef5521e8edc3e12",
																"typeString": "literal_string \"end block can't behind start block\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3615:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3615:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3615:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 260,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3698:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 261,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "3706:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "3698:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3698:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 264,
														"name": "receiptToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "3723:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 265,
														"name": "_receiptToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3738:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "3723:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "3723:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 268,
														"name": "masterchef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "3762:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$2144",
															"typeString": "contract IMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 269,
														"name": "_masterchef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "3775:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$2144",
															"typeString": "contract IMasterChef"
														}
													},
													"src": "3762:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$2144",
														"typeString": "contract IMasterChef"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "3762:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 272,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3797:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 273,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3805:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3797:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "3797:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 276,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "3822:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 277,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "3833:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3822:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "3822:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 280,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "3853:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 281,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "3866:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3853:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "3853:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 284,
														"name": "endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "3888:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 285,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3899:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3888:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "3888:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 294,
																	"name": "_masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "3985:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3977:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 292,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3977:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3977:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "4007:2:1",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4008:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3999:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 296,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3999:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3999:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 289,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3957:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 288,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "3950:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3950:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1871,
														"src": "3950:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3950:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3950:61:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2894:390:1",
										"text": " @notice Constructor\n @param _token: Cake token contract\n @param _receiptToken: Syrup token contract\n @param _masterchef: MasterChef contract\n @param _admin: address of the admin\n @param _treasury: address of the treasury (collects fees)\n @param _startBlock: IFO start block height\n @param _endBlock: IFO end block height"
									},
									"id": 304,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3312:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 229,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3312:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_receiptToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3336:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 231,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3336:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_masterchef",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3367:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterChef_$2144",
													"typeString": "contract IMasterChef"
												},
												"typeName": {
													"contractScope": null,
													"id": 233,
													"name": "IMasterChef",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2144,
													"src": "3367:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$2144",
														"typeString": "contract IMasterChef"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3401:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3426:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3454:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "3484:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3301:207:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:1"
									},
									"scope": 1769,
									"src": "3290:729:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4128:74:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 308,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4147:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4147:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "4161:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4147:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "61646d696e3a207775743f",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4168:13:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															},
															"value": "admin: wut?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4139:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "4139:43:1"
											},
											{
												"id": 315,
												"nodeType": "PlaceholderStatement",
												"src": "4193:1:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4027:74:1",
										"text": " @notice Checks if the msg.sender is the admin address"
									},
									"id": 317,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4125:2:1"
									},
									"src": "4107:95:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "4317:161:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4336:24:1",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 322,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4349:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4349:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 321,
																	"name": "_isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "4337:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4337:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "636f6e7472616374206e6f7420616c6c6f776564",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4362:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1988ab16dfe822306185c8796ea6a716a307a9cfab9495761560d49c8048097",
																"typeString": "literal_string \"contract not allowed\""
															},
															"value": "contract not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1988ab16dfe822306185c8796ea6a716a307a9cfab9495761560d49c8048097",
																"typeString": "literal_string \"contract not allowed\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4328:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4328:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4328:57:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 330,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4404:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4404:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 332,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "4418:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4418:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4404:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "70726f787920636f6e7472616374206e6f7420616c6c6f776564",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4429:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d2c46e03b0dfc724c536b3e9d3860d579e91f6352c0895be2653cef859bdef",
																"typeString": "literal_string \"proxy contract not allowed\""
															},
															"value": "proxy contract not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d2c46e03b0dfc724c536b3e9d3860d579e91f6352c0895be2653cef859bdef",
																"typeString": "literal_string \"proxy contract not allowed\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4396:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "4396:62:1"
											},
											{
												"id": 338,
												"nodeType": "PlaceholderStatement",
												"src": "4469:1:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4210:78:1",
										"text": " @notice Checks if the msg.sender is a contract or a proxy"
									},
									"id": 340,
									"name": "notContract",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4314:2:1"
									},
									"src": "4294:184:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4739:994:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 351,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "4758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4768:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4758:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f206465706f736974",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4771:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															},
															"value": "Nothing to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4750:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "4750:42:1"
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 476,
														"src": "4805:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 359,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "4820:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4820:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4805:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4865:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4865:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 369,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "4885:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4877:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4877:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4877:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "4892:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 362,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4842:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1828,
														"src": "4842:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4842:58:1"
											},
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "currentShares",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 476,
														"src": "4911:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4935:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4911:25:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 378,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4951:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4951:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5054:50:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 393,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5069:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 394,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "5085:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5069:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 396,
															"nodeType": "ExpressionStatement",
															"src": "5069:23:1"
														}
													]
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "4947:157:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "4969:79:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 381,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "4984:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 388,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "5031:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 384,
																							"name": "totalShares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 137,
																							"src": "5013:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 382,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 343,
																							"src": "5001:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 383,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2382,
																						"src": "5001:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5001:24:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 386,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5000:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2404,
																		"src": "5000:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5000:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4984:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "4984:52:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 400,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5122:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5138:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5122:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6465706f73697420616d6f756e7420697320746f6f20736d616c6c20746f20616c6c6f6361746520736861726573",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6806e6705a9ee3b0e0c4b8d8e7cb4e2da5d59db3275bba90220e3e7d15d16f8",
																"typeString": "literal_string \"deposit amount is too small to allocate shares\""
															},
															"value": "deposit amount is too small to allocate shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6806e6705a9ee3b0e0c4b8d8e7cb4e2da5d59db3275bba90220e3e7d15d16f8",
																"typeString": "literal_string \"deposit amount is too small to allocate shares\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5114:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5114:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5114:76:1"
											},
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 476,
														"src": "5203:21:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 406,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "5203:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "5227:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserInfo storage ref)"
														}
													},
													"id": 411,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 409,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "5236:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5236:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5227:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct LandbaseLockPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 413,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5268:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "5268:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 419,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5298:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 416,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "5282:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "5282:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "5282:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5282:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5268:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "5268:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 423,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5323:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastDepositedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "5323:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 426,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5348:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5348:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5323:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "5323:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 430,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "5376:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 433,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5406:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 431,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "5390:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "5390:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5390:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5376:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "5376:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 437,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "cakeAtLastUserAction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "5433:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 447,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "5494:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 443,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "5477:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5477:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 440,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "5461:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																				"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "shares",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5461:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2382,
																	"src": "5461:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5461:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2404,
															"src": "5461:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5461:45:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5433:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "5433:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 451,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5517:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "5517:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 454,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5543:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5543:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5517:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "5517:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 459,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5599:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 460,
																"name": "IFOActions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5608:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IFOActions_$117_$",
																	"typeString": "type(enum LandbaseLockPool.IFOActions)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5608:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IFOActions_$117",
																"typeString": "enum LandbaseLockPool.IFOActions"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IFOActions_$117",
																"typeString": "enum LandbaseLockPool.IFOActions"
															}
														],
														"id": 458,
														"name": "_updateUserIFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "5584:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_IFOActions_$117_$returns$__$",
															"typeString": "function (uint256,enum LandbaseLockPool.IFOActions)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "5584:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_earn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "5640:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5640:7:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "5640:7:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5673:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5673:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 470,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5685:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "currentShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5694:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 472,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5709:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5709:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "5665:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5665:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "EmitStatement",
												"src": "5660:65:1"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "4486:178:1",
										"text": " @notice Deposits funds into the Cake Vault\n @dev Only possible when contract not paused.\n @param _amount: number of tokens to deposit (in CAKE)"
									},
									"functionSelector": "b6b55f25",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 346,
											"modifierName": {
												"argumentTypes": null,
												"id": 345,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2866,
												"src": "4713:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4713:13:1"
										},
										{
											"arguments": null,
											"id": 348,
											"modifierName": {
												"argumentTypes": null,
												"id": 347,
												"name": "notContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "4727:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4727:11:1"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "4687:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4686:17:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4739:0:1"
									},
									"scope": 1769,
									"src": "4670:1063:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "5934:197:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 483,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "6098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 485,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6098:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 487,
												"nodeType": "Return",
												"src": "6091:32:1"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "5741:132:1",
										"text": " @notice check IFO is avaliable\n @dev This function will be called that need to calculate average balance"
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isIFOAvailable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5903:2:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "5928:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5928:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5927:6:1"
									},
									"scope": 1769,
									"src": "5879:252:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "6401:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 495,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6419:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6419:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 497,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6435:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6419:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 499,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6449:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6449:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 501,
															"name": "endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "6465:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6449:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6419:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 494,
												"id": 504,
												"nodeType": "Return",
												"src": "6412:61:1"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "6139:197:1",
										"text": " @notice This function only be called to judge whether to update last action block.\n @dev only block number between start block and end block to update last action block."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidActionBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6370:2:1"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 506,
												"src": "6395:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6395:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6394:6:1"
									},
									"scope": 1769,
									"src": "6342:139:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "7242:958:1",
										"statements": [
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "currentBlock",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 594,
														"src": "7253:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 524,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -4,
														"src": "7276:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "number",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "7276:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7253:35:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 527,
														"name": "_lastActionBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "7475:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "7495:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7475:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 533,
												"nodeType": "IfStatement",
												"src": "7471:82:1",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "7504:49:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 530,
																"name": "_lastAvgBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "7526:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 521,
															"id": 531,
															"nodeType": "Return",
															"src": "7519:22:1"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 534,
														"name": "_lastValidActionBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "7624:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 535,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7648:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7624:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 550,
												"nodeType": "IfStatement",
												"src": "7620:193:1",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "7659:154:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 537,
																	"name": "_lastValidActionBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7674:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 538,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "7698:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7674:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "7674:34:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 541,
																	"name": "_lastAvgBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "7723:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7741:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7723:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "7723:19:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 545,
																	"name": "_lastValidActionBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7757:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 546,
																	"name": "_lastActionBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7783:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7757:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "7757:44:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 551,
														"name": "currentBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "7825:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 552,
																"name": "currentBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "7840:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "7855:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7840:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 556,
															"name": "endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "7882:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "7840:50:1",
														"trueExpression": {
															"argumentTypes": null,
															"id": 555,
															"name": "currentBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "7867:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7825:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7825:65:1"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "lastContribute",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 594,
														"src": "7903:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 566,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "7975:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 564,
																	"name": "_lastValidActionBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7949:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2348,
																"src": "7949:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7949:37:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 562,
															"name": "_lastAvgBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7929:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2382,
														"src": "7929:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7903:84:1"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "currentContribute",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 594,
														"src": "7998:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7998:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 576,
																	"name": "_lastValidActionBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "8072:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 574,
																	"name": "currentBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "8055:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2348,
																"src": "8055:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8055:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 572,
															"name": "_lastValidActionBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "8027:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2382,
														"src": "8027:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8027:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7998:97:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 580,
														"name": "avgBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "8106:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 589,
																		"name": "startBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "8180:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 587,
																		"name": "currentBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "8163:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2348,
																	"src": "8163:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8163:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 583,
																				"name": "currentContribute",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 571,
																				"src": "8139:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 581,
																				"name": "lastContribute",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "8120:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2326,
																			"src": "8120:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8120:37:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 585,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8119:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2404,
															"src": "8119:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8119:73:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8106:86:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "8106:86:1"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "6490:528:1",
										"text": " @notice calculate user IFO latest avgBalance.\n @dev only calculate average balance when IFO is available, other return 0.\n @param _lastActionBlock: last action(deposit/withdraw) block number.\n @param _lastValidActionBlock: last valid action(deposit/withdraw) block number.\n @param _lastActionBalance: last valid action(deposit/withdraw) block number.\n @param _lastValidActionBalance: staked cake number at last action.\n @param _lastAvgBalance: last average balance."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAvgBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "_lastActionBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7054:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "_lastValidActionBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7081:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7081:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_lastActionBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7113:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_lastValidActionBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7141:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_lastAvgBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7175:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7053:146:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "avgBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "7222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7221:20:1"
									},
									"scope": 1769,
									"src": "7024:1176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "8441:1053:1",
										"statements": [
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "IFOInfo",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 709,
														"src": "8452:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserIFOInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 603,
															"name": "UserIFOInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 114,
															"src": "8452:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "userIFOInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "8482:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserIFOInfo_$114_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserIFOInfo storage ref)"
														}
													},
													"id": 608,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 606,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "8494:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8494:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8482:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage",
														"typeString": "struct LandbaseLockPool.UserIFOInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8452:53:1"
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "avgBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 709,
														"src": "8526:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8526:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8547:18:1",
														"subExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 612,
																"name": "_isIFOAvailable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "8548:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8548:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 617,
																	"name": "IFOInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8593:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastActionBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 109,
																"src": "8593:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 619,
																	"name": "IFOInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8618:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastValidActionBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 111,
																"src": "8618:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 621,
																	"name": "IFOInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastActionBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 105,
																"src": "8648:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 623,
																	"name": "IFOInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8675:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastValidActionBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "8675:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 625,
																	"name": "IFOInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "8707:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastAvgBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 113,
																"src": "8707:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 616,
															"name": "_calculateAvgBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "8572:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8572:158:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8547:183:1",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8568:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8526:204:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_IFOActions_$117",
														"typeString": "enum LandbaseLockPool.IFOActions"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 630,
														"name": "_action",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "8755:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IFOActions_$117",
															"typeString": "enum LandbaseLockPool.IFOActions"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 631,
															"name": "IFOActions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "8766:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_IFOActions_$117_$",
																"typeString": "type(enum LandbaseLockPool.IFOActions)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8766:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IFOActions_$117",
															"typeString": "enum LandbaseLockPool.IFOActions"
														}
													},
													"src": "8755:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "8925:93:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 651,
																		"name": "IFOInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "8940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																		}
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastActionBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 105,
																	"src": "8940:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 657,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8998:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 654,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "8968:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 655,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastActionBalance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 105,
																			"src": "8968:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2326,
																		"src": "8968:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8968:38:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8940:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 660,
															"nodeType": "ExpressionStatement",
															"src": "8940:66:1"
														}
													]
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "8751:267:1",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "8786:135:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 634,
																		"name": "IFOInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "8801:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastActionBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 105,
																	"src": "8801:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 637,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "8829:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 638,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "8839:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastActionBalance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 105,
																			"src": "8839:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8829:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 645,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "8901:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 642,
																					"name": "IFOInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "8871:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																						"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lastActionBalance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 105,
																				"src": "8871:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2348,
																			"src": "8871:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8871:38:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "8829:80:1",
																	"trueExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8867:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8801:108:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 649,
															"nodeType": "ExpressionStatement",
															"src": "8801:108:1"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 663,
														"name": "_isValidActionBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "9034:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9034:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 680,
												"nodeType": "IfStatement",
												"src": "9030:173:1",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "9057:146:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 665,
																		"name": "IFOInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9073:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastValidActionBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "9073:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 668,
																		"name": "IFOInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9106:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastActionBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 105,
																	"src": "9106:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9073:58:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 671,
															"nodeType": "ExpressionStatement",
															"src": "9073:58:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 672,
																		"name": "IFOInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9147:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastValidActionBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 111,
																	"src": "9147:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 675,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "9179:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9179:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9147:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "9147:44:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 681,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9223:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastAvgBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "9223:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "avgBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "9248:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9223:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "9223:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 687,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9269:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastActionBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "9269:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 690,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "9295:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9295:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9269:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "9269:38:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 695,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9337:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9337:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 697,
																"name": "IFOInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9349:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																	"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastAvgBalance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 113,
															"src": "9349:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 699,
																"name": "IFOInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9373:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																	"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastActionBalance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 105,
															"src": "9373:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"name": "IFOInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9400:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																	"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValidActionBalance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 107,
															"src": "9400:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 703,
																"name": "IFOInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9432:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																	"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastActionBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 109,
															"src": "9432:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 705,
																"name": "IFOInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9457:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																	"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValidActionBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 111,
															"src": "9457:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "UpdateUserIFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "9323:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9323:163:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "EmitStatement",
												"src": "9318:168:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8208:157:1",
										"text": " @notice update userIFOInfo\n @param _amount:the cake amount that need be add or sub\n @param _action:IFOActions enum element"
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUserIFO",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "8395:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "_action",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "8412:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IFOActions_$117",
													"typeString": "enum LandbaseLockPool.IFOActions"
												},
												"typeName": {
													"contractScope": null,
													"id": 599,
													"name": "IFOActions",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 117,
													"src": "8412:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IFOActions_$117",
														"typeString": "enum LandbaseLockPool.IFOActions"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8394:37:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8441:0:1"
									},
									"scope": 1769,
									"src": "8371:1123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "9706:356:1",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "IFOInfo",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 748,
														"src": "9717:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserIFOInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 718,
															"name": "UserIFOInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 114,
															"src": "9717:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 720,
														"name": "userIFOInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "9747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserIFOInfo_$114_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserIFOInfo storage ref)"
														}
													},
													"id": 722,
													"indexExpression": {
														"argumentTypes": null,
														"id": 721,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "9759:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9747:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage",
														"typeString": "struct LandbaseLockPool.UserIFOInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9717:48:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 724,
														"name": "_isIFOAvailable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "9790:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9790:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "10010:45:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "avgBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "10026:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10039:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10026:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 745,
															"nodeType": "ExpressionStatement",
															"src": "10026:14:1"
														}
													]
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "9786:269:1",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "9808:198:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "avgBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9823:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 728,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "9857:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 729,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastActionBlock",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 109,
																			"src": "9857:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 730,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "9882:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastValidActionBlock",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 111,
																			"src": "9882:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 732,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "9912:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastActionBalance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 105,
																			"src": "9912:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 734,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "9939:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastValidActionBalance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "9939:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 736,
																				"name": "IFOInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "9971:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																					"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastAvgBalance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 113,
																			"src": "9971:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 727,
																		"name": "_calculateAvgBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "9836:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9836:158:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9823:171:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "9823:171:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "9502:118:1",
										"text": " @notice calculate IFO latest average balance for specific user\n @param _user: user address"
									},
									"functionSelector": "dad6f0dc",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCredit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "9649:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9648:15:1"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "avgBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "9686:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9685:20:1"
									},
									"scope": 1769,
									"src": "9626:436:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "10179:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 756,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "10199:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
																		"typeString": "mapping(address => struct LandbaseLockPool.UserInfo storage ref)"
																	}
																},
																"id": 759,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 757,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "10208:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10208:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10199:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage",
																	"typeString": "struct LandbaseLockPool.UserInfo storage ref"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "10199:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 755,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "10190:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10190:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "10190:37:1"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "10070:59:1",
										"text": " @notice Withdraws all funds for a user"
									},
									"functionSelector": "853828b6",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 753,
											"modifierName": {
												"argumentTypes": null,
												"id": 752,
												"name": "notContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "10167:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10167:11:1"
										}
									],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10155:2:1"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10179:0:1"
									},
									"scope": 1769,
									"src": "10135:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "10431:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_zeroFreeIFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "10442:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10442:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "10442:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 774,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "10478:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
																		"typeString": "mapping(address => struct LandbaseLockPool.UserInfo storage ref)"
																	}
																},
																"id": 777,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 775,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "10487:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10487:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10478:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage",
																	"typeString": "struct LandbaseLockPool.UserInfo storage ref"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "10478:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "withdrawV1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10467:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10467:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "10467:39:1"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "10243:129:1",
										"text": " @notice Withdraws user all funds in emergency,it's called by user not admin,the userifo status will be clear"
									},
									"functionSelector": "dd191719",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 768,
											"modifierName": {
												"argumentTypes": null,
												"id": 767,
												"name": "notContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "10419:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10419:11:1"
										}
									],
									"name": "emergencyWithdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10407:2:1"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10431:0:1"
									},
									"scope": 1769,
									"src": "10378:136:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "10622:340:1",
										"statements": [
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "IFOInfo",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 830,
														"src": "10633:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserIFOInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 786,
															"name": "UserIFOInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 114,
															"src": "10633:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 788,
														"name": "userIFOInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "10663:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserIFOInfo_$114_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserIFOInfo storage ref)"
														}
													},
													"id": 791,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 789,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "10675:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10675:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10663:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage",
														"typeString": "struct LandbaseLockPool.UserIFOInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10633:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 793,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastActionBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "10699:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10727:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10699:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "10699:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 799,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10739:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastValidActionBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "10739:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10772:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10739:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10739:34:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 805,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastActionBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "10784:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10810:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10784:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "10784:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 811,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastValidActionBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "10822:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10853:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10822:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "10822:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 817,
															"name": "IFOInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10865:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIFOInfo_$114_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserIFOInfo storage pointer"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastAvgBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "10865:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10890:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10865:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "10865:26:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 824,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10929:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10929:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 826,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "10941:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10941:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "ZeroFreeIFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "10917:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10917:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "10912:42:1"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "10522:61:1",
										"text": " @notice set userIFOInfo to initial state"
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroFreeIFO",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10610:2:1"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10622:0:1"
									},
									"scope": 1769,
									"src": "10589:373:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "11149:1590:1",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1031,
														"src": "11160:21:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 839,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "11160:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 841,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "11184:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserInfo storage ref)"
														}
													},
													"id": 844,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 842,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "11193:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11193:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11184:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct LandbaseLockPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11160:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 847,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "11223:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11233:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11223:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11236:21:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11215:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11215:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "11215:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "11277:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 855,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "11288:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "11288:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11277:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11301:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11269:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11269:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11269:66:1"
											},
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "currentAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1031,
														"src": "11348:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11348:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 870,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "11403:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 866,
																			"name": "_shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 834,
																			"src": "11389:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 863,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "11373:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11373:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2382,
																		"src": "11373:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11373:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11372:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "11372:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11372:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11348:67:1"
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ifoDeductAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1031,
														"src": "11426:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"argumentTypes": null,
													"id": 875,
													"name": "currentAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 862,
													"src": "11452:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11426:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 877,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "11476:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "11476:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 883,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "11506:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 880,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "11490:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "11490:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2348,
															"src": "11490:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11490:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11476:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "11476:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 887,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "11525:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 890,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "11555:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 888,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "11539:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2348,
															"src": "11539:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11539:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11525:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11525:38:1"
											},
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1031,
														"src": "11576:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11576:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 896,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "11590:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11590:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11576:25:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 899,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "11616:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 900,
														"name": "currentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "11622:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11616:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 941,
												"nodeType": "IfStatement",
												"src": "11612:354:1",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "11637:329:1",
													"statements": [
														{
															"assignments": [
																903
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 903,
																	"mutability": "mutable",
																	"name": "balWithdraw",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 940,
																	"src": "11652:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 902,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11652:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 908,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 906,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "11692:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 904,
																		"name": "currentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "11674:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2348,
																	"src": "11674:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11674:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11652:44:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 913,
																		"name": "balWithdraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "11748:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 910,
																				"name": "masterchef",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "11723:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			],
																			"id": 909,
																			"name": "IMasterChef",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "11711:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																				"typeString": "type(contract IMasterChef)"
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11711:23:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMasterChef_$2144",
																			"typeString": "contract IMasterChef"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "leaveStaking",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2118,
																	"src": "11711:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11711:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 915,
															"nodeType": "ExpressionStatement",
															"src": "11711:49:1"
														},
														{
															"assignments": [
																917
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 917,
																	"mutability": "mutable",
																	"name": "balAfter",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 940,
																	"src": "11775:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11775:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 920,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 918,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "11794:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11794:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11775:30:1"
														},
														{
															"assignments": [
																922
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 922,
																	"mutability": "mutable",
																	"name": "diff",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 940,
																	"src": "11820:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11820:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 927,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 925,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "11848:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 923,
																		"name": "balAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "11835:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2348,
																	"src": "11835:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11835:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11820:32:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 928,
																	"name": "diff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "11871:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 929,
																	"name": "balWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "11878:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11871:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 939,
															"nodeType": "IfStatement",
															"src": "11867:88:1",
															"trueBody": {
																"id": 938,
																"nodeType": "Block",
																"src": "11891:64:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 931,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 862,
																				"src": "11910:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 934,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "11934:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 932,
																						"name": "bal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 895,
																						"src": "11926:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2326,
																					"src": "11926:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11926:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11910:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 937,
																		"nodeType": "ExpressionStatement",
																		"src": "11910:29:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 942,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11982:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11982:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 947,
																"name": "withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "12027:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 944,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "12000:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastDepositedTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "12000:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "12000:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12000:45:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11982:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 975,
												"nodeType": "IfStatement",
												"src": "11978:297:1",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "12047:228:1",
													"statements": [
														{
															"assignments": [
																951
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 951,
																	"mutability": "mutable",
																	"name": "currentWithdrawFee",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 974,
																	"src": "12062:26:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 950,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12062:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 959,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "3130303030",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12126:5:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 954,
																				"name": "withdrawFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 164,
																				"src": "12109:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 952,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 862,
																				"src": "12091:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2382,
																			"src": "12091:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12091:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2404,
																	"src": "12091:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12091:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12062:70:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 963,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "12166:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 964,
																		"name": "currentWithdrawFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "12176:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 960,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "12147:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "12147:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12147:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 966,
															"nodeType": "ExpressionStatement",
															"src": "12147:48:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 967,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "12210:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 970,
																			"name": "currentWithdrawFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "12244:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 968,
																			"name": "currentAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "12226:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2348,
																		"src": "12226:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12226:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12210:53:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "12210:53:1"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 976,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "12291:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "12291:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12305:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12291:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "12414:56:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 995,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "12429:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "cakeAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "12429:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12457:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12429:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "12429:29:1"
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "12287:183:1",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "12308:100:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 980,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "12323:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "cakeAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "12323:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 990,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 137,
																			"src": "12384:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 986,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "12367:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12367:11:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 983,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 840,
																						"src": "12351:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																							"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																						}
																					},
																					"id": 984,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 96,
																					"src": "12351:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2382,
																				"src": "12351:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12351:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2404,
																		"src": "12351:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12351:45:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12323:73:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "12323:73:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1003,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "12482:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "12482:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1006,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "12508:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12508:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12482:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "12482:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1011,
															"name": "ifoDeductAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "12574:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1012,
																"name": "IFOActions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "12591:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IFOActions_$117_$",
																	"typeString": "type(enum LandbaseLockPool.IFOActions)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Withdraw",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12591:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IFOActions_$117",
																"typeString": "enum LandbaseLockPool.IFOActions"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IFOActions_$117",
																"typeString": "enum LandbaseLockPool.IFOActions"
															}
														],
														"id": 1010,
														"name": "_updateUserIFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "12559:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_IFOActions_$117_$returns$__$",
															"typeString": "function (uint256,enum LandbaseLockPool.IFOActions)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12559:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "12559:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12643:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12643:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1021,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "12655:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1016,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "12624:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "12624:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12624:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "12624:45:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12696:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12696:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1027,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "12708:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1028,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12723:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1024,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "12687:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12687:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "12682:49:1"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "10970:119:1",
										"text": " @notice Withdraws from funds from the IFOPool\n @param _shares: Number of shares to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 837,
											"modifierName": {
												"argumentTypes": null,
												"id": 836,
												"name": "notContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "11137:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11137:11:1"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1032,
												"src": "11113:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11112:17:1"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11149:0:1"
									},
									"scope": 1769,
									"src": "11095:1644:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "13080:1452:1",
										"statements": [
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1220,
														"src": "13091:21:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct LandbaseLockPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1038,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "13091:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1040,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "13115:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct LandbaseLockPool.UserInfo storage ref)"
														}
													},
													"id": 1043,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1041,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "13124:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13124:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13115:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct LandbaseLockPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13091:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1046,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "13154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13164:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13154:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13167:21:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13146:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13146:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "13146:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1053,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "13208:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1054,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "13219:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "13219:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13208:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13232:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13200:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13200:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "13200:66:1"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "currentAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1220,
														"src": "13279:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1069,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "13334:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1065,
																			"name": "_shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "13320:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1062,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "13304:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13304:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2382,
																		"src": "13304:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13304:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1067,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13303:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "13303:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13303:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13279:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1072,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13357:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "13357:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1078,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "13387:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1075,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "13371:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "13371:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2348,
															"src": "13371:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13371:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13357:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "13357:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1082,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "13406:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1085,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "13436:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1083,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "13420:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2348,
															"src": "13420:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13420:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13406:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "13406:38:1"
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1220,
														"src": "13457:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13457:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1091,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "13471:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13471:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13457:25:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1094,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "13497:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1095,
														"name": "currentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "13503:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13497:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "13493:354:1",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "13518:329:1",
													"statements": [
														{
															"assignments": [
																1098
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1098,
																	"mutability": "mutable",
																	"name": "balWithdraw",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1135,
																	"src": "13533:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13533:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1103,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1101,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "13573:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1099,
																		"name": "currentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "13555:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2348,
																	"src": "13555:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13555:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13533:44:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1108,
																		"name": "balWithdraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "13629:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1105,
																				"name": "masterchef",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "13604:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			],
																			"id": 1104,
																			"name": "IMasterChef",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "13592:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																				"typeString": "type(contract IMasterChef)"
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13592:23:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMasterChef_$2144",
																			"typeString": "contract IMasterChef"
																		}
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "leaveStaking",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2118,
																	"src": "13592:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13592:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1110,
															"nodeType": "ExpressionStatement",
															"src": "13592:49:1"
														},
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "balAfter",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1135,
																	"src": "13656:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13656:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1115,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1113,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "13675:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13675:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13656:30:1"
														},
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "diff",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1135,
																	"src": "13701:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13701:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1122,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1120,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "13729:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1118,
																		"name": "balAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "13716:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2348,
																	"src": "13716:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13716:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13701:32:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1123,
																	"name": "diff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "13752:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "balWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "13759:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13752:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1134,
															"nodeType": "IfStatement",
															"src": "13748:88:1",
															"trueBody": {
																"id": 1133,
																"nodeType": "Block",
																"src": "13772:64:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1126,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "13791:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1129,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "13815:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1127,
																						"name": "bal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1090,
																						"src": "13807:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1128,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2326,
																					"src": "13807:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13807:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13791:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1132,
																		"nodeType": "ExpressionStatement",
																		"src": "13791:29:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1137,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "13863:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13863:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1142,
																"name": "withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "13908:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1139,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "13881:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastDepositedTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "13881:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "13881:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13881:45:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13863:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1170,
												"nodeType": "IfStatement",
												"src": "13859:297:1",
												"trueBody": {
													"id": 1169,
													"nodeType": "Block",
													"src": "13928:228:1",
													"statements": [
														{
															"assignments": [
																1146
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1146,
																	"mutability": "mutable",
																	"name": "currentWithdrawFee",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1169,
																	"src": "13943:26:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1145,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13943:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1154,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "3130303030",
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14007:5:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1149,
																				"name": "withdrawFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 164,
																				"src": "13990:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1147,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "13972:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2382,
																			"src": "13972:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13972:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2404,
																	"src": "13972:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13972:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13943:70:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1158,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "14047:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1159,
																		"name": "currentWithdrawFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "14057:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1155,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "14028:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "14028:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14028:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "14028:48:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1162,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "14091:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1165,
																			"name": "currentWithdrawFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "14125:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1163,
																			"name": "currentAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "14107:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2348,
																		"src": "14107:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14107:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14091:53:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1168,
															"nodeType": "ExpressionStatement",
															"src": "14091:53:1"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1171,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "14172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "14172:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14186:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14172:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1196,
													"nodeType": "Block",
													"src": "14295:56:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1190,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "14310:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "cakeAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "14310:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14338:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14310:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1195,
															"nodeType": "ExpressionStatement",
															"src": "14310:29:1"
														}
													]
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "14168:183:1",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "14189:100:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1175,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "14204:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "cakeAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "14204:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1185,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 137,
																			"src": "14265:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1181,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "14248:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14248:11:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1178,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1039,
																						"src": "14232:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																							"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 96,
																					"src": "14232:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2382,
																				"src": "14232:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14232:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2404,
																		"src": "14232:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14232:45:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14204:73:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1188,
															"nodeType": "ExpressionStatement",
															"src": "14204:73:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1198,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "14363:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct LandbaseLockPool.UserInfo storage pointer"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "14363:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1201,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "14389:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14389:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14363:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "14363:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14436:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14436:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1210,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "14448:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "14417:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "14417:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14417:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "14417:45:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14489:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14489:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1216,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "14501:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1217,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "14516:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "14480:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14480:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "EmitStatement",
												"src": "14475:49:1"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "12747:281:1",
										"text": " @notice original Withdraws implementation from funds, the logic same as Cake Vault withdraw\n @notice this function visibility change to internal, call only be called by 'emergencyWithdrawAll' function\n @param _shares: Number of shares to withdraw"
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawV1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1221,
												"src": "13054:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13053:17:1"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13080:0:1"
									},
									"scope": 1769,
									"src": "13034:1498:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "14719:558:1",
										"statements": [
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "beforeBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1299,
														"src": "14730:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1231,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "14750:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14750:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14730:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14809:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1235,
																	"name": "masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "14784:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1234,
																"name": "IMasterChef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "14772:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																	"typeString": "type(contract IMasterChef)"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14772:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2144",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "leaveStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2118,
														"src": "14772:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14772:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "14772:39:1"
											},
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1299,
														"src": "14822:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1246,
															"name": "beforeBal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "14852:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1243,
																"name": "available",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "14836:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14836:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2348,
														"src": "14836:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14836:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14822:40:1"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "currentPerformanceFee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1299,
														"src": "14875:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14935:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "performanceFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "14915:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1251,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "14907:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2382,
																"src": "14907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14907:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "14907:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14907:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14875:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1262,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "14971:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1263,
															"name": "currentPerformanceFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "14981:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1259,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "14952:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "14952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14952:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "14952:51:1"
											},
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "currentCallFee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1299,
														"src": "15016:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15016:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15062:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1270,
																	"name": "callFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "15049:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1268,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "15041:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2382,
																"src": "15041:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15041:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "15041:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15041:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15016:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15098:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15098:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1281,
															"name": "currentCallFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "15110:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1276,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "15079:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "15079:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15079:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "15079:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1284,
														"name": "_earn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "15138:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15138:7:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "15138:7:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1287,
														"name": "lastHarvestedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "15158:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1288,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "15178:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15178:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15158:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "15158:35:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15219:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15219:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1295,
															"name": "currentPerformanceFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "15231:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1296,
															"name": "currentCallFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "15254:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1292,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "15211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15211:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "15206:63:1"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "14540:119:1",
										"text": " @notice Reinvests CAKE tokens into MasterChef\n @dev Only possible when contract not paused."
									},
									"functionSelector": "4641257d",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1225,
											"modifierName": {
												"argumentTypes": null,
												"id": 1224,
												"name": "notContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 340,
												"src": "14693:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14693:11:1"
										},
										{
											"arguments": null,
											"id": 1227,
											"modifierName": {
												"argumentTypes": null,
												"id": 1226,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2866,
												"src": "14705:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14705:13:1"
										}
									],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14681:2:1"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14719:0:1"
									},
									"scope": 1769,
									"src": "14665:612:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "15441:99:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "15460:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15478:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15470:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1310,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15470:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15470:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15460:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15482:24:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15452:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15452:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "15452:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1318,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "15518:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1319,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "15526:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15518:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "15518:14:1"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "15285:97:1",
										"text": " @notice Sets admin address\n @dev Only callable by the contract owner."
									},
									"functionSelector": "704b6c02",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1306,
											"modifierName": {
												"argumentTypes": null,
												"id": 1305,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2041,
												"src": "15431:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15431:9:1"
										}
									],
									"name": "setAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1323,
												"src": "15406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15405:16:1"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15441:0:1"
									},
									"scope": 1769,
									"src": "15388:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "15713:108:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1332,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "15732:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15753:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15745:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15745:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15745:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15732:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15757:24:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15724:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15724:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "15724:58:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1341,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "15793:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1342,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "15804:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15793:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "15793:20:1"
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "15548:100:1",
										"text": " @notice Sets treasury address\n @dev Only callable by the contract owner."
									},
									"functionSelector": "f0f44260",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1329,
											"modifierName": {
												"argumentTypes": null,
												"id": 1328,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2041,
												"src": "15703:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15703:9:1"
										}
									],
									"name": "setTreasury",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1346,
												"src": "15675:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15674:19:1"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15713:0:1"
									},
									"scope": 1769,
									"src": "15654:167:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "16005:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1355,
																"name": "_performanceFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "16024:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1356,
																"name": "MAX_PERFORMANCE_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "16043:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16024:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16064:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															},
															"value": "performanceFee cannot be more than MAX_PERFORMANCE_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16016:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16016:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "16016:105:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1361,
														"name": "performanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "16132:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1362,
														"name": "_performanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "16149:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16132:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "16132:32:1"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "15829:99:1",
										"text": " @notice Sets performance fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "70897b23",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1352,
											"modifierName": {
												"argumentTypes": null,
												"id": 1351,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "15995:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15995:9:1"
										}
									],
									"name": "setPerformanceFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_performanceFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1366,
												"src": "15961:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15961:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15960:25:1"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16005:0:1"
									},
									"scope": 1769,
									"src": "15934:238:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "16335:125:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1375,
																"name": "_callFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "16354:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1376,
																"name": "MAX_CALL_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "16366:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16354:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f43414c4c5f464545",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16380:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f4afedb5cb4c613eb925791e30905bbaa67a23ed369aa450ccf1eb0e08c07ff",
																"typeString": "literal_string \"callFee cannot be more than MAX_CALL_FEE\""
															},
															"value": "callFee cannot be more than MAX_CALL_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f4afedb5cb4c613eb925791e30905bbaa67a23ed369aa450ccf1eb0e08c07ff",
																"typeString": "literal_string \"callFee cannot be more than MAX_CALL_FEE\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16346:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "16346:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1381,
														"name": "callFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "16434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1382,
														"name": "_callFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "16444:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16434:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "16434:18:1"
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "16180:92:1",
										"text": " @notice Sets call fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "26465826",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1372,
											"modifierName": {
												"argumentTypes": null,
												"id": 1371,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "16325:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16325:9:1"
										}
									],
									"name": "setCallFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_callFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "16298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16297:18:1"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16335:0:1"
									},
									"scope": 1769,
									"src": "16278:182:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "16635:149:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1395,
																"name": "_withdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "16654:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1396,
																"name": "MAX_WITHDRAW_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "16670:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16654:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16688:50:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															},
															"value": "withdrawFee cannot be more than MAX_WITHDRAW_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															}
														],
														"id": 1394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16646:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16646:93:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "16646:93:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1401,
														"name": "withdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "16750:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1402,
														"name": "_withdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "16764:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16750:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "16750:26:1"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "16468:96:1",
										"text": " @notice Sets withdraw fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "b6ac642a",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1392,
											"modifierName": {
												"argumentTypes": null,
												"id": 1391,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "16625:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16625:9:1"
										}
									],
									"name": "setWithdrawFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_withdrawFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1406,
												"src": "16594:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16593:22:1"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16635:0:1"
									},
									"scope": 1769,
									"src": "16570:214:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "16978:224:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1415,
																"name": "_withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "17011:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1416,
																"name": "MAX_WITHDRAW_FEE_PERIOD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "17033:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17011:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f44",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17071:63:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
																"typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
															},
															"value": "withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
																"typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16989:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16989:156:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "16989:156:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1421,
														"name": "withdrawFeePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "17156:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1422,
														"name": "_withdrawFeePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "17176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17156:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "17156:38:1"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "16792:103:1",
										"text": " @notice Sets withdraw fee period\n @dev Only callable by the contract admin."
									},
									"functionSelector": "1efac1b8",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1412,
											"modifierName": {
												"argumentTypes": null,
												"id": 1411,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "16968:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16968:9:1"
										}
									],
									"name": "setWithdrawFeePeriod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_withdrawFeePeriod",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1426,
												"src": "16931:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16931:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16930:28:1"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16978:0:1"
									},
									"scope": 1769,
									"src": "16901:301:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "17533:336:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1437,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "17552:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17552:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1439,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "17567:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17552:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6f6c2063757272656e7420626c6f636b206d757374206265206c6f776572207468616e206e6577207374617274426c6f636b",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17580:54:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9c3e461d0a427a4e9ec61c7672ef5d0872b7afe41af330c564d77d66b5b728b",
																"typeString": "literal_string \"Pool current block must be lower than new startBlock\""
															},
															"value": "Pool current block must be lower than new startBlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9c3e461d0a427a4e9ec61c7672ef5d0872b7afe41af330c564d77d66b5b728b",
																"typeString": "literal_string \"Pool current block must be lower than new startBlock\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17544:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "17544:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1445,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "17654:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1446,
																"name": "_endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "17668:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17654:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17679:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															},
															"value": "New startBlock must be lower than new endBlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17646:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17646:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "17646:82:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1451,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "17741:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1452,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "17754:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17741:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "17741:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1455,
														"name": "endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "17776:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1456,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "17787:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17776:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "17776:20:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1460,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "17838:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1461,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "17851:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1459,
														"name": "UpdateStartAndEndBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "17814:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17814:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "EmitStatement",
												"src": "17809:52:1"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "17210:225:1",
										"text": " @notice It allows the admin to update start and end blocks\n @dev This function is only callable by owner.\n @param _startBlock: the new start block\n @param _endBlock: the new end block"
									},
									"functionSelector": "9513997f",
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1434,
											"modifierName": {
												"argumentTypes": null,
												"id": 1433,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "17523:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17523:9:1"
										}
									],
									"name": "updateStartAndEndBlocks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "17474:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "17495:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17473:40:1"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17533:0:1"
									},
									"scope": 1769,
									"src": "17441:428:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "18111:260:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1474,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "18130:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18130:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1476,
																"name": "_endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "18145:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18130:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e657720656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18156:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d2e0ee418a4fa9636bc860d0410414c2f3bb829ed67581046f589a0e038df7e",
																"typeString": "literal_string \"new end block can't behind current block\""
															},
															"value": "new end block can't behind current block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d2e0ee418a4fa9636bc860d0410414c2f3bb829ed67581046f589a0e038df7e",
																"typeString": "literal_string \"new end block can't behind current block\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18122:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18122:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "18122:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1482,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "18218:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18218:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1484,
																"name": "endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "18233:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18218:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6c6420656e6420626c6f636b2063616e277420626568696e642063757272656e7420626c6f636b",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18244:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e10f87a14096ac956401d5f800040ab40e68d1d271dcb4693c1df00be0147b71",
																"typeString": "literal_string \"old end block can't behind current block\""
															},
															"value": "old end block can't behind current block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e10f87a14096ac956401d5f800040ab40e68d1d271dcb4693c1df00be0147b71",
																"typeString": "literal_string \"old end block can't behind current block\""
															}
														],
														"id": 1481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18210:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18210:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "18210:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1489,
														"name": "endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "18300:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1490,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "18311:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18300:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "18300:20:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1494,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "18353:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1493,
														"name": "UpdateEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "18338:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18338:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "EmitStatement",
												"src": "18333:30:1"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "17877:166:1",
										"text": " @notice It allows the admin to update end block\n @dev This function is only callable by owner.\n @param _endBlock: the new end block"
									},
									"functionSelector": "006f0231",
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1471,
											"modifierName": {
												"argumentTypes": null,
												"id": 1470,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "18101:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18101:9:1"
										}
									],
									"name": "updateEndBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "18073:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18072:19:1"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18111:0:1"
									},
									"scope": 1769,
									"src": "18049:322:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "18592:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18645:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1505,
																	"name": "masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "18615:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1504,
																"name": "IMasterChef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "18603:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																	"typeString": "type(contract IMasterChef)"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18603:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2144",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "emergencyWithdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2143,
														"src": "18603:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18603:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "18603:44:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18661:9:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1511,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "18662:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18662:8:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "18658:48:1",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "18671:35:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1514,
																	"name": "_pause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2893,
																	"src": "18686:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18686:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "18686:8:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "18379:159:1",
										"text": " @notice Withdraws from MasterChef to Vault without caring about rewards.\n @dev EMERGENCY ONLY. Only callable by the contract admin."
									},
									"functionSelector": "db2e21bc",
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1502,
											"modifierName": {
												"argumentTypes": null,
												"id": 1501,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "18582:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18582:9:1"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18570:2:1"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18592:0:1"
									},
									"scope": 1769,
									"src": "18544:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "18870:312:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1529,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "18889:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1532,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "18907:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18899:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18899:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18899:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18889:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18915:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
																"typeString": "literal_string \"Token cannot be same as deposit token\""
															},
															"value": "Token cannot be same as deposit token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
																"typeString": "literal_string \"Token cannot be same as deposit token\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18881:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18881:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "18881:74:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1539,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "18974:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1542,
																		"name": "receiptToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "18992:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18984:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1540,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18984:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18984:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18974:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e2063616e6e6f742062652073616d65206173207265636569707420746f6b656e",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19007:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56f1cb28260a5fe006a543516f28c8e9fca2a3d42753a5ece1397133ea778f1c",
																"typeString": "literal_string \"Token cannot be same as receipt token\""
															},
															"value": "Token cannot be same as receipt token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56f1cb28260a5fe006a543516f28c8e9fca2a3d42753a5ece1397133ea778f1c",
																"typeString": "literal_string \"Token cannot be same as receipt token\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18966:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18966:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "18966:81:1"
											},
											{
												"assignments": [
													1549
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1569,
														"src": "19060:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1556,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "19110:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19102:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19102:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19102:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1551,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "19084:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1550,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "19077:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19077:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "19077:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19077:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19060:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1564,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "19155:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "19155:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "19167:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1561,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "19134:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1560,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "19127:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19127:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "19127:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19127:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "19127:47:1"
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "18721:78:1",
										"text": " @notice Withdraw unexpected tokens sent to the Cake Vault"
									},
									"functionSelector": "def68a9c",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1526,
											"modifierName": {
												"argumentTypes": null,
												"id": 1525,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "18860:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18860:9:1"
										}
									],
									"name": "inCaseTokensGetStuck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1570,
												"src": "18835:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18834:16:1"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18870:0:1"
									},
									"scope": 1769,
									"src": "18805:377:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "19350:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1578,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "19361:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19361:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "19361:8:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1581,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "19385:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19385:7:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "19380:12:1"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "19190:104:1",
										"text": " @notice Triggers stopped state\n @dev Only possible when contract not paused."
									},
									"functionSelector": "8456cb59",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1574,
											"modifierName": {
												"argumentTypes": null,
												"id": 1573,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "19326:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19326:9:1"
										},
										{
											"arguments": null,
											"id": 1576,
											"modifierName": {
												"argumentTypes": null,
												"id": 1575,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2866,
												"src": "19336:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19336:13:1"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19314:2:1"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19350:0:1"
									},
									"scope": 1769,
									"src": "19300:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "19567:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1593,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2909,
														"src": "19578:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19578:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "19578:10:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1596,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "19604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19604:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "EmitStatement",
												"src": "19599:14:1"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "19408:104:1",
										"text": " @notice Returns to normal state\n @dev Only possible when contract is paused."
									},
									"functionSelector": "3f4ba83a",
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1589,
											"modifierName": {
												"argumentTypes": null,
												"id": 1588,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 317,
												"src": "19546:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19546:9:1"
										},
										{
											"arguments": null,
											"id": 1591,
											"modifierName": {
												"argumentTypes": null,
												"id": 1590,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2877,
												"src": "19556:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19556:10:1"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19534:2:1"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19567:0:1"
									},
									"scope": 1769,
									"src": "19518:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "19841:189:1",
										"statements": [
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1631,
														"src": "19852:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19905:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1615,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "19916:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19908:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1613,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19908:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19908:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1609,
																	"name": "masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "19881:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1608,
																"name": "IMasterChef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "19869:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																	"typeString": "type(contract IMasterChef)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19869:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2144",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pendingCake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2127,
														"src": "19869:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19869:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19852:70:1"
											},
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "currentCallFee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1631,
														"src": "19933:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19982:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1623,
																	"name": "callFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "19969:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1621,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "19958:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2382,
																"src": "19958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19958:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "19958:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19958:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19933:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1629,
													"name": "currentCallFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1620,
													"src": "20008:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1605,
												"id": 1630,
												"nodeType": "Return",
												"src": "20001:21:1"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "19629:135:1",
										"text": " @notice Calculates the expected harvest reward from third party\n @return Expected reward to collect in CAKE"
									},
									"functionSelector": "9d72596b",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateHarvestCakeRewards",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19806:2:1"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1632,
												"src": "19832:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19831:9:1"
									},
									"scope": 1769,
									"src": "19770:260:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "20257:158:1",
										"statements": [
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1661,
														"src": "20268:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20268:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1650,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20321:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1647,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "20332:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20324:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20324:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20324:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1641,
																	"name": "masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "20297:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1640,
																"name": "IMasterChef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "20285:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																	"typeString": "type(contract IMasterChef)"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20285:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2144",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pendingCake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2127,
														"src": "20285:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20285:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20268:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1651,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "20349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1654,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "20369:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20369:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1652,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "20358:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "20358:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20358:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20349:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "20349:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1659,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1639,
													"src": "20401:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1660,
												"nodeType": "Return",
												"src": "20394:13:1"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "20038:137:1",
										"text": " @notice Calculates the total pending rewards that can be restaked\n @return Returns total pending cake rewards"
									},
									"functionSelector": "58ebceb6",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTotalPendingCakeRewards",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20222:2:1"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "20248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20247:9:1"
									},
									"scope": 1769,
									"src": "20181:234:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "20552:90:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1668,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "20570:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20585:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20570:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1678,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "20622:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "31653138",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20612:4:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1672,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "20596:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20596:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2382,
																	"src": "20596:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20596:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2404,
															"src": "20596:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20596:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "20570:64:1",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "31653138",
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20589:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1681,
												"nodeType": "Return",
												"src": "20563:71:1"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "20423:59:1",
										"text": " @notice Calculates the price per share"
									},
									"functionSelector": "77c7b8fc",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20517:2:1"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "20543:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20542:9:1"
									},
									"scope": 1769,
									"src": "20488:154:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "20852:56:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1693,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "20894:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20886:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1691,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20886:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20886:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1689,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "20870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "20870:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20870:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1696,
												"nodeType": "Return",
												"src": "20863:37:1"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "20650:145:1",
										"text": " @notice Custom logic for how much the vault allows to be borrowed\n @dev The contract puts 100% of the tokens to work."
									},
									"functionSelector": "48a0d754",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20819:2:1"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1698,
												"src": "20843:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20843:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20842:9:1"
									},
									"scope": 1769,
									"src": "20801:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "21116:150:1",
										"statements": [
											{
												"assignments": [
													1705,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1728,
														"src": "21128:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21128:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1716,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21181:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1713,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "21192:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																		"typeString": "contract LandbaseLockPool"
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21184:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1711,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21184:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21184:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1707,
																	"name": "masterchef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "21160:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2144",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1706,
																"name": "IMasterChef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "21148:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																	"typeString": "type(contract IMasterChef)"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21148:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2144",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "userInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2138,
														"src": "21148:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256,uint256)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21148:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21127:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1725,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "21251:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1721,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "21240:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																				"typeString": "contract LandbaseLockPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LandbaseLockPool_$1769",
																				"typeString": "contract LandbaseLockPool"
																			}
																		],
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21232:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1719,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21232:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21232:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1717,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "21216:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "21216:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21216:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2326,
														"src": "21216:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21216:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1727,
												"nodeType": "Return",
												"src": "21209:49:1"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "20916:143:1",
										"text": " @notice Calculates the total underlying tokens\n @dev It includes tokens held by the contract and held in MasterChef"
									},
									"functionSelector": "722713f7",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21083:2:1"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1729,
												"src": "21107:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21106:9:1"
									},
									"scope": 1769,
									"src": "21065:201:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "21390:135:1",
										"statements": [
											{
												"assignments": [
													1734
												],
												"declarations": [
													{
														"constant": false,
														"id": 1734,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1750,
														"src": "21401:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21401:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1735,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "21415:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21415:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21401:25:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1738,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "21441:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21447:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1749,
												"nodeType": "IfStatement",
												"src": "21437:81:1",
												"trueBody": {
													"id": 1748,
													"nodeType": "Block",
													"src": "21450:68:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1745,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "21502:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1742,
																				"name": "masterchef",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "21477:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IMasterChef_$2144",
																					"typeString": "contract IMasterChef"
																				}
																			],
																			"id": 1741,
																			"name": "IMasterChef",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "21465:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IMasterChef_$2144_$",
																				"typeString": "type(contract IMasterChef)"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21465:23:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMasterChef_$2144",
																			"typeString": "contract IMasterChef"
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "enterStaking",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2113,
																	"src": "21465:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21465:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1747,
															"nodeType": "ExpressionStatement",
															"src": "21465:41:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "21274:84:1",
										"text": " @notice Deposits tokens into MasterChef to earn staking rewards"
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_earn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21378:2:1"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21390:0:1"
									},
									"scope": 1769,
									"src": "21364:161:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "21718:127:1",
										"statements": [
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1767,
														"src": "21729:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21729:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1761,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "21729:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21761:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21776:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "21796:4:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "21784:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21784:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "21776:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "21796:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1760,
														"isOffset": false,
														"isSlot": false,
														"src": "21776:4:1",
														"valueSize": 1
													}
												],
												"id": 1762,
												"nodeType": "InlineAssembly",
												"src": "21752:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1763,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "21829:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21836:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21829:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1766,
												"nodeType": "Return",
												"src": "21822:15:1"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "21533:115:1",
										"text": " @notice Checks if address is a contract\n @dev It prevents contract from being targetted"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "21675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21674:14:1"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "21712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21711:6:1"
									},
									"scope": 1769,
									"src": "21654:191:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1770,
							"src": "229:21619:1"
						}
					],
					"src": "33:21815:1"
				},
				"id": 1
			},
			"farms-pools/SafeERC20.sol": {
				"ast": {
					"absolutePath": "farms-pools/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1982
						]
					},
					"id": 1983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1771,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:2"
						},
						{
							"absolutePath": "farms-pools/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1772,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 78,
							"src": "70:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 1773,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2500,
							"src": "94:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farms-pools/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 1774,
							"nodeType": "ImportDirective",
							"scope": 1983,
							"sourceUnit": 2796,
							"src": "130:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "163:465:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1982,
							"linearizedBaseContracts": [
								1982
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1778,
									"libraryName": {
										"contractScope": null,
										"id": 1776,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2499,
										"src": "661:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2499",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "655:27:2",
									"typeName": {
										"id": 1777,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1781,
									"libraryName": {
										"contractScope": null,
										"id": 1779,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2795,
										"src": "694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$2795",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "688:26:2",
									"typeName": {
										"id": 1780,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "794:105:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1791,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "825:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1794,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "855:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "855:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "855:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1797,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "880:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "884:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1792,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "832:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "832:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "832:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1790,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "805:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "805:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "805:86:2"
											}
										]
									},
									"documentation": null,
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1803,
												"src": "744:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1782,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "744:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1803,
												"src": "758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1803,
												"src": "770:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "743:41:2"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:0:2"
									},
									"scope": 1982,
									"src": "722:177:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "997:115:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1815,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "1028:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1818,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "1058:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1058:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1058:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1821,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "1087:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1822,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "1093:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "1097:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1816,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1035:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1035:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1035:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1814,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "1008:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1008:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "1008:96:2"
											}
										]
									},
									"documentation": null,
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "933:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1804,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "933:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "961:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1828,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:55:2"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:0:2"
									},
									"scope": 1982,
									"src": "907:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "1457:546:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1839,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1835,
																			"src": "1751:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1760:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1751:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1750:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1847,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1791:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1982",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1982",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1846,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1783:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1845,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1783:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1783:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1849,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1833,
																					"src": "1798:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1843,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1831,
																					"src": "1767:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1767:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1767:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1810:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1767:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1853,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1766:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1750:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1827:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1742:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:152:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "1742:152:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1859,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "1925:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1862,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "1955:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1955:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1955:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1865,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "1979:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1866,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "1988:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1860,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1932:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1932:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1932:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1858,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "1905:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "1905:90:2"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "1120:255:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1871,
												"src": "1402:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1830,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1402:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1871,
												"src": "1416:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1871,
												"src": "1433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1401:46:2"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:2"
									},
									"scope": 1982,
									"src": "1381:622:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "2097:200:2",
										"statements": [
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1906,
														"src": "2108:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2108:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1893,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1891,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "2175:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1886,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2155:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1982",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1982",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2147:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1884,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2147:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2147:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1888,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "2162:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1882,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "2131:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2131:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2131:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2326,
														"src": "2131:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1895,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "2212:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1898,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "2242:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2242:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2242:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1901,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "2266:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1902,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "2275:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1896,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2219:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2219:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2219:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1894,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "2192:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "2192:97:2"
											}
										]
									},
									"documentation": null,
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1907,
												"src": "2042:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1872,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2042:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1907,
												"src": "2056:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1907,
												"src": "2073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2041:46:2"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:0:2"
									},
									"scope": 1982,
									"src": "2011:286:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "2391:245:2",
										"statements": [
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1943,
														"src": "2402:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2402:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1930,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1927,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "2469:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2476:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1922,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2449:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1982",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1982",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2441:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1920,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2441:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2441:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1924,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "2456:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1918,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "2425:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2425:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2425:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2450,
														"src": "2425:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2425:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2402:118:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1932,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "2551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1935,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "2581:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2581:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2581:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1938,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "2605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1939,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "2614:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1933,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2558:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2558:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1931,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "2531:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "2531:97:2"
											}
										]
									},
									"documentation": null,
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1944,
												"src": "2336:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1908,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2336:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1944,
												"src": "2350:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1944,
												"src": "2367:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2335:46:2"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:2"
									},
									"scope": 1982,
									"src": "2305:331:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "3097:691:2",
										"statements": [
											{
												"assignments": [
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1980,
														"src": "3451:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1952,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3451:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1959,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "3505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3511:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1956,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "3485:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3477:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3477:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3477:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2590,
														"src": "3477:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3477:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3451:95:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "3561:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3561:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3581:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3561:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1979,
												"nodeType": "IfStatement",
												"src": "3557:224:2",
												"trueBody": {
													"id": 1978,
													"nodeType": "Block",
													"src": "3584:197:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1970,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "3703:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3716:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1971,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3716:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1973,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3715:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1968,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3692:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3692:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3692:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3724:44:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1967,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3684:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3684:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1977,
															"nodeType": "ExpressionStatement",
															"src": "3684:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "2644:377:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "3056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1946,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3056:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "3070:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3070:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3055:33:2"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3097:0:2"
									},
									"scope": 1982,
									"src": "3027:761:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1983,
							"src": "630:3161:2"
						}
					],
					"src": "35:3756:2"
				},
				"id": 2
			},
			"farms-pools/access/Ownable.sol": {
				"ast": {
					"absolutePath": "farms-pools/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							2092
						]
					},
					"id": 2093,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1984,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:3"
						},
						{
							"absolutePath": "farms-pools/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1985,
							"nodeType": "ImportDirective",
							"scope": 2093,
							"sourceUnit": 2819,
							"src": "70:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1987,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2818,
										"src": "638:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$2818",
											"typeString": "contract Context"
										}
									},
									"id": 1988,
									"nodeType": "InheritanceSpecifier",
									"src": "638:7:3"
								}
							],
							"contractDependencies": [
								2818
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1986,
								"nodeType": "StructuredDocumentation",
								"src": "102:505:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2092,
							"linearizedBaseContracts": [
								2092,
								2818
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1990,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2092,
									"src": "653:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1989,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "653:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1996,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1996,
												"src": "711:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1996,
												"src": "742:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "710:57:3"
									},
									"src": "684:84:3"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "899:139:3",
										"statements": [
											{
												"assignments": [
													2001
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2017,
														"src": "910:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2000,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "910:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2004,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2002,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "930:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "930:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "910:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2005,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "953:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2006,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "962:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "953:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "953:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1016:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1008:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1008:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1008:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2014,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "1020:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2009,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "987:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "EmitStatement",
												"src": "982:48:3"
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "776:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2018,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:3"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:3"
									},
									"scope": 2092,
									"src": "875:163:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "1174:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2024,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1990,
													"src": "1192:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2025,
												"nodeType": "Return",
												"src": "1185:13:3"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "1046:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:3"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2027,
												"src": "1165:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1164:9:3"
									},
									"scope": 2092,
									"src": "1119:87:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "1320:99:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2031,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "1339:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1339:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2033,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2806,
																	"src": "1350:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1350:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1339:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1364:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1331:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "1331:68:3"
											},
											{
												"id": 2039,
												"nodeType": "PlaceholderStatement",
												"src": "1410:1:3"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "1214:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2041,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:2:3"
									},
									"src": "1299:120:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "1824:94:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2048,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "1861:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2047,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "1840:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "EmitStatement",
												"src": "1835:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2055,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "1891:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1908:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2056,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1900:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1900:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1891:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "1891:19:3"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "1427:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2045,
											"modifierName": {
												"argumentTypes": null,
												"id": 2044,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2041,
												"src": "1814:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1814:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:3"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1824:0:3"
									},
									"scope": 2092,
									"src": "1770:148:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "2143:174:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2072,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "2162:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2073,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2162:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2154:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2082,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "2264:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2083,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "2272:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2081,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "2243:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "EmitStatement",
												"src": "2238:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2086,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "2292:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2087,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "2301:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2292:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "2292:17:3"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "1926:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2069,
											"modifierName": {
												"argumentTypes": null,
												"id": 2068,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2041,
												"src": "2133:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2133:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2091,
												"src": "2100:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2099:18:3"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:3"
									},
									"scope": 2092,
									"src": "2073:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2093,
							"src": "609:1711:3"
						}
					],
					"src": "35:2285:3"
				},
				"id": 3
			},
			"farms-pools/interfaces/IMasterChef.sol": {
				"ast": {
					"absolutePath": "farms-pools/interfaces/IMasterChef.sol",
					"exportedSymbols": {
						"IMasterChef": [
							2144
						]
					},
					"id": 2145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2094,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2144,
							"linearizedBaseContracts": [
								2144
							],
							"name": "IMasterChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 2101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2101,
												"src": "106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2101,
												"src": "120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "105:31:4"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "145:0:4"
									},
									"scope": 2144,
									"src": "89:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 2108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2108,
												"src": "172:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2108,
												"src": "186:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "171:31:4"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:4"
									},
									"scope": 2144,
									"src": "154:58:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "41441d3b",
									"id": 2113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2113,
												"src": "242:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:17:4"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:4"
									},
									"scope": 2144,
									"src": "220:48:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1058d281",
									"id": 2118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "298:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "297:17:4"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:0:4"
									},
									"scope": 2144,
									"src": "276:48:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1175a1dd",
									"id": 2127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2127,
												"src": "353:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2127,
												"src": "367:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:29:4"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2127,
												"src": "405:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "404:9:4"
									},
									"scope": 2144,
									"src": "332:82:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "93f1a40b",
									"id": 2138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userInfo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "454:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "439:29:4"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "492:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "501:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:18:4"
									},
									"scope": 2144,
									"src": "422:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 2143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2143,
												"src": "545:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "544:14:4"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:4"
									},
									"scope": 2144,
									"src": "518:50:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2145,
							"src": "60:511:4"
						}
					],
					"src": "33:538:4"
				},
				"id": 4
			},
			"farms-pools/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "farms-pools/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2499
						]
					},
					"id": 2500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2146,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2147,
								"nodeType": "StructuredDocumentation",
								"src": "70:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2499,
							"linearizedBaseContracts": [
								2499
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "888:102:5",
										"statements": [
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2177,
														"src": "899:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "899:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2164,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2161,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2162,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "915:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "911:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "899:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2165,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2160,
														"src": "931:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2166,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "935:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2172,
												"nodeType": "IfStatement",
												"src": "927:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "946:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "953:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2158,
													"id": 2171,
													"nodeType": "Return",
													"src": "938:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "974:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 2174,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "980:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2175,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "973:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2158,
												"id": 2176,
												"nodeType": "Return",
												"src": "966:16:5"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "671:135:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "828:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "839:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:22:5"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "873:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "873:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "879:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "872:15:5"
									},
									"scope": 2499,
									"src": "812:178:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "1219:78:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "1234:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2191,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "1238:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1234:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2197,
												"nodeType": "IfStatement",
												"src": "1230:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1256:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1248:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2189,
													"id": 2196,
													"nodeType": "Return",
													"src": "1241:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1277:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2199,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "1283:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2200,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "1287:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1283:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2202,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1276:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2203,
												"nodeType": "Return",
												"src": "1269:20:5"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "998:139:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "1159:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "1170:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1158:22:5"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "1204:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1204:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2205,
												"src": "1210:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1203:15:5"
									},
									"scope": 2499,
									"src": "1143:154:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "1528:367:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2217,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "1764:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1769:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1764:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2224,
												"nodeType": "IfStatement",
												"src": "1760:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1780:4:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1786:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2222,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1779:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2216,
													"id": 2223,
													"nodeType": "Return",
													"src": "1772:16:5"
												}
											},
											{
												"assignments": [
													2226
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2245,
														"src": "1799:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1799:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2230,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "1811:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "1815:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1811:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1799:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2231,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "1831:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2232,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "1835:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2234,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "1840:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1831:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "1827:33:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1851:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1858:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2238,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1850:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2216,
													"id": 2239,
													"nodeType": "Return",
													"src": "1843:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1879:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 2242,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "1885:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2243,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1878:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2216,
												"id": 2244,
												"nodeType": "Return",
												"src": "1871:16:5"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "1305:141:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2246,
												"src": "1468:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2246,
												"src": "1479:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1467:22:5"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2246,
												"src": "1513:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1513:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2246,
												"src": "1519:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:15:5"
									},
									"scope": 2499,
									"src": "1452:443:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "2127:79:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2258,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "2142:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2147:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2142:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "2138:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2158:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2263,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2157:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2257,
													"id": 2264,
													"nodeType": "Return",
													"src": "2150:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2267,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "2192:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2268,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "2196:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2192:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2270,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2185:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2271,
												"nodeType": "Return",
												"src": "2178:20:5"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "1903:142:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2273,
												"src": "2067:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2273,
												"src": "2078:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2066:22:5"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2273,
												"src": "2112:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2112:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2273,
												"src": "2118:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2111:15:5"
									},
									"scope": 2499,
									"src": "2051:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "2448:79:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2285,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "2463:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2468:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2463:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2292,
												"nodeType": "IfStatement",
												"src": "2459:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2479:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2486:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2290,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2478:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2284,
													"id": 2291,
													"nodeType": "Return",
													"src": "2471:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2507:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "2513:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "2517:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2513:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2297,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2506:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2298,
												"nodeType": "Return",
												"src": "2499:20:5"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "2214:152:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2300,
												"src": "2388:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2300,
												"src": "2399:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2387:22:5"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2300,
												"src": "2433:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2300,
												"src": "2439:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2432:15:5"
									},
									"scope": 2499,
									"src": "2372:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "2841:112:5",
										"statements": [
											{
												"assignments": [
													2311
												],
												"declarations": [
													{
														"constant": false,
														"id": 2311,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2325,
														"src": "2852:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2852:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2315,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "2864:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "2868:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2864:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2852:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2317,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "2888:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2318,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "2893:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2888:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2896:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2880:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "2880:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2323,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2311,
													"src": "2944:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2309,
												"id": 2324,
												"nodeType": "Return",
												"src": "2937:8:5"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "2535:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "2787:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "2798:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2786:22:5"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "2832:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2831:9:5"
									},
									"scope": 2499,
									"src": "2774:179:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "3303:91:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2337,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "3322:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2338,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2329,
																"src": "3327:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3322:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3330:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3314:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2342,
												"nodeType": "ExpressionStatement",
												"src": "3314:49:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2343,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "3381:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2344,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2331,
														"src": "3385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3381:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2335,
												"id": 2346,
												"nodeType": "Return",
												"src": "3374:12:5"
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "2961:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2348,
												"src": "3249:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2348,
												"src": "3260:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3248:22:5"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2348,
												"src": "3294:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3293:9:5"
									},
									"scope": 2499,
									"src": "3236:158:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "3720:153:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2358,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "3735:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3740:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2363,
												"nodeType": "IfStatement",
												"src": "3731:20:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3750:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2357,
													"id": 2362,
													"nodeType": "Return",
													"src": "3743:8:5"
												}
											},
											{
												"assignments": [
													2365
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2381,
														"src": "3762:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3762:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2369,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2366,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "3774:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2367,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "3778:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3774:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3762:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2371,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "3798:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2372,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "3802:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3798:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "3807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3798:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3810:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3790:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "3790:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2379,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2365,
													"src": "3864:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2380,
												"nodeType": "Return",
												"src": "3857:8:5"
											}
										]
									},
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "3402:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2382,
												"src": "3666:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2382,
												"src": "3677:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3665:22:5"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2382,
												"src": "3711:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3710:9:5"
									},
									"scope": 2499,
									"src": "3653:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "4418:86:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2393,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2387,
																"src": "4437:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4441:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4437:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4444:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4429:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4429:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "ExpressionStatement",
												"src": "4429:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2399,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "4491:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2400,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "4495:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4491:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2391,
												"id": 2402,
												"nodeType": "Return",
												"src": "4484:12:5"
											}
										]
									},
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "3881:464:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "4364:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "4375:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4363:22:5"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2404,
												"src": "4409:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4408:9:5"
									},
									"scope": 2499,
									"src": "4351:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "5038:84:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "5057:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5061:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5057:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5064:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5049:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5049:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "5049:42:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "5109:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2409,
														"src": "5113:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5109:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2424,
												"nodeType": "Return",
												"src": "5102:12:5"
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "4512:453:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "4984:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "4995:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4983:22:5"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2426,
												"src": "5029:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5028:9:5"
									},
									"scope": 2499,
									"src": "4971:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "5696:71:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2439,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "5715:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2440,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "5720:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5715:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "5723:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5707:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "5707:29:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2445,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2429,
														"src": "5754:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2446,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2431,
														"src": "5758:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5754:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2437,
												"id": 2448,
												"nodeType": "Return",
												"src": "5747:12:5"
											}
										]
									},
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "5130:465:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "5614:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "5625:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5625:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "5636:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5636:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5613:50:5"
									},
									"returnParameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "5687:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5686:9:5"
									},
									"scope": 2499,
									"src": "5601:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "6536:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2463,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "6555:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6559:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6555:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2466,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "6562:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6547:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6547:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "6547:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2469,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "6593:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2470,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "6597:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6593:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2461,
												"id": 2472,
												"nodeType": "Return",
												"src": "6586:12:5"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "5775:660:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2474,
												"src": "6454:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2474,
												"src": "6465:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2474,
												"src": "6476:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6476:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6453:50:5"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2474,
												"src": "6527:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6526:9:5"
									},
									"scope": 2499,
									"src": "6441:165:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "7364:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2487,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "7383:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7387:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "7390:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7375:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7375:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "7375:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2493,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "7421:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2494,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2479,
														"src": "7425:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7421:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2485,
												"id": 2496,
												"nodeType": "Return",
												"src": "7414:12:5"
											}
										]
									},
									"documentation": {
										"id": 2475,
										"nodeType": "StructuredDocumentation",
										"src": "6614:649:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2498,
												"src": "7282:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7282:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2498,
												"src": "7293:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2498,
												"src": "7304:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7281:50:5"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2498,
												"src": "7355:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7354:9:5"
									},
									"scope": 2499,
									"src": "7269:165:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2500,
							"src": "647:6790:5"
						}
					],
					"src": "35:7402:5"
				},
				"id": 5
			},
			"farms-pools/utils/Address.sol": {
				"ast": {
					"absolutePath": "farms-pools/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2795
						]
					},
					"id": 2796,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2501,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2502,
								"nodeType": "StructuredDocumentation",
								"src": "70:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2795,
							"linearizedBaseContracts": [
								2795
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "817:356:6",
										"statements": [
											{
												"assignments": [
													2511
												],
												"declarations": [
													{
														"constant": false,
														"id": 2511,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2518,
														"src": "1019:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1019:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2512,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1019:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1108:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1130:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1118:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1110:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2505,
														"isOffset": false,
														"isSlot": false,
														"src": "1130:7:6",
														"valueSize": 1
													},
													{
														"declaration": 2511,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:4:6",
														"valueSize": 1
													}
												],
												"id": 2513,
												"nodeType": "InlineAssembly",
												"src": "1099:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2514,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "1157:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1164:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1157:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2509,
												"id": 2517,
												"nodeType": "Return",
												"src": "1150:15:6"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "164:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "771:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:17:6"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "811:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "811:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "810:6:6"
									},
									"scope": 2795,
									"src": "751:422:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2552,
										"nodeType": "Block",
										"src": "2179:326:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2530,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2206:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2795",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2795",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2198:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2528,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2198:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2198:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2198:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2533,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "2223:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2198:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2231:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2190:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "2190:73:6"
											},
											{
												"assignments": [
													2539,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2552,
														"src": "2355:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2355:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 2546,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2405:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2540,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "2373:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2373:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "2396:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2373:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2354:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2548,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "2427:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:60:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2419:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2419:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2551,
												"nodeType": "ExpressionStatement",
												"src": "2419:78:6"
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "1181:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2553,
												"src": "2127:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2553,
												"src": "2154:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2126:43:6"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2179:0:6"
									},
									"scope": 2795,
									"src": "2108:397:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2569,
										"nodeType": "Block",
										"src": "3355:84:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "3384:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "3392:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3398:32:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2563,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2570,
															2590
														],
														"referencedDeclaration": 2590,
														"src": "3371:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3371:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2562,
												"id": 2568,
												"nodeType": "Return",
												"src": "3364:67:6"
											}
										]
									},
									"documentation": {
										"id": 2554,
										"nodeType": "StructuredDocumentation",
										"src": "2513:747:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2570,
												"src": "3288:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2570,
												"src": "3304:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3304:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3287:35:6"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2570,
												"src": "3341:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3340:14:6"
									},
									"scope": 2795,
									"src": "3266:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "3786:78:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2583,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "3826:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2584,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "3834:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3840:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2586,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "3843:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2582,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2610,
															2660
														],
														"referencedDeclaration": 2660,
														"src": "3804:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3804:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2581,
												"id": 2588,
												"nodeType": "Return",
												"src": "3797:59:6"
											}
										]
									},
									"documentation": {
										"id": 2571,
										"nodeType": "StructuredDocumentation",
										"src": "3447:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2590,
												"src": "3691:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2590,
												"src": "3707:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2590,
												"src": "3726:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3726:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3690:63:6"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2590,
												"src": "3772:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3772:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3771:14:6"
									},
									"scope": 2795,
									"src": "3669:195:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "4352:113:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2603,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "4392:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "4400:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2605,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2597,
															"src": "4406:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4413:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2602,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2610,
															2660
														],
														"referencedDeclaration": 2660,
														"src": "4370:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4370:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2601,
												"id": 2608,
												"nodeType": "Return",
												"src": "4363:94:6"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "3872:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2610,
												"src": "4270:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2610,
												"src": "4286:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4286:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2610,
												"src": "4305:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4305:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4269:50:6"
									},
									"returnParameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2610,
												"src": "4338:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4338:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4337:14:6"
									},
									"scope": 2795,
									"src": "4239:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "4862:389:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2627,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4889:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2795",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2795",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4881:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2625,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4881:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4881:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4881:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2617,
																"src": "4906:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4881:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4913:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "ExpressionStatement",
												"src": "4873:81:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2637,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "4984:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2636,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "4973:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4973:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4993:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4965:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "4965:60:6"
											},
											{
												"assignments": [
													2643,
													2645
												],
												"declarations": [
													{
														"constant": false,
														"id": 2643,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2659,
														"src": "5099:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2642,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5099:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2645,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2659,
														"src": "5113:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2644,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2652,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2650,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "5168:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2646,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2613,
																"src": "5140:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5140:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2617,
																"src": "5160:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5140:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5098:75:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2654,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "5209:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2655,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "5218:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2656,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "5230:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2653,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "5191:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5191:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2623,
												"id": 2658,
												"nodeType": "Return",
												"src": "5184:59:6"
											}
										]
									},
									"documentation": {
										"id": 2611,
										"nodeType": "StructuredDocumentation",
										"src": "4473:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2660,
												"src": "4752:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2660,
												"src": "4768:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2660,
												"src": "4787:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2660,
												"src": "4802:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4802:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4751:78:6"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2660,
												"src": "4848:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4847:14:6"
									},
									"scope": 2795,
									"src": "4721:530:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "5536:99:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2671,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "5573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2672,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "5581:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5587:39:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2670,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2677,
															2712
														],
														"referencedDeclaration": 2712,
														"src": "5554:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5554:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2669,
												"id": 2675,
												"nodeType": "Return",
												"src": "5547:80:6"
											}
										]
									},
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "5259:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2677,
												"src": "5464:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2677,
												"src": "5480:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5463:35:6"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2677,
												"src": "5522:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5521:14:6"
									},
									"scope": 2795,
									"src": "5436:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2711,
										"nodeType": "Block",
										"src": "5955:294:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2691,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "5985:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2690,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5974:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5974:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:38:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5966:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5966:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "5966:67:6"
											},
											{
												"assignments": [
													2697,
													2699
												],
												"declarations": [
													{
														"constant": false,
														"id": 2697,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2711,
														"src": "6107:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2696,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6107:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2699,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2711,
														"src": "6121:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6121:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2702,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "6166:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2700,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "6148:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6148:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6148:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6106:65:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2706,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "6207:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2707,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "6216:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2708,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "6228:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2705,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "6189:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6189:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2688,
												"id": 2710,
												"nodeType": "Return",
												"src": "6182:59:6"
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "5643:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2712,
												"src": "5855:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2712,
												"src": "5871:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5871:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2712,
												"src": "5890:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5890:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5854:63:6"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2712,
												"src": "5941:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5941:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5940:14:6"
									},
									"scope": 2795,
									"src": "5827:422:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "6533:103:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2723,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2715,
															"src": "6572:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2724,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "6580:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6586:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2722,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2729,
															2764
														],
														"referencedDeclaration": 2764,
														"src": "6551:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6551:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2721,
												"id": 2727,
												"nodeType": "Return",
												"src": "6544:84:6"
											}
										]
									},
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "6257:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2729,
												"src": "6466:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2729,
												"src": "6482:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2716,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6482:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6465:35:6"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2729,
												"src": "6519:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6518:14:6"
									},
									"scope": 2795,
									"src": "6436:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2763,
										"nodeType": "Block",
										"src": "6955:298:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2743,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "6985:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2742,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "6974:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6974:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6966:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6966:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2747,
												"nodeType": "ExpressionStatement",
												"src": "6966:69:6"
											},
											{
												"assignments": [
													2749,
													2751
												],
												"declarations": [
													{
														"constant": false,
														"id": 2749,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2763,
														"src": "7109:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7109:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2751,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2763,
														"src": "7123:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2750,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7123:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2756,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2754,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "7170:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2752,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "7150:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7150:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7150:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2758,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "7211:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2759,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "7220:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2760,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2736,
															"src": "7232:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2757,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "7193:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2740,
												"id": 2762,
												"nodeType": "Return",
												"src": "7186:59:6"
											}
										]
									},
									"documentation": {
										"id": 2730,
										"nodeType": "StructuredDocumentation",
										"src": "6644:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2764,
												"src": "6860:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2764,
												"src": "6876:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6876:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2764,
												"src": "6895:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6895:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6859:63:6"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2764,
												"src": "6941:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6941:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6940:14:6"
									},
									"scope": 2795,
									"src": "6830:423:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "7390:613:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2775,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2766,
													"src": "7405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2791,
													"nodeType": "Block",
													"src": "7464:532:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2779,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2768,
																		"src": "7550:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7550:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7570:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7550:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2789,
																"nodeType": "Block",
																"src": "7930:55:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2786,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2770,
																					"src": "7956:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2785,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7949:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7949:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2788,
																		"nodeType": "ExpressionStatement",
																		"src": "7949:20:6"
																	}
																]
															},
															"id": 2790,
															"nodeType": "IfStatement",
															"src": "7546:439:6",
															"trueBody": {
																"id": 2784,
																"nodeType": "Block",
																"src": "7573:351:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7761:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7784:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7813:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7807:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7807:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7788:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7857:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7861:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7853:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7853:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7874:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7846:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7846:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7846:44:6"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 2768,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7813:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2768,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7861:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 2783,
																		"nodeType": "InlineAssembly",
																		"src": "7752:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 2792,
												"nodeType": "IfStatement",
												"src": "7401:595:6",
												"trueBody": {
													"id": 2778,
													"nodeType": "Block",
													"src": "7414:44:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2776,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2768,
																"src": "7436:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2774,
															"id": 2777,
															"nodeType": "Return",
															"src": "7429:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2794,
												"src": "7288:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7288:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2794,
												"src": "7302:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7302:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2794,
												"src": "7327:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7327:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7287:67:6"
									},
									"returnParameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2794,
												"src": "7376:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7376:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7375:14:6"
									},
									"scope": 2795,
									"src": "7261:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2796,
							"src": "141:7865:6"
						}
					],
					"src": "35:7971:6"
				},
				"id": 6
			},
			"farms-pools/utils/Context.sol": {
				"ast": {
					"absolutePath": "farms-pools/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2818
						]
					},
					"id": 2819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2797,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2818,
							"linearizedBaseContracts": [
								2818
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2805,
										"nodeType": "Block",
										"src": "683:36:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "701:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "701:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2801,
												"id": 2804,
												"nodeType": "Return",
												"src": "694:17:7"
											}
										]
									},
									"documentation": null,
									"id": 2806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:2:7"
									},
									"returnParameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2806,
												"src": "666:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "665:17:7"
									},
									"scope": 2818,
									"src": "613:106:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "792:168:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2811,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "803:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$2818",
														"typeString": "contract Context"
													}
												},
												"id": 2812,
												"nodeType": "ExpressionStatement",
												"src": "803:4:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2813,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "944:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "944:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2810,
												"id": 2815,
												"nodeType": "Return",
												"src": "937:15:7"
											}
										]
									},
									"documentation": null,
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:2:7"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2817,
												"src": "778:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "778:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:14:7"
									},
									"scope": 2818,
									"src": "727:233:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2819,
							"src": "580:383:7"
						}
					],
					"src": "35:928:7"
				},
				"id": 7
			},
			"farms-pools/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "farms-pools/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							2910
						]
					},
					"id": 2911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2820,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:8"
						},
						{
							"absolutePath": "farms-pools/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2821,
							"nodeType": "ImportDirective",
							"scope": 2911,
							"sourceUnit": 2819,
							"src": "70:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2823,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2818,
										"src": "576:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$2818",
											"typeString": "contract Context"
										}
									},
									"id": 2824,
									"nodeType": "InheritanceSpecifier",
									"src": "576:7:8"
								}
							],
							"contractDependencies": [
								2818
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2822,
								"nodeType": "StructuredDocumentation",
								"src": "97:447:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2910,
							"linearizedBaseContracts": [
								2910,
								2818
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "591:75:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 2829,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2829,
												"src": "685:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "684:17:8"
									},
									"src": "672:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "710:72:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 2834,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2834,
												"src": "803:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:17:8"
									},
									"src": "788:32:8"
								},
								{
									"constant": false,
									"id": 2836,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2910,
									"src": "828:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2835,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "828:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "956:34:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2840,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "967:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "977:5:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "967:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2843,
												"nodeType": "ExpressionStatement",
												"src": "967:15:8"
											}
										]
									},
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "857:69:8",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2845,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:8"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:8"
									},
									"scope": 2910,
									"src": "932:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "1143:33:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2851,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2836,
													"src": "1161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2850,
												"id": 2852,
												"nodeType": "Return",
												"src": "1154:14:8"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "998:86:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1105:2:8"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2854,
												"src": "1137:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1137:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1136:6:8"
									},
									"scope": 2910,
									"src": "1090:86:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "1396:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1415:9:8",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2858,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2854,
																	"src": "1416:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1416:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1426:18:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1407:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "1407:38:8"
											},
											{
												"id": 2864,
												"nodeType": "PlaceholderStatement",
												"src": "1456:1:8"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "1184:181:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2866,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:8"
									},
									"src": "1371:94:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "1674:72:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2870,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "1693:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1693:8:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1703:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1685:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2874,
												"nodeType": "ExpressionStatement",
												"src": "1685:41:8"
											},
											{
												"id": 2875,
												"nodeType": "PlaceholderStatement",
												"src": "1737:1:8"
											}
										]
									},
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "1473:173:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2877,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1671:2:8"
									},
									"src": "1652:94:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2892,
										"nodeType": "Block",
										"src": "1939:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2883,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "1950:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1960:4:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1950:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2886,
												"nodeType": "ExpressionStatement",
												"src": "1950:14:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2888,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2806,
																"src": "1987:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1987:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2887,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "1980:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2891,
												"nodeType": "EmitStatement",
												"src": "1975:25:8"
											}
										]
									},
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "1754:130:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2881,
											"modifierName": {
												"argumentTypes": null,
												"id": 2880,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2866,
												"src": "1925:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1925:13:8"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:2:8"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:0:8"
									},
									"scope": 2910,
									"src": "1890:118:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "2197:72:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2899,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "2208:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2218:5:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2208:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2902,
												"nodeType": "ExpressionStatement",
												"src": "2208:15:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2904,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2806,
																"src": "2248:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2248:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2903,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "2239:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2907,
												"nodeType": "EmitStatement",
												"src": "2234:27:8"
											}
										]
									},
									"documentation": {
										"id": 2894,
										"nodeType": "StructuredDocumentation",
										"src": "2016:127:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2897,
											"modifierName": {
												"argumentTypes": null,
												"id": 2896,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2877,
												"src": "2186:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2186:10:8"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2166:2:8"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2197:0:8"
									},
									"scope": 2910,
									"src": "2149:120:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2911,
							"src": "546:1726:8"
						}
					],
					"src": "35:2237:8"
				},
				"id": 8
			}
		}
	}
}